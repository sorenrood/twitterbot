{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1","program":"C:\\Users\\soren\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=5b59d302ac5c455c","-C","extra-filename=-5b59d302ac5c455c","--out-dir","c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libbytes-a05d6c753a111fd4.rmeta","--extern","futures_core=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libfutures_core-4f6ea5e376d8a89b.rmeta","--extern","futures_sink=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libfutures_sink-cad66efd55a65400.rmeta","--extern","log=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\liblog-b61be483f14d458f.rmeta","--extern","pin_project_lite=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libpin_project_lite-8a7f6495103e96d2.rmeta","--extern","tokio=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libtokio-2f1e7634d5648b50.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\soren\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libtokio_util-5b59d302ac5c455c.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[11096268819718383682,8334673328557894497]},"crate_root":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15398797713215362700,4976698103976286445]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10603353953142139958,10157248215032500084]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17317665688008519529,13747496639983646600]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12322858657597006180,9748267946541516489]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2533451466434564290,7489450206404491421]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[1195890954967971036,3666944676093019425]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11096941386843351414,11836211980131019053]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15799063303236315406,9996825484752469054]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[487386117136351835,9556812145388241379]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9004202534995267337,7744433384330796472]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[11536514413351886033,2628971975106334147]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4138595876298155114,17368111708674486723]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1797849565229181012,12620398705937173066]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","num":14,"id":{"name":"bytes","disambiguator":[4110572562735404158,3044052432345342021]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":15,"id":{"name":"tokio","disambiguator":[10121065149681751391,12485831589782638405]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[12506807925672283948,11398578548114887137]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","num":17,"id":{"name":"futures_core","disambiguator":[12518388027289400166,1670956482713401461]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":18,"id":{"name":"mio","disambiguator":[6743300519231901155,4749712646601174112]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":19,"id":{"name":"net2","disambiguator":[4105938819097857638,12531264107659424296]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":20,"id":{"name":"winapi","disambiguator":[14363448520486117723,8937158445358139579]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":21,"id":{"name":"cfg_if","disambiguator":[9763502859368084025,14058520404490077848]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":22,"id":{"name":"iovec","disambiguator":[9121632340184558142,7045387727052053297]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":23,"id":{"name":"slab","disambiguator":[5682607675429903092,13045481240286995656]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":24,"id":{"name":"miow","disambiguator":[9173594320548852826,10996381022005715195]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":25,"id":{"name":"kernel32","disambiguator":[10284527825147678124,17996013646871010359]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":26,"id":{"name":"winapi","disambiguator":[8821656882035471986,680725125993653175]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":27,"id":{"name":"ws2_32","disambiguator":[12887093282209071612,10511796282312725014]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","num":28,"id":{"name":"log","disambiguator":[17366883177114214153,18136044970669002398]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":29,"id":{"name":"fnv","disambiguator":[14124919517868363929,4774138263748666395]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":30,"id":{"name":"tokio_macros","disambiguator":[4842319524020488818,1744426822675557829]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":31,"id":{"name":"memchr","disambiguator":[12430628795972932368,12265404594230732145]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":32,"id":{"name":"futures_sink","disambiguator":[18008824966374254721,3238516994141512209]}}],"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850583,"byte_end":6850593,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850632,"byte_end":6850639,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850678,"byte_end":6850685,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850723,"byte_end":6850729,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850731,"byte_end":6850742,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850790,"byte_end":6850800,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850849,"byte_end":6850860,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850922,"byte_end":6850942,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850944,"byte_end":6850969,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6851018,"byte_end":6851028,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6851030,"byte_end":6851045,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"! Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"! [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"! semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":455}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"! Utilities for encoding and decoding frames.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850135,"byte_end":6850182,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850183,"byte_end":6850186,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850187,"byte_end":6850255,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850256,"byte_end":6850331,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850332,"byte_end":6850380,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850381,"byte_end":6850384,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850385,"byte_end":6850424,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850425,"byte_end":6850466,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"! [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850467,"byte_end":6850504,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"! [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850505,"byte_end":6850537,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852322,"byte_end":6852332,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851174,"byte_end":6851259,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851260,"byte_end":6851263,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851264,"byte_end":6851302,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851303,"byte_end":6851341,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851342,"byte_end":6851345,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851346,"byte_end":6851359,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851360,"byte_end":6851363,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851364,"byte_end":6851445,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851446,"byte_end":6851449,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851450,"byte_end":6851489,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851490,"byte_end":6851523,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851524,"byte_end":6851553,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851554,"byte_end":6851557,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851558,"byte_end":6851565,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851566,"byte_end":6851584,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851585,"byte_end":6851615,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851616,"byte_end":6851640,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851641,"byte_end":6851648,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851649,"byte_end":6851678,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851679,"byte_end":6851731,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851732,"byte_end":6851735,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851736,"byte_end":6851754,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851755,"byte_end":6851772,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851773,"byte_end":6851853,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851854,"byte_end":6851888,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851889,"byte_end":6851942,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851943,"byte_end":6851954,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851955,"byte_end":6851962,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851963,"byte_end":6851968,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6851969,"byte_end":6852007,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852008,"byte_end":6852061,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852062,"byte_end":6852120,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852121,"byte_end":6852200,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852201,"byte_end":6852213,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852214,"byte_end":6852221,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852222,"byte_end":6852229,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852230,"byte_end":6852233,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852434,"byte_end":6852437,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn () -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852361,"byte_end":6852422,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853749,"byte_end":6853756,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853152,"byte_end":6853187,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853188,"byte_end":6853191,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853192,"byte_end":6853261,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853262,"byte_end":6853341,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853342,"byte_end":6853414,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853415,"byte_end":6853439,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853440,"byte_end":6853443,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853444,"byte_end":6853512,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853513,"byte_end":6853590,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853591,"byte_end":6853652,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853653,"byte_end":6853656,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853657,"byte_end":6853693,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853694,"byte_end":6853738,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853804,"byte_end":6853808,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853763,"byte_end":6853794,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854574,"byte_end":6854579,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853815,"byte_end":6853867,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853872,"byte_end":6853875,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853880,"byte_end":6853949,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6853954,"byte_end":6854024,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854029,"byte_end":6854075,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854080,"byte_end":6854083,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854088,"byte_end":6854164,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854169,"byte_end":6854244,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854249,"byte_end":6854324,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854329,"byte_end":6854369,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854374,"byte_end":6854377,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854382,"byte_end":6854456,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854461,"byte_end":6854507,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854512,"byte_end":6854515,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854520,"byte_end":6854564,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857515,"byte_end":6857521,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn (&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854603,"byte_end":6854668,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854673,"byte_end":6854676,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854681,"byte_end":6854755,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854760,"byte_end":6854832,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854837,"byte_end":6854910,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854915,"byte_end":6854958,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854963,"byte_end":6854966,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6854971,"byte_end":6855044,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855049,"byte_end":6855112,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855117,"byte_end":6855192,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855197,"byte_end":6855272,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855277,"byte_end":6855300,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855305,"byte_end":6855308,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855313,"byte_end":6855385,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855390,"byte_end":6855464,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855469,"byte_end":6855539,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855544,"byte_end":6855547,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855552,"byte_end":6855620,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855625,"byte_end":6855696,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855701,"byte_end":6855781,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855786,"byte_end":6855798,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855803,"byte_end":6855806,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855811,"byte_end":6855881,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855886,"byte_end":6855961,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6855966,"byte_end":6856003,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856008,"byte_end":6856011,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856016,"byte_end":6856052,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856057,"byte_end":6856101,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856106,"byte_end":6856109,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856114,"byte_end":6856137,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856142,"byte_end":6856145,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856150,"byte_end":6856224,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856229,"byte_end":6856303,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856308,"byte_end":6856361,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856366,"byte_end":6856369,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856374,"byte_end":6856445,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856450,"byte_end":6856520,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856525,"byte_end":6856541,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856546,"byte_end":6856549,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856554,"byte_end":6856567,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856572,"byte_end":6856590,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856595,"byte_end":6856600,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856605,"byte_end":6856631,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856636,"byte_end":6856673,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856678,"byte_end":6856683,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856688,"byte_end":6856709,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856714,"byte_end":6856719,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856724,"byte_end":6856754,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856759,"byte_end":6856773,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856778,"byte_end":6856809,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856814,"byte_end":6856847,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856852,"byte_end":6856855,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856860,"byte_end":6856953,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856958,"byte_end":6856976,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856981,"byte_end":6856984,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6856989,"byte_end":6857061,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857066,"byte_end":6857126,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857131,"byte_end":6857183,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857188,"byte_end":6857250,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857255,"byte_end":6857322,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857327,"byte_end":6857330,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857335,"byte_end":6857363,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857368,"byte_end":6857377,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857382,"byte_end":6857387,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857392,"byte_end":6857399,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857404,"byte_end":6857407,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857412,"byte_end":6857481,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857486,"byte_end":6857507,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858380,"byte_end":6858390,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn (&mut self, buf: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857602,"byte_end":6857674,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857679,"byte_end":6857728,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857733,"byte_end":6857736,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857741,"byte_end":6857809,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857814,"byte_end":6857881,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857886,"byte_end":6857954,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6857959,"byte_end":6858007,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858012,"byte_end":6858015,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858020,"byte_end":6858088,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858093,"byte_end":6858168,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858173,"byte_end":6858248,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858253,"byte_end":6858325,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858330,"byte_end":6858372,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859999,"byte_end":6860005,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn <T> (self, io: T) -> Framed<T, Self>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858808,"byte_end":6858888,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858893,"byte_end":6858969,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858974,"byte_end":6858977,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6858982,"byte_end":6859057,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859062,"byte_end":6859132,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859137,"byte_end":6859208,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859213,"byte_end":6859285,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859290,"byte_end":6859348,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859353,"byte_end":6859356,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859361,"byte_end":6859430,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859435,"byte_end":6859510,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859515,"byte_end":6859591,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859596,"byte_end":6859618,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859623,"byte_end":6859626,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859631,"byte_end":6859704,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859709,"byte_end":6859782,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859787,"byte_end":6859863,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859868,"byte_end":6859871,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859876,"byte_end":6859913,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859918,"byte_end":6859950,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6859955,"byte_end":6859991,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860339,"byte_end":6860346,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860184,"byte_end":6860256,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860257,"byte_end":6860277,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860278,"byte_end":6860281,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860282,"byte_end":6860328,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860611,"byte_end":6860616,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860359,"byte_end":6860391,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860396,"byte_end":6860399,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860404,"byte_end":6860481,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860486,"byte_end":6860542,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860547,"byte_end":6860550,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860555,"byte_end":6860601,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860967,"byte_end":6860973,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn (&mut self, item: Item, dst: &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860640,"byte_end":6860685,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860690,"byte_end":6860693,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860698,"byte_end":6860772,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860777,"byte_end":6860857,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860862,"byte_end":6860900,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860905,"byte_end":6860908,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6860913,"byte_end":6860959,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6862122,"byte_end":6862128,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":780}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6862564,"byte_end":6862566,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6862577,"byte_end":6862582,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864372,"byte_end":6864375,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn (inner: T, codec: U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863030,"byte_end":6863110,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863115,"byte_end":6863196,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863201,"byte_end":6863204,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863209,"byte_end":6863284,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863289,"byte_end":6863359,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863364,"byte_end":6863433,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863438,"byte_end":6863510,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863515,"byte_end":6863573,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863578,"byte_end":6863581,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863586,"byte_end":6863657,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863662,"byte_end":6863739,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863744,"byte_end":6863820,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863825,"byte_end":6863847,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863852,"byte_end":6863855,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863860,"byte_end":6863933,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6863938,"byte_end":6864011,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864016,"byte_end":6864092,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864097,"byte_end":6864100,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864105,"byte_end":6864142,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864147,"byte_end":6864179,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864184,"byte_end":6864221,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864226,"byte_end":6864264,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864269,"byte_end":6864360,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865923,"byte_end":6865936,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn (inner: T, codec: U, capacity: usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864527,"byte_end":6864607,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864612,"byte_end":6864693,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864698,"byte_end":6864747,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864752,"byte_end":6864755,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864760,"byte_end":6864835,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864840,"byte_end":6864910,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864915,"byte_end":6864984,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6864989,"byte_end":6865061,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865066,"byte_end":6865124,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865129,"byte_end":6865132,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865137,"byte_end":6865208,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865213,"byte_end":6865290,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865295,"byte_end":6865371,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865376,"byte_end":6865398,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865403,"byte_end":6865406,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865411,"byte_end":6865484,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865489,"byte_end":6865562,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865567,"byte_end":6865643,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865648,"byte_end":6865651,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865656,"byte_end":6865693,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865698,"byte_end":6865730,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865735,"byte_end":6865772,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865777,"byte_end":6865815,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6865820,"byte_end":6865911,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867805,"byte_end":6867815,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn (parts: FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866227,"byte_end":6866307,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866312,"byte_end":6866393,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866398,"byte_end":6866401,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866406,"byte_end":6866481,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866486,"byte_end":6866556,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866561,"byte_end":6866632,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866637,"byte_end":6866709,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866714,"byte_end":6866772,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866777,"byte_end":6866780,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866785,"byte_end":6866856,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866861,"byte_end":6866938,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866943,"byte_end":6867019,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867024,"byte_end":6867046,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867051,"byte_end":6867054,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867059,"byte_end":6867138,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867143,"byte_end":6867220,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867225,"byte_end":6867228,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867233,"byte_end":6867306,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867311,"byte_end":6867384,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867389,"byte_end":6867465,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867470,"byte_end":6867473,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867478,"byte_end":6867515,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867520,"byte_end":6867552,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867557,"byte_end":6867595,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867600,"byte_end":6867638,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867643,"byte_end":6867697,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6867702,"byte_end":6867793,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868504,"byte_end":6868511,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868221,"byte_end":6868284,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868289,"byte_end":6868302,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868307,"byte_end":6868310,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868315,"byte_end":6868390,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868395,"byte_end":6868465,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868470,"byte_end":6868492,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868872,"byte_end":6868879,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868581,"byte_end":6868652,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868657,"byte_end":6868670,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868675,"byte_end":6868678,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868683,"byte_end":6868758,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868763,"byte_end":6868833,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868838,"byte_end":6868860,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869212,"byte_end":6869217,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6868961,"byte_end":6869019,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869024,"byte_end":6869037,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869042,"byte_end":6869045,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869050,"byte_end":6869124,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869129,"byte_end":6869200,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869549,"byte_end":6869558,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869290,"byte_end":6869356,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869361,"byte_end":6869374,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869379,"byte_end":6869382,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869387,"byte_end":6869461,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869466,"byte_end":6869537,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869698,"byte_end":6869709,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869643,"byte_end":6869686,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870036,"byte_end":6870046,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869771,"byte_end":6869834,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869839,"byte_end":6869842,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869847,"byte_end":6869922,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6869927,"byte_end":6869997,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870002,"byte_end":6870024,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870441,"byte_end":6870451,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn (self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870119,"byte_end":6870193,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870198,"byte_end":6870239,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870244,"byte_end":6870247,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870252,"byte_end":6870327,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870332,"byte_end":6870402,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870407,"byte_end":6870429,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874813,"byte_end":6874824,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874538,"byte_end":6874609,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874610,"byte_end":6874682,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874683,"byte_end":6874743,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874744,"byte_end":6874747,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874748,"byte_end":6874784,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874910,"byte_end":6874912,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874837,"byte_end":6874901,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874944,"byte_end":6874949,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874922,"byte_end":6874935,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6875014,"byte_end":6875022,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874959,"byte_end":6875005,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6875109,"byte_end":6875118,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6875039,"byte_end":6875100,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6875351,"byte_end":6875354,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn <I> (io: T, codec: U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6875299,"byte_end":6875339,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876083,"byte_end":6876093,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":694}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876551,"byte_end":6876554,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn (inner: T, decoder: D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876483,"byte_end":6876539,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876871,"byte_end":6876884,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn (inner: T, decoder: D, capacity: usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876755,"byte_end":6876837,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876842,"byte_end":6876859,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877527,"byte_end":6877534,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877240,"byte_end":6877303,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877308,"byte_end":6877325,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877330,"byte_end":6877333,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877338,"byte_end":6877413,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877418,"byte_end":6877488,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877493,"byte_end":6877515,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877885,"byte_end":6877892,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877590,"byte_end":6877661,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877666,"byte_end":6877683,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877688,"byte_end":6877691,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877696,"byte_end":6877771,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877776,"byte_end":6877846,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877851,"byte_end":6877873,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878229,"byte_end":6878239,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877960,"byte_end":6878027,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878032,"byte_end":6878035,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878040,"byte_end":6878115,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878120,"byte_end":6878190,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878195,"byte_end":6878217,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878354,"byte_end":6878361,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn (&self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878292,"byte_end":6878342,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878490,"byte_end":6878501,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn (&mut self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878420,"byte_end":6878478,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878627,"byte_end":6878638,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878572,"byte_end":6878615,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6884554,"byte_end":6884565,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6884989,"byte_end":6884992,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn (inner: T, encoder: E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6884920,"byte_end":6884977,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885517,"byte_end":6885524,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885229,"byte_end":6885292,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885297,"byte_end":6885315,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885320,"byte_end":6885323,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885328,"byte_end":6885403,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885408,"byte_end":6885478,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885483,"byte_end":6885505,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885876,"byte_end":6885883,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885580,"byte_end":6885651,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885656,"byte_end":6885674,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885679,"byte_end":6885682,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885687,"byte_end":6885762,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885767,"byte_end":6885837,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885842,"byte_end":6885864,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886221,"byte_end":6886231,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885951,"byte_end":6886019,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886024,"byte_end":6886027,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886032,"byte_end":6886107,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886112,"byte_end":6886182,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886187,"byte_end":6886209,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886346,"byte_end":6886353,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886284,"byte_end":6886334,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886482,"byte_end":6886493,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886412,"byte_end":6886470,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":498},{"krate":0,"index":508},{"krate":0,"index":506},{"krate":0,"index":505},{"krate":0,"index":370},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":524},{"krate":0,"index":522},{"krate":0,"index":521},{"krate":0,"index":372},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"! Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6892828,"byte_end":6892880,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6892881,"byte_end":6892884,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6892885,"byte_end":6892955,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6892956,"byte_end":6893014,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"! `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893015,"byte_end":6893087,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893088,"byte_end":6893158,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893159,"byte_end":6893226,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893227,"byte_end":6893230,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting started","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893231,"byte_end":6893252,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893253,"byte_end":6893256,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893257,"byte_end":6893332,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893333,"byte_end":6893404,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893405,"byte_end":6893476,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893477,"byte_end":6893547,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893548,"byte_end":6893588,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893589,"byte_end":6893592,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893593,"byte_end":6893600,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893601,"byte_end":6893644,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893645,"byte_end":6893703,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893704,"byte_end":6893707,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893708,"byte_end":6893763,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893764,"byte_end":6893806,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893807,"byte_end":6893812,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"!     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893813,"byte_end":6893865,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893866,"byte_end":6893871,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893872,"byte_end":6893894,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893895,"byte_end":6893902,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893903,"byte_end":6893906,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893907,"byte_end":6893979,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"! encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6893980,"byte_end":6894051,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"! payload length:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894052,"byte_end":6894071,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894072,"byte_end":6894075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894076,"byte_end":6894087,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! +----------+--------------------------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894088,"byte_end":6894137,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"! | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894138,"byte_end":6894187,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"! +----------+--------------------------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894188,"byte_end":6894237,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894238,"byte_end":6894245,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894246,"byte_end":6894249,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Specifically, given the following:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894250,"byte_end":6894288,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894289,"byte_end":6894292,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894293,"byte_end":6894300,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"! use tokio::prelude::*;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894301,"byte_end":6894327,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894328,"byte_end":6894386,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894387,"byte_end":6894390,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! use futures::SinkExt;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894391,"byte_end":6894416,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! use bytes::Bytes;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894417,"byte_end":6894438,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894439,"byte_end":6894442,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894443,"byte_end":6894519,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"! where","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894520,"byte_end":6894529,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"!     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894530,"byte_end":6894572,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894573,"byte_end":6894578,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894579,"byte_end":6894652,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"!     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894653,"byte_end":6894700,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894701,"byte_end":6894704,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"!     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894705,"byte_end":6894742,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894743,"byte_end":6894757,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894758,"byte_end":6894763,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894764,"byte_end":6894771,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894772,"byte_end":6894775,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The encoded frame will look like this:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894776,"byte_end":6894818,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894819,"byte_end":6894822,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894823,"byte_end":6894834,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"! +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894835,"byte_end":6894874,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894875,"byte_end":6894914,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"! +------------------+--------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894915,"byte_end":6894954,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894955,"byte_end":6894962,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894963,"byte_end":6894966,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Decoding","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894967,"byte_end":6894981,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894982,"byte_end":6894985,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6894986,"byte_end":6895061,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"! such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895062,"byte_end":6895135,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"! entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895136,"byte_end":6895202,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895203,"byte_end":6895272,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"! examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895273,"byte_end":6895338,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895339,"byte_end":6895342,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Example 1","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895343,"byte_end":6895359,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895360,"byte_end":6895363,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895364,"byte_end":6895440,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895441,"byte_end":6895482,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895483,"byte_end":6895486,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895487,"byte_end":6895494,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895495,"byte_end":6895526,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895527,"byte_end":6895577,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895578,"byte_end":6895619,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895620,"byte_end":6895655,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895656,"byte_end":6895704,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895705,"byte_end":6895736,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895737,"byte_end":6895785,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895786,"byte_end":6895835,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895836,"byte_end":6895858,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895859,"byte_end":6895866,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895867,"byte_end":6895889,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895890,"byte_end":6895897,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895898,"byte_end":6895901,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895902,"byte_end":6895950,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895951,"byte_end":6895954,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895955,"byte_end":6895966,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6895967,"byte_end":6896019,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896020,"byte_end":6896085,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896086,"byte_end":6896151,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896152,"byte_end":6896217,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896218,"byte_end":6896225,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896226,"byte_end":6896229,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896230,"byte_end":6896306,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896307,"byte_end":6896381,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896382,"byte_end":6896454,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"! length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896455,"byte_end":6896531,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"! frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896532,"byte_end":6896574,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896575,"byte_end":6896578,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! ## Example 2","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896579,"byte_end":6896595,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896596,"byte_end":6896599,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896600,"byte_end":6896675,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896676,"byte_end":6896717,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896718,"byte_end":6896721,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896722,"byte_end":6896729,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896730,"byte_end":6896761,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896762,"byte_end":6896812,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896813,"byte_end":6896854,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896855,"byte_end":6896890,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896891,"byte_end":6896939,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896940,"byte_end":6896971,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6896972,"byte_end":6897020,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"!     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897021,"byte_end":6897080,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897081,"byte_end":6897103,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897104,"byte_end":6897111,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897112,"byte_end":6897134,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897135,"byte_end":6897142,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897143,"byte_end":6897146,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897147,"byte_end":6897195,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897196,"byte_end":6897199,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897200,"byte_end":6897211,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!          INPUT                        DECODED","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897212,"byte_end":6897261,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"! +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897262,"byte_end":6897316,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"! | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897317,"byte_end":6897371,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"! +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897372,"byte_end":6897426,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897427,"byte_end":6897434,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897435,"byte_end":6897438,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897439,"byte_end":6897512,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"! frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897513,"byte_end":6897580,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897581,"byte_end":6897584,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ## Example 3","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897585,"byte_end":6897601,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897602,"byte_end":6897605,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897606,"byte_end":6897682,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897683,"byte_end":6897755,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"! **includes** the frame head length.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897756,"byte_end":6897795,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897796,"byte_end":6897799,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897800,"byte_end":6897807,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897808,"byte_end":6897839,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897840,"byte_end":6897890,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897891,"byte_end":6897932,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897933,"byte_end":6897968,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6897969,"byte_end":6898017,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898018,"byte_end":6898049,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898050,"byte_end":6898097,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"!     .num_skip(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898098,"byte_end":6898118,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898119,"byte_end":6898141,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898142,"byte_end":6898149,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898150,"byte_end":6898172,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898173,"byte_end":6898180,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898181,"byte_end":6898184,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898185,"byte_end":6898233,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898234,"byte_end":6898237,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898238,"byte_end":6898249,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898250,"byte_end":6898302,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898303,"byte_end":6898368,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898369,"byte_end":6898434,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898435,"byte_end":6898500,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898501,"byte_end":6898508,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898509,"byte_end":6898512,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898513,"byte_end":6898585,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898586,"byte_end":6898661,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898662,"byte_end":6898734,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"! head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898735,"byte_end":6898811,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"! the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898812,"byte_end":6898885,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898886,"byte_end":6898889,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Example 4","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898890,"byte_end":6898906,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898907,"byte_end":6898910,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898911,"byte_end":6898985,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"! frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6898986,"byte_end":6899053,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899054,"byte_end":6899057,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899058,"byte_end":6899065,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899066,"byte_end":6899097,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899098,"byte_end":6899148,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899149,"byte_end":6899190,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899191,"byte_end":6899226,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899227,"byte_end":6899275,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899276,"byte_end":6899307,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899308,"byte_end":6899356,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899357,"byte_end":6899377,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899378,"byte_end":6899400,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899401,"byte_end":6899408,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899409,"byte_end":6899431,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899432,"byte_end":6899439,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899440,"byte_end":6899443,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899444,"byte_end":6899492,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899493,"byte_end":6899496,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899497,"byte_end":6899508,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899509,"byte_end":6899535,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899536,"byte_end":6899581,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899582,"byte_end":6899627,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899628,"byte_end":6899673,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899674,"byte_end":6899677,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"!                  DECODED","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899678,"byte_end":6899706,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899707,"byte_end":6899752,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899753,"byte_end":6899798,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899799,"byte_end":6899844,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899845,"byte_end":6899852,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899853,"byte_end":6899856,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899857,"byte_end":6899929,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"! head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6899930,"byte_end":6900006,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"! usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900007,"byte_end":6900077,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"! `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900078,"byte_end":6900147,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"! process the frame head as needed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900148,"byte_end":6900185,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900186,"byte_end":6900189,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900190,"byte_end":6900264,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"! additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900265,"byte_end":6900319,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900320,"byte_end":6900323,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! ## Example 5","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900324,"byte_end":6900340,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900341,"byte_end":6900344,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900345,"byte_end":6900418,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900419,"byte_end":6900495,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900496,"byte_end":6900570,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! included.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900571,"byte_end":6900584,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900585,"byte_end":6900588,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900589,"byte_end":6900596,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900597,"byte_end":6900628,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900629,"byte_end":6900679,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900680,"byte_end":6900721,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900722,"byte_end":6900757,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900758,"byte_end":6900807,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900808,"byte_end":6900839,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900840,"byte_end":6900888,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"!     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900889,"byte_end":6900933,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900934,"byte_end":6900956,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900957,"byte_end":6900964,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900965,"byte_end":6900987,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900988,"byte_end":6900995,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6900996,"byte_end":6900999,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901000,"byte_end":6901048,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901049,"byte_end":6901052,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901053,"byte_end":6901064,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901065,"byte_end":6901091,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901092,"byte_end":6901142,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901143,"byte_end":6901193,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901194,"byte_end":6901244,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901245,"byte_end":6901248,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901249,"byte_end":6901269,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901270,"byte_end":6901300,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901301,"byte_end":6901331,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901332,"byte_end":6901362,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901363,"byte_end":6901370,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901371,"byte_end":6901374,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901375,"byte_end":6901448,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"! case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901449,"byte_end":6901524,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"! identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901525,"byte_end":6901597,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"! second half of the head is needed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901598,"byte_end":6901636,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901637,"byte_end":6901640,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901641,"byte_end":6901715,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"! to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901716,"byte_end":6901792,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"! skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901793,"byte_end":6901866,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"! second half of the head.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901867,"byte_end":6901895,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901896,"byte_end":6901899,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! ## Example 6","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901900,"byte_end":6901916,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901917,"byte_end":6901920,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901921,"byte_end":6901994,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6901995,"byte_end":6902071,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902072,"byte_end":6902146,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"! included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902147,"byte_end":6902219,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"! length.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902220,"byte_end":6902231,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902232,"byte_end":6902235,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902236,"byte_end":6902243,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902244,"byte_end":6902275,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902276,"byte_end":6902326,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902327,"byte_end":6902368,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902369,"byte_end":6902404,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902405,"byte_end":6902454,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902455,"byte_end":6902486,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902487,"byte_end":6902552,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"!     .num_skip(3)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902553,"byte_end":6902573,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902574,"byte_end":6902596,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902597,"byte_end":6902604,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902605,"byte_end":6902612,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902613,"byte_end":6902616,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902617,"byte_end":6902665,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902666,"byte_end":6902669,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902670,"byte_end":6902681,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902682,"byte_end":6902708,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902709,"byte_end":6902759,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902760,"byte_end":6902810,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902811,"byte_end":6902861,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902862,"byte_end":6902865,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902866,"byte_end":6902886,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902887,"byte_end":6902917,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902918,"byte_end":6902948,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902949,"byte_end":6902979,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902980,"byte_end":6902987,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902988,"byte_end":6902991,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6902992,"byte_end":6903065,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"! represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903066,"byte_end":6903140,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"! The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903141,"byte_end":6903215,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"! Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903216,"byte_end":6903289,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"! anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903290,"byte_end":6903366,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"! is read from the byte stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903367,"byte_end":6903400,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903401,"byte_end":6903404,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! # Encoding","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903405,"byte_end":6903419,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903420,"byte_end":6903423,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903424,"byte_end":6903499,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"! such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903500,"byte_end":6903572,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"! There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903573,"byte_end":6903641,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"! protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903642,"byte_end":6903718,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"! be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903719,"byte_end":6903760,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903761,"byte_end":6903764,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903765,"byte_end":6903835,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"! configuration:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903836,"byte_end":6903854,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903855,"byte_end":6903858,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903859,"byte_end":6903866,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903867,"byte_end":6903899,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903900,"byte_end":6903950,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"! # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903951,"byte_end":6903995,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"! # let _ =","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6903996,"byte_end":6904009,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904010,"byte_end":6904045,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904046,"byte_end":6904077,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"!     .new_write(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904078,"byte_end":6904101,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904102,"byte_end":6904109,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904110,"byte_end":6904132,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904133,"byte_end":6904140,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904141,"byte_end":6904144,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904145,"byte_end":6904195,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904196,"byte_end":6904199,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904200,"byte_end":6904211,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"! +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904212,"byte_end":6904245,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"! |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904246,"byte_end":6904279,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"! +------------+--------------+","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904280,"byte_end":6904313,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904314,"byte_end":6904321,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904322,"byte_end":6904325,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904326,"byte_end":6904406,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"! [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904407,"byte_end":6904449,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"! [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904450,"byte_end":6904494,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"! [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904495,"byte_end":6904540,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"! [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904541,"byte_end":6904588,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"! [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904589,"byte_end":6904627,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"! [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904628,"byte_end":6904698,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6905260,"byte_end":6905267,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904942,"byte_end":6904997,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6904998,"byte_end":6905001,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6905002,"byte_end":6905077,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6905078,"byte_end":6905158,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6905159,"byte_end":6905218,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6905938,"byte_end":6905963,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6905853,"byte_end":6905926,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906308,"byte_end":6906328,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6905984,"byte_end":6906058,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906059,"byte_end":6906062,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906063,"byte_end":6906142,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906143,"byte_end":6906186,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906187,"byte_end":6906190,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906191,"byte_end":6906244,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906245,"byte_end":6906248,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906249,"byte_end":6906279,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906672,"byte_end":6906675,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906581,"byte_end":6906660,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906902,"byte_end":6906909,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906799,"byte_end":6906874,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906879,"byte_end":6906890,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907131,"byte_end":6907147,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906959,"byte_end":6907000,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907005,"byte_end":6907008,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907013,"byte_end":6907086,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907091,"byte_end":6907119,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907568,"byte_end":6907588,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn (&mut self, val: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907212,"byte_end":6907246,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907251,"byte_end":6907254,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907259,"byte_end":6907329,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907334,"byte_end":6907409,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907414,"byte_end":6907486,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6907491,"byte_end":6907556,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912864,"byte_end":6912867,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912322,"byte_end":6912397,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912402,"byte_end":6912413,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912418,"byte_end":6912421,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912426,"byte_end":6912440,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912445,"byte_end":6912448,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912453,"byte_end":6912460,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912465,"byte_end":6912496,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912501,"byte_end":6912549,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912554,"byte_end":6912557,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912562,"byte_end":6912603,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912608,"byte_end":6912643,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912648,"byte_end":6912679,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912684,"byte_end":6912715,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912720,"byte_end":6912749,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912754,"byte_end":6912774,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912779,"byte_end":6912801,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912806,"byte_end":6912813,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912818,"byte_end":6912840,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912845,"byte_end":6912852,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914052,"byte_end":6914062,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913531,"byte_end":6913580,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913585,"byte_end":6913588,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913593,"byte_end":6913625,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913630,"byte_end":6913633,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913638,"byte_end":6913706,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913711,"byte_end":6913714,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913719,"byte_end":6913733,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913738,"byte_end":6913741,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913746,"byte_end":6913753,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913758,"byte_end":6913789,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913794,"byte_end":6913842,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913847,"byte_end":6913850,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913855,"byte_end":6913896,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913901,"byte_end":6913936,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913941,"byte_end":6913962,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913967,"byte_end":6913989,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6913994,"byte_end":6914001,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914006,"byte_end":6914028,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914033,"byte_end":6914040,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914694,"byte_end":6914707,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914161,"byte_end":6914213,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914218,"byte_end":6914221,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914226,"byte_end":6914264,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914269,"byte_end":6914272,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914277,"byte_end":6914345,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914350,"byte_end":6914353,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914358,"byte_end":6914372,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914377,"byte_end":6914380,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914385,"byte_end":6914392,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914397,"byte_end":6914428,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914433,"byte_end":6914481,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914486,"byte_end":6914489,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914494,"byte_end":6914535,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914540,"byte_end":6914575,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914580,"byte_end":6914604,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914609,"byte_end":6914631,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914636,"byte_end":6914643,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914648,"byte_end":6914670,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914675,"byte_end":6914682,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915340,"byte_end":6915353,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914807,"byte_end":6914859,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914864,"byte_end":6914867,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914872,"byte_end":6914910,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914915,"byte_end":6914918,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914923,"byte_end":6914991,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6914996,"byte_end":6914999,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915004,"byte_end":6915018,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915023,"byte_end":6915026,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915031,"byte_end":6915038,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915043,"byte_end":6915074,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915079,"byte_end":6915127,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915132,"byte_end":6915135,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915140,"byte_end":6915181,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915186,"byte_end":6915221,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915226,"byte_end":6915250,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915255,"byte_end":6915277,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915282,"byte_end":6915289,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915294,"byte_end":6915316,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915321,"byte_end":6915328,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916434,"byte_end":6916450,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915522,"byte_end":6915551,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915556,"byte_end":6915559,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915564,"byte_end":6915636,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915641,"byte_end":6915666,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915671,"byte_end":6915674,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915679,"byte_end":6915751,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915756,"byte_end":6915825,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915830,"byte_end":6915903,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915908,"byte_end":6915920,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915925,"byte_end":6915928,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6915933,"byte_end":6916008,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916013,"byte_end":6916074,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916079,"byte_end":6916082,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916087,"byte_end":6916101,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916106,"byte_end":6916109,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916114,"byte_end":6916121,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916126,"byte_end":6916157,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916162,"byte_end":6916210,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916215,"byte_end":6916218,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916223,"byte_end":6916264,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916269,"byte_end":6916304,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916309,"byte_end":6916344,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916349,"byte_end":6916371,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916376,"byte_end":6916383,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916388,"byte_end":6916410,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916415,"byte_end":6916422,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917111,"byte_end":6917130,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916547,"byte_end":6916610,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916615,"byte_end":6916618,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916623,"byte_end":6916674,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916679,"byte_end":6916682,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916687,"byte_end":6916755,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916760,"byte_end":6916763,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916768,"byte_end":6916782,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916787,"byte_end":6916790,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916795,"byte_end":6916802,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916807,"byte_end":6916838,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916843,"byte_end":6916891,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916896,"byte_end":6916899,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916904,"byte_end":6916945,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916950,"byte_end":6916985,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6916990,"byte_end":6917021,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917026,"byte_end":6917048,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917053,"byte_end":6917060,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917065,"byte_end":6917087,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917092,"byte_end":6917099,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917789,"byte_end":6917808,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917299,"byte_end":6917365,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917370,"byte_end":6917373,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917378,"byte_end":6917433,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917438,"byte_end":6917441,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917446,"byte_end":6917460,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917465,"byte_end":6917468,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917473,"byte_end":6917480,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917485,"byte_end":6917516,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917521,"byte_end":6917569,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917574,"byte_end":6917577,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917582,"byte_end":6917623,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917628,"byte_end":6917663,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917668,"byte_end":6917699,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917704,"byte_end":6917726,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917731,"byte_end":6917738,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917743,"byte_end":6917765,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917770,"byte_end":6917777,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918362,"byte_end":6918379,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn (&mut self, val: isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917911,"byte_end":6917984,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6917989,"byte_end":6918007,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918012,"byte_end":6918015,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918020,"byte_end":6918034,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918039,"byte_end":6918042,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918047,"byte_end":6918054,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918059,"byte_end":6918090,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918095,"byte_end":6918143,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918148,"byte_end":6918151,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918156,"byte_end":6918197,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918202,"byte_end":6918237,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918242,"byte_end":6918272,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918277,"byte_end":6918299,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918304,"byte_end":6918311,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918316,"byte_end":6918338,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918343,"byte_end":6918350,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919029,"byte_end":6919037,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918480,"byte_end":6918543,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918548,"byte_end":6918551,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918556,"byte_end":6918617,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918622,"byte_end":6918625,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918630,"byte_end":6918684,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918689,"byte_end":6918692,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918697,"byte_end":6918711,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918716,"byte_end":6918719,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918724,"byte_end":6918731,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918736,"byte_end":6918767,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918772,"byte_end":6918820,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918825,"byte_end":6918828,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918833,"byte_end":6918874,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918879,"byte_end":6918914,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918919,"byte_end":6918939,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918944,"byte_end":6918966,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918971,"byte_end":6918978,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6918983,"byte_end":6919005,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919010,"byte_end":6919017,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919557,"byte_end":6919566,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn (&self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919135,"byte_end":6919198,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919203,"byte_end":6919206,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919211,"byte_end":6919225,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919230,"byte_end":6919233,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919238,"byte_end":6919245,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919250,"byte_end":6919298,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919303,"byte_end":6919324,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919329,"byte_end":6919364,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919369,"byte_end":6919400,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919405,"byte_end":6919436,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919441,"byte_end":6919470,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919475,"byte_end":6919495,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919500,"byte_end":6919521,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919526,"byte_end":6919533,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919538,"byte_end":6919545,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920222,"byte_end":6920230,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn <T> (&self, upstream: T) -> FramedRead<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919718,"byte_end":6919771,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919776,"byte_end":6919779,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919784,"byte_end":6919798,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919803,"byte_end":6919806,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919811,"byte_end":6919818,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919823,"byte_end":6919854,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919859,"byte_end":6919907,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919912,"byte_end":6919915,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919920,"byte_end":6919961,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6919966,"byte_end":6920001,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920006,"byte_end":6920037,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920042,"byte_end":6920073,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920078,"byte_end":6920107,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920112,"byte_end":6920132,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920137,"byte_end":6920159,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920164,"byte_end":6920171,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920176,"byte_end":6920198,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920203,"byte_end":6920210,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920803,"byte_end":6920812,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn <T> (&self, inner: T) -> FramedWrite<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920394,"byte_end":6920448,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920453,"byte_end":6920456,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920461,"byte_end":6920475,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920480,"byte_end":6920483,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920488,"byte_end":6920495,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920500,"byte_end":6920532,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920537,"byte_end":6920587,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920592,"byte_end":6920636,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920641,"byte_end":6920676,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920681,"byte_end":6920712,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920717,"byte_end":6920740,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920745,"byte_end":6920752,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920757,"byte_end":6920779,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920784,"byte_end":6920791,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921421,"byte_end":6921431,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn <T> (&self, inner: T) -> Framed<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6920973,"byte_end":6921022,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921027,"byte_end":6921030,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921035,"byte_end":6921049,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921054,"byte_end":6921057,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921062,"byte_end":6921069,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921074,"byte_end":6921119,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921124,"byte_end":6921174,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921179,"byte_end":6921235,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921240,"byte_end":6921253,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921258,"byte_end":6921293,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921298,"byte_end":6921329,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921334,"byte_end":6921358,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921363,"byte_end":6921370,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921375,"byte_end":6921397,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921402,"byte_end":6921409,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6922810,"byte_end":6922820,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6922567,"byte_end":6922654,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6922655,"byte_end":6922658,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6922659,"byte_end":6922697,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6922698,"byte_end":6922736,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923920,"byte_end":6923923,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn () -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923501,"byte_end":6923561,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923566,"byte_end":6923569,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923574,"byte_end":6923584,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923589,"byte_end":6923592,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923597,"byte_end":6923669,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923674,"byte_end":6923747,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923752,"byte_end":6923819,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923824,"byte_end":6923827,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923832,"byte_end":6923908,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925054,"byte_end":6925073,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn (max_length: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924081,"byte_end":6924141,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924146,"byte_end":6924149,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924154,"byte_end":6924217,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924222,"byte_end":6924300,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924305,"byte_end":6924372,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924377,"byte_end":6924449,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924454,"byte_end":6924524,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924529,"byte_end":6924552,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924557,"byte_end":6924560,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924565,"byte_end":6924575,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924580,"byte_end":6924583,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924588,"byte_end":6924663,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924668,"byte_end":6924741,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924746,"byte_end":6924822,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924827,"byte_end":6924900,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924905,"byte_end":6924975,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924980,"byte_end":6924983,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6924988,"byte_end":6925042,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925639,"byte_end":6925649,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925201,"byte_end":6925251,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925256,"byte_end":6925259,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925264,"byte_end":6925271,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925276,"byte_end":6925295,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925300,"byte_end":6925338,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925343,"byte_end":6925346,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925351,"byte_end":6925385,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925390,"byte_end":6925437,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925442,"byte_end":6925449,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925454,"byte_end":6925461,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925466,"byte_end":6925504,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925509,"byte_end":6925512,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925517,"byte_end":6925570,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925575,"byte_end":6925615,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6925620,"byte_end":6925627,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930009,"byte_end":6930030,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6929963,"byte_end":6930004,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930065,"byte_end":6930067,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930036,"byte_end":6930060,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6929941,"byte_end":6929956,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"LinesCodecError::{MaxLineLengthExceeded, Io}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":563}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6929859,"byte_end":6929914,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852344,"byte_end":6852354,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852505,"byte_end":6852515,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852842,"byte_end":6852852,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6862699,"byte_end":6862703,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6862974,"byte_end":6862980,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866208,"byte_end":6866214,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870781,"byte_end":6870787,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6871049,"byte_end":6871055,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6871826,"byte_end":6871832,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872192,"byte_end":6872196,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872334,"byte_end":6872338,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872545,"byte_end":6872549,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872944,"byte_end":6872948,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6873229,"byte_end":6873233,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6873450,"byte_end":6873454,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6873983,"byte_end":6873987,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874368,"byte_end":6874372,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6875275,"byte_end":6875286,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876420,"byte_end":6876430,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877217,"byte_end":6877227,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878719,"byte_end":6878729,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6879042,"byte_end":6879052,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6880142,"byte_end":6880152,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6881208,"byte_end":6881219,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6881737,"byte_end":6881748,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6884871,"byte_end":6884882,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885205,"byte_end":6885216,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886644,"byte_end":6886655,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6887366,"byte_end":6887377,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6887709,"byte_end":6887720,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6888563,"byte_end":6888575,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6888917,"byte_end":6888929,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891189,"byte_end":6891201,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891537,"byte_end":6891549,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891684,"byte_end":6891696,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891903,"byte_end":6891915,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6892310,"byte_end":6892322,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6892602,"byte_end":6892614,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906554,"byte_end":6906574,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6909927,"byte_end":6909947,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6910834,"byte_end":6910854,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912195,"byte_end":6912215,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912308,"byte_end":6912315,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921914,"byte_end":6921921,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6922047,"byte_end":6922072,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6922230,"byte_end":6922255,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6922390,"byte_end":6922415,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923484,"byte_end":6923494,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6926036,"byte_end":6926046,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6929457,"byte_end":6929467,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6929790,"byte_end":6929800,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930105,"byte_end":6930120,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930402,"byte_end":6930417,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930534,"byte_end":6930549,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6850871,"byte_end":6850887,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":348}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852344,"byte_end":6852354,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852505,"byte_end":6852515,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6852842,"byte_end":6852852,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6862699,"byte_end":6862703,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6862974,"byte_end":6862980,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6866208,"byte_end":6866214,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6870781,"byte_end":6870787,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":777},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6871049,"byte_end":6871055,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":777},"to":{"krate":32,"index":9}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6871826,"byte_end":6871832,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872192,"byte_end":6872196,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872334,"byte_end":6872338,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3015}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872545,"byte_end":6872549,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":732},"to":{"krate":15,"index":215}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6872944,"byte_end":6872948,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":732},"to":{"krate":15,"index":186}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6873229,"byte_end":6873233,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2991}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6873450,"byte_end":6873454,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":732},"to":{"krate":15,"index":271}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6873983,"byte_end":6873987,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6874368,"byte_end":6874372,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6875275,"byte_end":6875286,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6876420,"byte_end":6876430,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6877217,"byte_end":6877227,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6878719,"byte_end":6878729,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":691},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6879042,"byte_end":6879052,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":691},"to":{"krate":32,"index":9}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6880142,"byte_end":6880152,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6881208,"byte_end":6881219,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6881737,"byte_end":6881748,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":646},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6884871,"byte_end":6884882,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6885205,"byte_end":6885216,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6886644,"byte_end":6886655,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":605},"to":{"krate":32,"index":9}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6887366,"byte_end":6887377,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":605},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6887709,"byte_end":6887720,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6888563,"byte_end":6888575,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6888917,"byte_end":6888929,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":568},"to":{"krate":32,"index":9}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891189,"byte_end":6891201,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891537,"byte_end":6891549,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2932}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891684,"byte_end":6891696,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":3015}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6891903,"byte_end":6891915,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":568},"to":{"krate":15,"index":215}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6892310,"byte_end":6892322,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":568},"to":{"krate":15,"index":186}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6892602,"byte_end":6892614,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6906554,"byte_end":6906574,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6909927,"byte_end":6909947,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6910834,"byte_end":6910854,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912195,"byte_end":6912215,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6912308,"byte_end":6912315,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6921914,"byte_end":6921921,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6922047,"byte_end":6922072,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6183}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6922230,"byte_end":6922255,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6922390,"byte_end":6922415,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6923484,"byte_end":6923494,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6926036,"byte_end":6926046,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6929457,"byte_end":6929467,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6929790,"byte_end":6929800,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":526},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930105,"byte_end":6930120,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930402,"byte_end":6930417,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6930534,"byte_end":6930549,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":1642}}]}