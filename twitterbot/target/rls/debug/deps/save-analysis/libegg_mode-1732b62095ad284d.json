{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0","program":"C:\\Users\\soren\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","egg_mode","--edition=2018","C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"hyper-tls\"","--cfg","feature=\"native-tls\"","--cfg","feature=\"native_tls\"","-C","metadata=1732b62095ad284d","-C","extra-filename=-1732b62095ad284d","--out-dir","c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps","--extern","base64=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libbase64-ea4dd9afce3f75ea.rmeta","--extern","chrono=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libchrono-9a5a7f85b145f020.rmeta","--extern","derive_more=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\derive_more-f04f293edaa71916.dll","--extern","futures=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libfutures-97ea3c7cce760883.rmeta","--extern","hmac=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libhmac-ef3362cfeb30b5b6.rmeta","--extern","hyper=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libhyper-df1ee7d4395c0d89.rmeta","--extern","hyper_tls=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libhyper_tls-610f48bcddbf64f6.rmeta","--extern","lazy_static=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\liblazy_static-fc5450b75b8fe17e.rmeta","--extern","mime=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libmime-e64e995301996835.rmeta","--extern","native_tls=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libnative_tls-be77a31e72fd373c.rmeta","--extern","percent_encoding=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libpercent_encoding-df735567760fd962.rmeta","--extern","rand=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\librand-fbdd63fd1bc220b6.rmeta","--extern","regex=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libregex-a5a8ead6533a78a2.rmeta","--extern","serde=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libserde-bab7ecaeb0cc503f.rmeta","--extern","serde_json=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libserde_json-6c7cce0e6750fa8b.rmeta","--extern","sha1=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libsha1-e1274b2f06bc1412.rmeta","--extern","thiserror=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libthiserror-dd0b3b5b3fb0ad00.rmeta","--extern","tokio=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libtokio-2f1e7634d5648b50.rmeta","--extern","url=c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\liburl-3183bd509aea9e02.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\soren\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\soren\\dev\\personal\\twitterbot\\twitterbot\\target\\rls\\debug\\deps\\libegg_mode-1732b62095ad284d.rmeta"},"prelude":{"crate_id":{"name":"egg_mode","disambiguator":[4478369728190461559,8324781211988591980]},"crate_root":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src","external_crates":[{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15398797713215362700,4976698103976286445]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","num":2,"id":{"name":"core","disambiguator":[10603353953142139958,10157248215032500084]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17317665688008519529,13747496639983646600]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12322858657597006180,9748267946541516489]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2533451466434564290,7489450206404491421]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[1195890954967971036,3666944676093019425]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11096941386843351414,11836211980131019053]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15799063303236315406,9996825484752469054]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[487386117136351835,9556812145388241379]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9004202534995267337,7744433384330796472]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[11536514413351886033,2628971975106334147]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4138595876298155114,17368111708674486723]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1797849565229181012,12620398705937173066]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":14,"id":{"name":"chrono","disambiguator":[117426839396210946,9635731005574936401]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":15,"id":{"name":"time","disambiguator":[12924202694415682311,9661993692691490904]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":16,"id":{"name":"winapi","disambiguator":[14363448520486117723,8937158445358139579]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":17,"id":{"name":"libc","disambiguator":[13842249883353853017,15287948954630460243]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":18,"id":{"name":"num_integer","disambiguator":[1403723507378550426,7645481496764223599]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":19,"id":{"name":"num_traits","disambiguator":[10043219569294851582,9806355359606569168]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","num":20,"id":{"name":"serde","disambiguator":[6425541403282994830,10926476825915175038]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","num":21,"id":{"name":"serde_derive","disambiguator":[3902252300762121282,7204183935399536923]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":22,"id":{"name":"hyper","disambiguator":[4068961380108936477,11145300783456476805]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":23,"id":{"name":"tracing","disambiguator":[944074706069308123,2026571598104530878]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":24,"id":{"name":"cfg_if","disambiguator":[9763502859368084025,14058520404490077848]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":25,"id":{"name":"log","disambiguator":[17366883177114214153,18136044970669002398]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":26,"id":{"name":"tracing_core","disambiguator":[9293512122578184187,2397926728762932197]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","num":27,"id":{"name":"lazy_static","disambiguator":[16964072695855771203,15022961770601069498]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[12506807925672283948,11398578548114887137]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":29,"id":{"name":"http","disambiguator":[7823775277893803896,4918957439086240522]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":30,"id":{"name":"fnv","disambiguator":[14124919517868363929,4774138263748666395]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":31,"id":{"name":"bytes","disambiguator":[4110572562735404158,3044052432345342021]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":32,"id":{"name":"itoa","disambiguator":[4914241282281131646,7337130484954223943]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":33,"id":{"name":"pin_project","disambiguator":[1833848234103292956,8835826509702942220]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":34,"id":{"name":"pin_project_internal","disambiguator":[13449482996859103622,10346029553240453809]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","num":35,"id":{"name":"tokio","disambiguator":[10121065149681751391,12485831589782638405]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":36,"id":{"name":"futures_core","disambiguator":[12518388027289400166,1670956482713401461]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":37,"id":{"name":"mio","disambiguator":[6743300519231901155,4749712646601174112]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":38,"id":{"name":"net2","disambiguator":[4105938819097857638,12531264107659424296]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":39,"id":{"name":"iovec","disambiguator":[9121632340184558142,7045387727052053297]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":40,"id":{"name":"slab","disambiguator":[5682607675429903092,13045481240286995656]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":41,"id":{"name":"miow","disambiguator":[9173594320548852826,10996381022005715195]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":42,"id":{"name":"kernel32","disambiguator":[10284527825147678124,17996013646871010359]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":43,"id":{"name":"winapi","disambiguator":[8821656882035471986,680725125993653175]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":44,"id":{"name":"ws2_32","disambiguator":[12887093282209071612,10511796282312725014]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":45,"id":{"name":"tokio_macros","disambiguator":[4842319524020488818,1744426822675557829]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":46,"id":{"name":"memchr","disambiguator":[12430628795972932368,12265404594230732145]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":47,"id":{"name":"futures_util","disambiguator":[2789312573850651988,5066032491848989708]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":48,"id":{"name":"pin_utils","disambiguator":[31655842840629586,10162731579631300583]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":49,"id":{"name":"proc_macro_hack","disambiguator":[61903727501133586,16085116617664694362]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":50,"id":{"name":"futures_task","disambiguator":[260402236834260408,2353095493607319899]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":51,"id":{"name":"once_cell","disambiguator":[234718435093646817,7131104115761729833]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":52,"id":{"name":"futures_sink","disambiguator":[18008824966374254721,3238516994141512209]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":53,"id":{"name":"futures_channel","disambiguator":[7474417306626540078,3348969544096829398]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":54,"id":{"name":"futures_io","disambiguator":[12150118694369079021,1611479620149835600]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":55,"id":{"name":"futures_macro","disambiguator":[18092682392947805358,12868590595476916199]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":56,"id":{"name":"http_body","disambiguator":[2087405108971843068,9159384377695417825]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":57,"id":{"name":"tower_service","disambiguator":[12353816998150463431,12526762970603656117]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":58,"id":{"name":"socket2","disambiguator":[12031426894291132836,9575149462584867356]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":59,"id":{"name":"httpdate","disambiguator":[6581686205941387846,2804907921033925898]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":60,"id":{"name":"h2","disambiguator":[10186296202100520923,9261056163128013527]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":61,"id":{"name":"tokio_util","disambiguator":[11096268819718383682,8334673328557894497]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":62,"id":{"name":"indexmap","disambiguator":[6984314428261132020,10080658995365119357]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":63,"id":{"name":"hashbrown","disambiguator":[13477363467165930701,4335762533720708926]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":64,"id":{"name":"tracing_futures","disambiguator":[12079770003357513917,471912751935745766]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":65,"id":{"name":"pin_project","disambiguator":[14994202170134892220,12770714373355573800]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":66,"id":{"name":"pin_project_internal","disambiguator":[13390386973489025284,14851181528338886897]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":67,"id":{"name":"want","disambiguator":[934556430858752217,16247983072036811301]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":68,"id":{"name":"try_lock","disambiguator":[16313496589807754089,9022723993657597385]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":69,"id":{"name":"httparse","disambiguator":[5600146284405055974,12293419699360596013]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","num":70,"id":{"name":"mime","disambiguator":[12481554153776181399,2730110174834098010]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","num":71,"id":{"name":"percent_encoding","disambiguator":[11945367365061425117,17804216855276447153]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","num":72,"id":{"name":"hyper_tls","disambiguator":[4580521149087914561,2888565189822416232]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","num":73,"id":{"name":"native_tls","disambiguator":[11152711049917820263,11938928904955206695]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","num":74,"id":{"name":"schannel","disambiguator":[14734417747382706862,10211343632007526130]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","num":75,"id":{"name":"tokio_tls","disambiguator":[11829491718996880340,3428662331708142827]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","num":76,"id":{"name":"serde_json","disambiguator":[9294324269366803302,7356496350974508783]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","num":77,"id":{"name":"ryu","disambiguator":[16149760769936931257,3335877555266474882]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":78,"id":{"name":"base64","disambiguator":[15108291317308517907,7155339287694001355]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":79,"id":{"name":"hmac","disambiguator":[190729664641824687,1161202862201004592]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":80,"id":{"name":"crypto_mac","disambiguator":[9212818474973729092,848137333228471203]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":81,"id":{"name":"generic_array","disambiguator":[14548619220530939054,13693912543640814631]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":82,"id":{"name":"typenum","disambiguator":[8804924361293831110,1386906268921395008]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":83,"id":{"name":"subtle","disambiguator":[5026432221751220472,5907113620144499460]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":84,"id":{"name":"digest","disambiguator":[11663479598016623060,15893948871585817909]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":85,"id":{"name":"rand","disambiguator":[3014994792414006093,5918302365732468783]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":86,"id":{"name":"rand_core","disambiguator":[10609127196300885680,11475792518897977730]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":87,"id":{"name":"getrandom","disambiguator":[87098849103830466,9166918068205473630]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":88,"id":{"name":"rand_chacha","disambiguator":[3676204864081413216,4704443681431511196]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":89,"id":{"name":"ppv_lite86","disambiguator":[16160525894794699490,1112152697841597430]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":90,"id":{"name":"sha1","disambiguator":[5948004220647353787,15978304819509068461]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":91,"id":{"name":"block_buffer","disambiguator":[16311731458129403998,16060353184295160181]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":92,"id":{"name":"cfg_if","disambiguator":[15960691537477347575,8752581177602831401]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":93,"id":{"name":"cpuid_bool","disambiguator":[382266025143087767,2124222926768644523]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","num":94,"id":{"name":"opaque_debug","disambiguator":[18238584866946865953,14101217371805052386]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","num":95,"id":{"name":"futures","disambiguator":[9995497853469796328,12318361224304921495]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","num":96,"id":{"name":"futures_executor","disambiguator":[10990163962016276303,6035703894826697065]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","num":97,"id":{"name":"regex","disambiguator":[13805995079979847520,16621588964700314118]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","num":98,"id":{"name":"aho_corasick","disambiguator":[1532946929878122194,15035340353953323308]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","num":99,"id":{"name":"regex_syntax","disambiguator":[12637192230645893182,8515207884139508663]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","num":100,"id":{"name":"thread_local","disambiguator":[18172035898815796159,15123989915891071323]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","num":101,"id":{"name":"derive_more","disambiguator":[14904175094080969587,17793862176423359578]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","num":102,"id":{"name":"thiserror","disambiguator":[771593293815521512,4627007087617436417]}},{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","num":103,"id":{"name":"thiserror_impl","disambiguator":[7971476907534747965,6927105646570075357]}}],"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":203,"byte_end":8522,"line_start":5,"line_end":183,"column_start":1,"column_end":46}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96912,"byte_end":96913,"line_start":61,"line_end":61,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"sent, received","parent":{"krate":0,"index":315}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149993,"byte_end":149994,"line_start":73,"line_end":73,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":552}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182833,"byte_end":182834,"line_start":36,"line_end":36,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":711}},{"kind":"Use","ref_id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205076,"byte_end":205085,"line_start":81,"line_end":81,"column_start":24,"column_end":33},"alias_span":null,"name":"ParamList","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205110,"byte_end":205117,"line_start":82,"line_end":82,"column_start":24,"column_end":31},"alias_span":null,"name":"Headers","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205146,"byte_end":205149,"line_start":84,"line_end":84,"column_start":27,"column_end":30},"alias_span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205153,"byte_end":205164,"line_start":84,"line_end":84,"column_start":34,"column_end":45},"name":"request_get","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205192,"byte_end":205196,"line_start":85,"line_end":85,"column_start":27,"column_end":31},"alias_span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205200,"byte_end":205212,"line_start":85,"line_end":85,"column_start":35,"column_end":47},"name":"request_post","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205240,"byte_end":205249,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"alias_span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205253,"byte_end":205270,"line_start":86,"line_end":86,"column_start":40,"column_end":57},"name":"request_post_json","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208218,"byte_end":208230,"line_start":151,"line_end":151,"column_start":24,"column_end":36},"alias_span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208234,"byte_end":208249,"line_start":151,"line_end":151,"column_start":40,"column_end":55},"name":"response_future","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208274,"byte_end":208285,"line_start":152,"line_end":152,"column_start":24,"column_end":35},"alias_span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208289,"byte_end":208307,"line_start":152,"line_end":152,"column_start":39,"column_end":57},"name":"response_raw_bytes","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208332,"byte_end":208358,"line_start":153,"line_end":153,"column_start":24,"column_end":50},"alias_span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208362,"byte_end":208375,"line_start":153,"line_end":153,"column_start":54,"column_end":67},"name":"response_json","value":"","parent":{"krate":0,"index":818}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211971,"byte_end":211985,"line_start":220,"line_end":220,"column_start":31,"column_end":45},"alias_span":null,"name":"RequestBuilder","value":"","parent":{"krate":0,"index":838}},{"kind":"Use","ref_id":{"krate":29,"index":2391},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":212029,"byte_end":212035,"line_start":223,"line_end":223,"column_start":20,"column_end":26},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":838}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265347,"byte_end":265348,"line_start":68,"line_end":68,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1050}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318212,"byte_end":318213,"line_start":67,"line_end":67,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1220}},{"kind":"Use","ref_id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8460,"byte_end":8465,"line_start":182,"line_end":182,"column_start":23,"column_end":28},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8467,"byte_end":8474,"line_start":182,"line_end":182,"column_start":30,"column_end":37},"alias_span":null,"name":"KeyPair","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8501,"byte_end":8509,"line_start":183,"line_end":183,"column_start":25,"column_end":33},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8511,"byte_end":8520,"line_start":183,"line_end":183,"column_start":35,"column_end":44},"alias_span":null,"name":"RateLimit","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":203,"byte_end":8522,"line_start":5,"line_end":183,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":135},{"krate":0,"index":257},{"krate":0,"index":315},{"krate":0,"index":429},{"krate":0,"index":441},{"krate":0,"index":460},{"krate":0,"index":552},{"krate":0,"index":665},{"krate":0,"index":711},{"krate":0,"index":818},{"krate":0,"index":841},{"krate":0,"index":899},{"krate":0,"index":972},{"krate":0,"index":1050},{"krate":0,"index":1220},{"krate":0,"index":1352},{"krate":0,"index":1355}],"decl_id":null,"docs":" A library for interacting with Twitter.","sig":null,"attributes":[{"value":"! A library for interacting with Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":203,"byte_end":246,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":247,"byte_end":250,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [Repository](https://github.com/egg-mode-rs/egg-mode)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":251,"byte_end":308,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":309,"byte_end":312,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! egg-mode is a Twitter library that aims to make as few assumptions about the user's codebase as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":313,"byte_end":412,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"! possible. Endpoints are exposed as bare functions where authentication details are passed in as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":413,"byte_end":512,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"! arguments, rather than as builder functions of a root \"service\" manager. The only exceptions to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":513,"byte_end":612,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"! this guideline are endpoints with many optional parameters, like posting a status update or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":613,"byte_end":708,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"! updating the metadata of a list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":709,"byte_end":745,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":746,"byte_end":749,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # About the examples in this documentation","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":750,"byte_end":796,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":797,"byte_end":800,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! There are a couple prerequisites to using egg-mode, which its examples also assume:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":801,"byte_end":888,"line_start":17,"line_end":17,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":889,"byte_end":892,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! * All methods that hit the twitter API are `async` and should be awaited with the `.await` syntax.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":893,"byte_end":995,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"!   All such calls return a result type with the [`Error`] enum as their Error value.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":996,"byte_end":1083,"line_start":20,"line_end":20,"column_start":1,"column_end":88}},{"value":"!   The resulting future must be executed on a `tokio` executor.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1084,"byte_end":1150,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"!   For more information, check out the [Rust `async` book][rust-futures] and the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1151,"byte_end":1234,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"!   [Tokio documentation guides][].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1235,"byte_end":1272,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1273,"byte_end":1276,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! * Twitter tracks API use through \"tokens\" which are managed by Twitter and processed separately","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1277,"byte_end":1376,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"!   for each \"authenticated user\" you wish to connect to your app. egg-mode represents these","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1377,"byte_end":1471,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"!   through the [`Token`] type, which each function that connects to the API uses to authenticate","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1472,"byte_end":1571,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"!   the call.  egg-mode's [authentication overview][auth] describes how you can obtain one of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1572,"byte_end":1667,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"!   these, but each example outside of the authentication documentation brings in a `Token`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1668,"byte_end":1761,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"!   \"offscreen\", to avoid distracting from the rest of the example.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1762,"byte_end":1831,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1832,"byte_end":1835,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! [`Token`]: auth/enum.Token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1836,"byte_end":1871,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"! [auth]: auth/index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1872,"byte_end":1899,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"! [`Error`]: error/enum.Error.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1900,"byte_end":1936,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"! [tokio]: https://tokio.rs","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1937,"byte_end":1966,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"! [rust-futures]: https://rust-lang.github.io/async-book/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":1967,"byte_end":2026,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"! [Tokio documentation guides]: https://tokio.rs/docs/overview","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2027,"byte_end":2091,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2092,"byte_end":2095,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! To load the profile information of a single user:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2096,"byte_end":2149,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2150,"byte_end":2153,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2154,"byte_end":2172,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"! # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2173,"byte_end":2199,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"! # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2200,"byte_end":2220,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"! # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2221,"byte_end":2244,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"! # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2245,"byte_end":2287,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"! let rustlang = egg_mode::user::show(\"rustlang\", &token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2288,"byte_end":2363,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2364,"byte_end":2367,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! println!(\"{} (@{})\", rustlang.name, rustlang.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2368,"byte_end":2430,"line_start":48,"line_end":48,"column_start":1,"column_end":63}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2431,"byte_end":2438,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2439,"byte_end":2446,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2447,"byte_end":2450,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! To post a new tweet:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2451,"byte_end":2475,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2476,"byte_end":2479,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2480,"byte_end":2498,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"! # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2499,"byte_end":2525,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"! use egg_mode::tweet::DraftTweet;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2526,"byte_end":2562,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"! # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2563,"byte_end":2583,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"! # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2584,"byte_end":2607,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"! # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2608,"byte_end":2650,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2651,"byte_end":2654,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! let post = DraftTweet::new(\"Hey Twitter!\").send(&token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2655,"byte_end":2730,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2731,"byte_end":2738,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2739,"byte_end":2746,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2747,"byte_end":2750,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! # Crate features","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2751,"byte_end":2771,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2772,"byte_end":2775,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! While all of egg-mode's features are available by default, it allows you to configure how it","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2776,"byte_end":2872,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"! connects to Twitter and how it uses HTTPS. The crate's Cargo features are the following:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2873,"byte_end":2965,"line_start":68,"line_end":68,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2966,"byte_end":2969,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! * `native_tls`: On by default. With this feature on, egg-mode uses `native-tls` to access your","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":2970,"byte_end":3068,"line_start":70,"line_end":70,"column_start":1,"column_end":99}},{"value":"!   operating system's native TLS functionality to access Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3069,"byte_end":3137,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"! * `rustls`: Off by default. With this feature on, egg-mode instead uses the `rustls` TLS stack","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3138,"byte_end":3236,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"!   to access Twitter. `rustls` will still use your operating system's native root certificates","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3237,"byte_end":3334,"line_start":73,"line_end":73,"column_start":1,"column_end":98}},{"value":"!   to verify the connection.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3335,"byte_end":3366,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"! * `rustls_webpki`: Off by default. With this feature on, egg-mode will also use `rustls` to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3367,"byte_end":3462,"line_start":75,"line_end":75,"column_start":1,"column_end":96}},{"value":"!   connect, but it will also use the `webpki-roots` crate to include a set of compiled-in root","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3463,"byte_end":3560,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"!   certificates to verify the connection, instead of using your operating system's root","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3561,"byte_end":3651,"line_start":77,"line_end":77,"column_start":1,"column_end":91}},{"value":"!   certificates.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3652,"byte_end":3671,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3672,"byte_end":3675,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! Keep in mind that these features are mutually exclusive - if you enable more than one, a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3676,"byte_end":3768,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"! compile error will result. If you need to use `rustls` or `rustls_webpki`, remember to set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3769,"byte_end":3863,"line_start":81,"line_end":81,"column_start":1,"column_end":95}},{"value":"! `default-features = false` in your Cargo.toml.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3864,"byte_end":3914,"line_start":82,"line_end":82,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3915,"byte_end":3918,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! # Types and Functions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3919,"byte_end":3944,"line_start":84,"line_end":84,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3945,"byte_end":3948,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! All of the main content of egg-mode is in submodules, but there are a few things here in the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":3949,"byte_end":4045,"line_start":86,"line_end":86,"column_start":1,"column_end":97}},{"value":"! crate root. To wit, it contains items related to authentication and a couple items that all the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4046,"byte_end":4145,"line_start":87,"line_end":87,"column_start":1,"column_end":100}},{"value":"! submodules use.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4146,"byte_end":4165,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4166,"byte_end":4169,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! ## `Response<T>`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4170,"byte_end":4190,"line_start":90,"line_end":90,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4191,"byte_end":4194,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! Every method that calls Twitter and carries rate-limit information wraps its return value in a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4195,"byte_end":4293,"line_start":92,"line_end":92,"column_start":1,"column_end":99}},{"value":"! [`Response`][] struct, that transmits this information to your app. From there, you can handle","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4294,"byte_end":4392,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"! the rate-limit information to hold off on that kind of request, or simply grab its `response`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4393,"byte_end":4490,"line_start":94,"line_end":94,"column_start":1,"column_end":98}},{"value":"! field to get the output of whatever method you called. `Response` also implements `Deref`, so","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4491,"byte_end":4588,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"! for the most part you can access fields of the final result without having to grab the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4589,"byte_end":4679,"line_start":96,"line_end":96,"column_start":1,"column_end":91}},{"value":"! `response` field directly.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4680,"byte_end":4710,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4711,"byte_end":4714,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! [`Response`]: struct.Response.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4715,"byte_end":4753,"line_start":99,"line_end":99,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4754,"byte_end":4757,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! ## `Token`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4758,"byte_end":4772,"line_start":101,"line_end":101,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4773,"byte_end":4776,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! While the complete process of authenticating with Twitter involves functions and types in [the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4777,"byte_end":4875,"line_start":103,"line_end":103,"column_start":1,"column_end":99}},{"value":"! `auth` module][auth], the [`Token`] type is central enough to the operation of egg-mode that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4876,"byte_end":4972,"line_start":104,"line_end":104,"column_start":1,"column_end":97}},{"value":"! it's re-exported at the crate root. The inner [`KeyPair`] type is also re-exported here, to aid","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":4973,"byte_end":5072,"line_start":105,"line_end":105,"column_start":1,"column_end":100}},{"value":"! existing code that used the type, and to aid the authentication process, which requires","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5073,"byte_end":5164,"line_start":106,"line_end":106,"column_start":1,"column_end":92}},{"value":"! manually creating one at the very beginning.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5165,"byte_end":5213,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5214,"byte_end":5217,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! # Modules","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5218,"byte_end":5231,"line_start":109,"line_end":109,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5232,"byte_end":5235,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! As there are many actions available in the Twitter API, egg-mode divides them roughly into","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5236,"byte_end":5330,"line_start":111,"line_end":111,"column_start":1,"column_end":95}},{"value":"! several modules by their shared purpose. Here's a sort of high-level overview, in rough order","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5331,"byte_end":5428,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"! from \"most important\" to \"less directly used\":","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5429,"byte_end":5479,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5480,"byte_end":5483,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ## Primary actions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5484,"byte_end":5506,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5507,"byte_end":5510,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! These could be considered the \"core\" actions within the Twitter API that egg-mode has made","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5511,"byte_end":5605,"line_start":117,"line_end":117,"column_start":1,"column_end":95}},{"value":"! available.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5606,"byte_end":5620,"line_start":118,"line_end":118,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5621,"byte_end":5624,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! * `auth`: This module contains all the functions required to fully authenticate with Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5625,"byte_end":5722,"line_start":120,"line_end":120,"column_start":1,"column_end":98}},{"value":"!   The module docs contain the complete overview of how to use egg-mode to properly sign your","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5723,"byte_end":5819,"line_start":121,"line_end":121,"column_start":1,"column_end":97}},{"value":"!   API calls so that Twitter will accept them.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5820,"byte_end":5869,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"! * `tweet`: This module lets you act on tweets. Here you can find actions to load a user's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5870,"byte_end":5963,"line_start":123,"line_end":123,"column_start":1,"column_end":94}},{"value":"!   timeline, post a new tweet, or like and retweet individual posts.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":5964,"byte_end":6035,"line_start":124,"line_end":124,"column_start":1,"column_end":72}},{"value":"! * `user`: This module lets you act on users, be it by following or unfollowing them, loading","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6036,"byte_end":6132,"line_start":125,"line_end":125,"column_start":1,"column_end":97}},{"value":"!   their profile information, blocking or muting them, or showing the relationship between two","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6133,"byte_end":6230,"line_start":126,"line_end":126,"column_start":1,"column_end":98}},{"value":"!   users.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6231,"byte_end":6243,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"! * `search`: Due to the complexity of searching for tweets, it gets its own module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6244,"byte_end":6330,"line_start":128,"line_end":128,"column_start":1,"column_end":87}},{"value":"! * `direct`: Here you can work with a user's Direct Messages, either by loading DMs they've sent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6331,"byte_end":6430,"line_start":129,"line_end":129,"column_start":1,"column_end":100}},{"value":"!   or received, or by sending new ones.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6431,"byte_end":6473,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"! * `list`: This module lets you act on lists, from creating and deleting them, adding and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6474,"byte_end":6566,"line_start":131,"line_end":131,"column_start":1,"column_end":93}},{"value":"!   removing users, or loading the posts made by their members.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6567,"byte_end":6632,"line_start":132,"line_end":132,"column_start":1,"column_end":66}},{"value":"! * `media`: This module lets you upload images, GIFs, and videos to Twitter so you can attach","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6633,"byte_end":6729,"line_start":133,"line_end":133,"column_start":1,"column_end":97}},{"value":"!   them to tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6730,"byte_end":6751,"line_start":134,"line_end":134,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6752,"byte_end":6755,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! ## Secondary actions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6756,"byte_end":6780,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6781,"byte_end":6784,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! These modules still contain direct actions for Twitter, but they can be considered as having","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6785,"byte_end":6881,"line_start":138,"line_end":138,"column_start":1,"column_end":97}},{"value":"! more of a helper role than something you might use directly.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6882,"byte_end":6946,"line_start":139,"line_end":139,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6947,"byte_end":6950,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! * `place`: Here are actions that look up physical locations that can be attached to tweets, as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":6951,"byte_end":7049,"line_start":141,"line_end":141,"column_start":1,"column_end":99}},{"value":"!   well at the `Place` struct that appears on tweets with locations attached.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7050,"byte_end":7130,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"! * `service`: These are some miscellaneous methods that show information about the Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7131,"byte_end":7224,"line_start":143,"line_end":143,"column_start":1,"column_end":94}},{"value":"!   service as a whole, like loading the maximum length of t.co URLs or loading the current Terms","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7225,"byte_end":7324,"line_start":144,"line_end":144,"column_start":1,"column_end":100}},{"value":"!   of Service or Privacy Policy.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7325,"byte_end":7360,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7361,"byte_end":7364,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ## Helper structs","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7365,"byte_end":7386,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7387,"byte_end":7390,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! These modules contain some implementations that wrap some pattern seen in multiple \"action\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7391,"byte_end":7486,"line_start":149,"line_end":149,"column_start":1,"column_end":96}},{"value":"! modules.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7487,"byte_end":7499,"line_start":150,"line_end":150,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7500,"byte_end":7503,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! * `cursor`: This contains a helper trait and some helper structs that allow effective cursoring","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7504,"byte_end":7603,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"!   through certain collections of results from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7604,"byte_end":7662,"line_start":153,"line_end":153,"column_start":1,"column_end":59}},{"value":"! * `entities`: Whenever some text can be returned that may contain links, hashtags, media, or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7663,"byte_end":7759,"line_start":154,"line_end":154,"column_start":1,"column_end":97}},{"value":"!   user mentions, its metadata is parsed into something that lives in this module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7760,"byte_end":7845,"line_start":155,"line_end":155,"column_start":1,"column_end":86}},{"value":"! * `error`: Any interaction with Twitter may result in an error condition, be it from finding a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7846,"byte_end":7944,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"!   tweet or user that doesn't exist or the network connection being unavailable. All the error","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":7945,"byte_end":8042,"line_start":157,"line_end":157,"column_start":1,"column_end":98}},{"value":"!   types are aggregated into an enum in this module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8043,"byte_end":8098,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8100,"byte_end":8122,"line_start":160,"line_end":160,"column_start":1,"column_end":23}},{"value":"warn(unused_extern_crates)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8123,"byte_end":8153,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8154,"byte_end":8185,"line_start":162,"line_end":162,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27051,"byte_end":27059,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Response","qualname":"::common::response::Response","value":"Response { rate_limit_status, response }","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361}],"decl_id":null,"docs":"A helper struct to wrap response data with accompanying rate limit information.","sig":null,"attributes":[{"value":"/A helper struct to wrap response data with accompanying rate limit information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26494,"byte_end":26576,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26577,"byte_end":26580,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/This is returned by any function that calls a rate-limited method on Twitter, to allow for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26581,"byte_end":26674,"line_start":50,"line_end":50,"column_start":1,"column_end":94}},{"value":"/inline checking of the rate-limit information without an extra call to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26675,"byte_end":26748,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/`service::rate_limit_info`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26749,"byte_end":26779,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26780,"byte_end":26783,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/As this implements `Deref` and `DerefMut`, you can transparently use the contained `response`'s","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26784,"byte_end":26882,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/methods as if they were methods on this struct.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":26883,"byte_end":26933,"line_start":55,"line_end":55,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27164,"byte_end":27181,"line_start":62,"line_end":62,"column_start":9,"column_end":26},"name":"rate_limit_status","qualname":"::common::response::Response::rate_limit_status","value":"common::response::RateLimit","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" The latest rate-limit information returned with the request.\n","sig":null,"attributes":[{"value":"/ The latest rate-limit information returned with the request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27069,"byte_end":27133,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"serde(flatten)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27138,"byte_end":27155,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27301,"byte_end":27309,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"response","qualname":"::common::response::Response::response","value":"T","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" The decoded response from the request.\n","sig":null,"attributes":[{"value":"/ The decoded response from the request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27198,"byte_end":27240,"line_start":63,"line_end":63,"column_start":5,"column_end":47}},{"value":"deref","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27245,"byte_end":27253,"line_start":64,"line_end":64,"column_start":5,"column_end":13}},{"value":"deref_mut","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27258,"byte_end":27270,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"serde(default)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27275,"byte_end":27292,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27642,"byte_end":27645,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"map","qualname":"<Response<T>>::map","value":"fn <F, U> (src: Response<T>, fun: F) -> Response<U>","parent":null,"children":[],"decl_id":null,"docs":"Convert a `Response<T>` to a `Response<U>` by running its contained response through the\ngiven function. This preserves its rate-limit information.","sig":null,"attributes":[{"value":"/Convert a `Response<T>` to a `Response<U>` by running its contained response through the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27343,"byte_end":27434,"line_start":71,"line_end":71,"column_start":5,"column_end":96}},{"value":"/given function. This preserves its rate-limit information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27439,"byte_end":27500,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27505,"byte_end":27508,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/Note that this is not a member function, so as to not conflict with potential methods on the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27513,"byte_end":27608,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/contained `T`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27613,"byte_end":27630,"line_start":75,"line_end":75,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":28029,"byte_end":28041,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"get_response","qualname":"::common::response::get_response","value":"fn (request: Request<Body>) -> ResponseFuture","parent":null,"children":[],"decl_id":null,"docs":" Converts the given request into a raw `ResponseFuture` from hyper.\n","sig":null,"attributes":[{"value":"/ Converts the given request into a raw `ResponseFuture` from hyper.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27951,"byte_end":28021,"line_start":88,"line_end":88,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":28485,"byte_end":28496,"line_start":98,"line_end":98,"column_start":14,"column_end":25},"name":"raw_request","qualname":"::common::response::raw_request","value":"fn (request: Request<Body>) -> Result<(Headers, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Loads the given request, parses the headers and response for potential errors given by Twitter,\n and returns the headers and raw bytes returned from the response.\n","sig":null,"attributes":[{"value":"/ Loads the given request, parses the headers and response for potential errors given by Twitter,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":28302,"byte_end":28401,"line_start":96,"line_end":96,"column_start":1,"column_end":100}},{"value":"/ and returns the headers and raw bytes returned from the response.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":28402,"byte_end":28471,"line_start":97,"line_end":97,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":29516,"byte_end":29542,"line_start":122,"line_end":122,"column_start":14,"column_end":40},"name":"request_with_json_response","qualname":"::common::response::request_with_json_response","value":"fn <T> (request: Request<Body>) -> Result<Response<T>>","parent":null,"children":[],"decl_id":null,"docs":" Loads the given request and parses the response as JSON into the given type, including\n rate-limit headers.\n","sig":null,"attributes":[{"value":"/ Loads the given request and parses the response as JSON into the given type, including","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":29388,"byte_end":29478,"line_start":120,"line_end":120,"column_start":1,"column_end":91}},{"value":"/ rate-limit headers.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":29479,"byte_end":29502,"line_start":121,"line_end":121,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31043,"byte_end":31052,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"RateLimit","qualname":"::common::response::RateLimit","value":"RateLimit { limit, remaining, reset }","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449}],"decl_id":null,"docs":" Rate limit information returned with a `Response`.","sig":null,"attributes":[{"value":"/ Rate limit information returned with a `Response`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":29932,"byte_end":29986,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":29987,"byte_end":29990,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ With every API call, Twitter returns information about how many times you're allowed to call","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":29991,"byte_end":30087,"line_start":137,"line_end":137,"column_start":1,"column_end":97}},{"value":"/ that endpoint, and at what point your limit refreshes and allows you to call it more. These are","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30088,"byte_end":30187,"line_start":138,"line_end":138,"column_start":1,"column_end":100}},{"value":"/ normally passed through the response headers, and egg-mode reads for these headers when a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30188,"byte_end":30281,"line_start":139,"line_end":139,"column_start":1,"column_end":94}},{"value":"/ function returns a `Response<T>`. If the headers are absent for a given request, the field will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30282,"byte_end":30381,"line_start":140,"line_end":140,"column_start":1,"column_end":100}},{"value":"/ be `-1`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30382,"byte_end":30394,"line_start":141,"line_end":141,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30395,"byte_end":30398,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Rate limits are tracked separately based on the kind of `Token` you're using. For Bearer tokens","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30399,"byte_end":30498,"line_start":143,"line_end":143,"column_start":1,"column_end":100}},{"value":"/ using Application-only authentication, the rate limit is based on your application as a whole,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30499,"byte_end":30597,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/ regardless of how many instances are using that token. For Access tokens, the rate limit is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30598,"byte_end":30693,"line_start":145,"line_end":145,"column_start":1,"column_end":96}},{"value":"/ broken down by-user, so more-active users will not use up the rate limit for less-active ones.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30694,"byte_end":30792,"line_start":146,"line_end":146,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30793,"byte_end":30796,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ For more information about rate-limiting, see [Twitter's documentation about rate","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30797,"byte_end":30882,"line_start":148,"line_end":148,"column_start":1,"column_end":86}},{"value":"/ limits][rate-limit].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30883,"byte_end":30907,"line_start":149,"line_end":149,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30908,"byte_end":30911,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [rate-limit]: https://developer.twitter.com/en/docs/basics/rate-limiting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":30912,"byte_end":30988,"line_start":151,"line_end":151,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31117,"byte_end":31122,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"name":"limit","qualname":"::common::response::RateLimit::limit","value":"i32","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" The rate limit ceiling for the given request.\n","sig":null,"attributes":[{"value":"/ The rate limit ceiling for the given request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31059,"byte_end":31108,"line_start":154,"line_end":154,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31199,"byte_end":31208,"line_start":157,"line_end":157,"column_start":9,"column_end":18},"name":"remaining","qualname":"::common::response::RateLimit::remaining","value":"i32","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" The number of requests left for the 15-minute window.\n","sig":null,"attributes":[{"value":"/ The number of requests left for the 15-minute window.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31133,"byte_end":31190,"line_start":156,"line_end":156,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31287,"byte_end":31292,"line_start":159,"line_end":159,"column_start":9,"column_end":14},"name":"reset","qualname":"::common::response::RateLimit::reset","value":"i32","parent":{"krate":0,"index":1446},"children":[],"decl_id":null,"docs":" The UTC Unix timestamp at which the rate window resets.\n","sig":null,"attributes":[{"value":"/ The UTC Unix timestamp at which the rate window resets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31219,"byte_end":31278,"line_start":158,"line_end":158,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14264,"byte_end":14271,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"Headers","qualname":"::common::Headers","value":"HeaderMap<HeaderValue>","parent":null,"children":[],"decl_id":null,"docs":" A set of headers returned with a response.\n","sig":null,"attributes":[{"value":"/ A set of headers returned with a response.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14208,"byte_end":14254,"line_start":111,"line_end":111,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15501,"byte_end":15510,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"ParamList","qualname":"::common::ParamList","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a list of parameters to a Twitter API call.","sig":null,"attributes":[{"value":"/ Represents a list of parameters to a Twitter API call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14414,"byte_end":14472,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14473,"byte_end":14476,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This type is a wrapper around a `HashMap<Cow<'static, str>, Cow<'static, str>>` to collect a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14477,"byte_end":14573,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ set of parameter key/value pairs. These are then used to assemble and sign a Twitter API","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14574,"byte_end":14666,"line_start":119,"line_end":119,"column_start":1,"column_end":93}},{"value":"/ request. The `Cow` type is used to avoid having to allocate a `String` if a string literal is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14667,"byte_end":14764,"line_start":120,"line_end":120,"column_start":1,"column_end":98}},{"value":"/ used for a parameter. All the functions that add parameters to this `ParamList` accept `impl","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14765,"byte_end":14861,"line_start":121,"line_end":121,"column_start":1,"column_end":97}},{"value":"/ Into<Cow<'static, str>>`, meaning that either a string literal or an owned `String` may be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14862,"byte_end":14956,"line_start":122,"line_end":122,"column_start":1,"column_end":95}},{"value":"/ used.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14957,"byte_end":14966,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14967,"byte_end":14970,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Most of the functions to add parameters follow a builder pattern, so that you can assemble a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":14971,"byte_end":15067,"line_start":125,"line_end":125,"column_start":1,"column_end":97}},{"value":"/ `ParamList` in a single statement:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15068,"byte_end":15106,"line_start":126,"line_end":126,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15107,"byte_end":15110,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15111,"byte_end":15118,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ use egg_mode::raw::ParamList;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15119,"byte_end":15152,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15153,"byte_end":15156,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // If you were looking up the user `@rustlang` with `GET users/show`, you might assemble a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15157,"byte_end":15251,"line_start":131,"line_end":131,"column_start":1,"column_end":95}},{"value":"/ // ParamList like this...","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15252,"byte_end":15281,"line_start":132,"line_end":132,"column_start":1,"column_end":30}},{"value":"/ let params = ParamList::new()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15282,"byte_end":15315,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/     .extended_tweets()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15316,"byte_end":15342,"line_start":134,"line_end":134,"column_start":1,"column_end":27}},{"value":"/     .add_user_param(\"rustlang\".into());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15343,"byte_end":15386,"line_start":135,"line_end":135,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15387,"byte_end":15394,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15630,"byte_end":15633,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<ParamList>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `ParamList`.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty `ParamList`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15581,"byte_end":15618,"line_start":141,"line_end":141,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16115,"byte_end":16130,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"extended_tweets","qualname":"<ParamList>::extended_tweets","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the `tweet_mode=extended` parameter to this `ParamList`. Not including this parameter\n will cause tweets to be loaded with legacy parameters, and a potentially-truncated `text`\n if the tweet is longer than 140 characters. The `Deserialize` impl for `Tweet`s (or\n anything that directly or indirectly includes a `Tweet`) expects the extended tweet format\n enabled by this function.\n","sig":null,"attributes":[{"value":"/ Adds the `tweet_mode=extended` parameter to this `ParamList`. Not including this parameter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15686,"byte_end":15780,"line_start":146,"line_end":146,"column_start":5,"column_end":99}},{"value":"/ will cause tweets to be loaded with legacy parameters, and a potentially-truncated `text`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15785,"byte_end":15878,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ if the tweet is longer than 140 characters. The `Deserialize` impl for `Tweet`s (or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15883,"byte_end":15970,"line_start":148,"line_end":148,"column_start":5,"column_end":92}},{"value":"/ anything that directly or indirectly includes a `Tweet`) expects the extended tweet format","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15975,"byte_end":16069,"line_start":149,"line_end":149,"column_start":5,"column_end":99}},{"value":"/ enabled by this function.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16074,"byte_end":16103,"line_start":150,"line_end":150,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16278,"byte_end":16287,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"add_param","qualname":"<ParamList>::add_param","value":"fn (mut self, key: impl Into<Cow<'static, str>>, value: impl Into<Cow<'static, str>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the given key/value parameter to this `ParamList`.\n","sig":null,"attributes":[{"value":"/ Adds the given key/value parameter to this `ParamList`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16207,"byte_end":16266,"line_start":155,"line_end":155,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16812,"byte_end":16825,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"add_opt_param","qualname":"<ParamList>::add_opt_param","value":"fn (self, key: impl Into<Cow<'static, str>>, value: Option<impl Into<Cow<'static, str>>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the given key/value parameter to this `ParamList` only if the given value is `Some`.","sig":null,"attributes":[{"value":"/ Adds the given key/value parameter to this `ParamList` only if the given value is `Some`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16482,"byte_end":16575,"line_start":165,"line_end":165,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16580,"byte_end":16583,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This can be a convenient wrapper to use in case you may or may not want to include","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16588,"byte_end":16674,"line_start":167,"line_end":167,"column_start":5,"column_end":91}},{"value":"/ something based on some condition. If the given value is `None`, then the `ParamList` is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16679,"byte_end":16771,"line_start":168,"line_end":168,"column_start":5,"column_end":97}},{"value":"/ returned unmodified.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":16776,"byte_end":16800,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17224,"byte_end":17237,"line_start":183,"line_end":183,"column_start":12,"column_end":25},"name":"add_param_ref","qualname":"<ParamList>::add_param_ref","value":"fn (&mut self, key: impl Into<Cow<'static, str>>, value: impl Into<Cow<'static, str>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the given key/value to this `ParamList` by mutating it in place, rather than consuming\n it as in `add_param`.\n","sig":null,"attributes":[{"value":"/ Adds the given key/value to this `ParamList` by mutating it in place, rather than consuming","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17087,"byte_end":17182,"line_start":181,"line_end":181,"column_start":5,"column_end":100}},{"value":"/ it as in `add_param`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17187,"byte_end":17212,"line_start":182,"line_end":182,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17568,"byte_end":17582,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"add_user_param","qualname":"<ParamList>::add_user_param","value":"fn (self, id: user::UserID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the given `UserID` as a parameter to this `ParamList` by adding either a `user_id` or\n `screen_name` parameter as appropriate.\n","sig":null,"attributes":[{"value":"/ Adds the given `UserID` as a parameter to this `ParamList` by adding either a `user_id` or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17414,"byte_end":17508,"line_start":191,"line_end":191,"column_start":5,"column_end":99}},{"value":"/ `screen_name` parameter as appropriate.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17513,"byte_end":17556,"line_start":192,"line_end":192,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":18001,"byte_end":18015,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"add_list_param","qualname":"<ParamList>::add_list_param","value":"fn (mut self, list: list::ListID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the given `ListID` as a parameter to this `ParamList` by adding either an\n `owner_id`/`owner_screen_name` and `slug` pair, or a `list_id`, as appropriate.\n","sig":null,"attributes":[{"value":"/ Adds the given `ListID` as a parameter to this `ParamList` by adding either an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17819,"byte_end":17901,"line_start":200,"line_end":200,"column_start":5,"column_end":87}},{"value":"/ `owner_id`/`owner_screen_name` and `slug` pair, or a `list_id`, as appropriate.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":17906,"byte_end":17989,"line_start":201,"line_end":201,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":19057,"byte_end":19070,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"to_urlencoded","qualname":"<ParamList>::to_urlencoded","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Renders this `ParamList` as an `application/x-www-form-urlencoded` string.","sig":null,"attributes":[{"value":"/ Renders this `ParamList` as an `application/x-www-form-urlencoded` string.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":18797,"byte_end":18875,"line_start":224,"line_end":224,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":18880,"byte_end":18883,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The key/value pairs are printed as `key1=value1&key2=value2`, with all keys and values","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":18888,"byte_end":18978,"line_start":226,"line_end":226,"column_start":5,"column_end":95}},{"value":"/ being percent-encoded according to Twitter's requirements.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":18983,"byte_end":19045,"line_start":227,"line_end":227,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"auth","qualname":"::auth","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":148},{"krate":0,"index":222},{"krate":0,"index":1550},{"krate":0,"index":1604},{"krate":0,"index":1602},{"krate":0,"index":1596},{"krate":0,"index":1553},{"krate":0,"index":223},{"krate":0,"index":1606},{"krate":0,"index":1696},{"krate":0,"index":1694},{"krate":0,"index":1688},{"krate":0,"index":1613},{"krate":0,"index":228},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":254}],"decl_id":null,"docs":" Types and methods used to authenticate calls to Twitter.","sig":null,"attributes":[{"value":"! Types and methods used to authenticate calls to Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":31850,"byte_end":31910,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":31911,"byte_end":31914,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Authenticating Requests With Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":31915,"byte_end":31957,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":31958,"byte_end":31961,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! egg-mode uses a [`Token`] type to represent successfully authenticating with Twitter. The","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":31962,"byte_end":32055,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"! process of obtaining a `Token` is somewhat complicated, and there are a few distinct routes you","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32056,"byte_end":32155,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"! can take to get one. Which route you take depends on whether you want to only access public","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32156,"byte_end":32251,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"! data versus wanting to act on behalf of a specific user, and whether you can open a web browser","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32252,"byte_end":32351,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"! and/or redirect web requests to and from Twitter. Twitter's [Authentication Overview][auth] has","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32352,"byte_end":32451,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"! the complete information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32452,"byte_end":32481,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32482,"byte_end":32485,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! [`Token`]: enum.Token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32486,"byte_end":32516,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"! [auth]: https://developer.twitter.com/en/docs/basics/authentication/overview","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32517,"byte_end":32597,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32598,"byte_end":32601,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Regardless of which route you take, you need to [register] with Twitter's Developer site and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32602,"byte_end":32698,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"! [set up an app][apps] to get a set of keys that represent your code interacting with the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32699,"byte_end":32791,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"! Twitter service. These are called the \"consumer key\" and \"consumer secret\", and you can store","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32792,"byte_end":32889,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"! them in a [`KeyPair`] to start the authentication process with egg-mode. At an HTTP request","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32890,"byte_end":32985,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"! level, these keys are sent with every API call regardless of how you choose to authenticate.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":32986,"byte_end":33082,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"! (There are other keys given when you register an app, but those will be mentioned below when","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33083,"byte_end":33179,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"! talking about Access tokens.)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33180,"byte_end":33213,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33214,"byte_end":33217,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! [register]: https://developer.twitter.com/en/apply-for-access","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33218,"byte_end":33283,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"! [apps]: https://developer.twitter.com/en/apps","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33284,"byte_end":33333,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"! [`KeyPair`]: struct.KeyPair.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33334,"byte_end":33370,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33371,"byte_end":33374,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! There are two kinds of `Tokens` used within egg-mode, representing the two major ways to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33375,"byte_end":33467,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"! interact with the Twitter API: Bearer tokens, for accessing public information on Twitter from","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33468,"byte_end":33566,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"! the point of view of your app itself, and Access tokens, for performing actions or requesting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33567,"byte_end":33664,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"! data on behalf of a specific user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33665,"byte_end":33703,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33704,"byte_end":33707,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ## Bearer Tokens","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33708,"byte_end":33728,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33729,"byte_end":33732,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! The simplest kind of `Token` you can get is called a \"Bearer token\".  Bearer tokens are for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33733,"byte_end":33828,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"! when you want to perform requests on behalf of your app itself, instead of a specific user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33829,"byte_end":33924,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"! Bearer tokens are the API equivalent of viewing Twitter from a logged-out session. Anything","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":33925,"byte_end":34020,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"! that's already public can be viewed, but things like protected users or the home timeline can't","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34021,"byte_end":34120,"line_start":41,"line_end":41,"column_start":1,"column_end":100}},{"value":"! be accessed with bearer tokens. On the other hand, because you don't need to authenticate a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34121,"byte_end":34216,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"! user, obtaining a bearer token is relatively simple.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34217,"byte_end":34273,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34274,"byte_end":34277,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! If a Bearer token will work for your purposes, use the following steps to get a Token:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34278,"byte_end":34368,"line_start":45,"line_end":45,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34369,"byte_end":34372,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! 1. With the consumer key and secret from Twitter, ask Twitter for the current [Bearer token]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34373,"byte_end":34469,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"!    for your application.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34470,"byte_end":34498,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34499,"byte_end":34502,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! [Bearer token]: fn.bearer_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34503,"byte_end":34543,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34544,"byte_end":34547,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! And... that's it! This Bearer token can be cached and saved for future use. It will not expire","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34548,"byte_end":34646,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"! until you ask Twitter to [invalidate] the token for you. Otherwise, this token can be used the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34647,"byte_end":34745,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"! same way as access tokens below, but with the restrictions mentioned earlier.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34746,"byte_end":34827,"line_start":54,"line_end":54,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34828,"byte_end":34831,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! [invalidate]: fn.invalidate_bearer.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34832,"byte_end":34875,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34876,"byte_end":34879,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ### Example (Bearer Token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34880,"byte_end":34910,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34911,"byte_end":34914,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34915,"byte_end":34933,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"! # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34934,"byte_end":34954,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"! # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34955,"byte_end":34978,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"! let con_token = egg_mode::KeyPair::new(\"consumer key\", \"consumer secret\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":34979,"byte_end":35057,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"! let token = egg_mode::auth::bearer_token(&con_token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35058,"byte_end":35130,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35131,"byte_end":35134,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! // token can be given to *most* egg_mode methods that ask for a token","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35135,"byte_end":35208,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"! // for restrictions, see docs for bearer_token","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35209,"byte_end":35259,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35260,"byte_end":35267,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35268,"byte_end":35275,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35276,"byte_end":35279,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! ## Access Tokens","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35280,"byte_end":35300,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35301,"byte_end":35304,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! Access tokens are for when you want to perform your requests on behalf of a specific user. This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35305,"byte_end":35404,"line_start":73,"line_end":73,"column_start":1,"column_end":100}},{"value":"! could be for something like posting to their account, sending and receiving direct messages for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35405,"byte_end":35504,"line_start":74,"line_end":74,"column_start":1,"column_end":100}},{"value":"! them, viewing protected accounts they follow, and other actions that only make sense from the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35505,"byte_end":35602,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"! perspective from a specific user. Because of the two-fold nature of making sure your requests","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35603,"byte_end":35700,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"! are signed from your specific *app* and from that specific *user*, the authentication process","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35701,"byte_end":35798,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"! for access tokens is relatively complicated.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35799,"byte_end":35847,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35848,"byte_end":35851,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! The process to get an access token for a specific user (with this library) has three basic","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35852,"byte_end":35946,"line_start":80,"line_end":80,"column_start":1,"column_end":95}},{"value":"! steps:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35947,"byte_end":35957,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35958,"byte_end":35961,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! 1. Log your request with Twitter by getting a [request token][].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":35962,"byte_end":36030,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"! 2. Direct the user to grant permission to your application by sending them to an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36031,"byte_end":36115,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!    [authenticate][] or [authorize][] URL, depending on the nature of your app.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36116,"byte_end":36198,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"! 3. Convert the verifier given by the permission request into an [access token][].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36199,"byte_end":36284,"line_start":86,"line_end":86,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36285,"byte_end":36288,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! [request token]: fn.request_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36289,"byte_end":36331,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"! [authorize]: fn.authorize_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36332,"byte_end":36370,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"! [authenticate]: fn.authenticate_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36371,"byte_end":36415,"line_start":90,"line_end":90,"column_start":1,"column_end":45}},{"value":"! [access token]: fn.access_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36416,"byte_end":36456,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36457,"byte_end":36460,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! Before you get too deep into the authentication process, it helps to know a couple things about","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36461,"byte_end":36560,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"! the app you're writing:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36561,"byte_end":36588,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36589,"byte_end":36592,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! * Is your app in an environment where directing users to and from a web page is easy? (e.g. a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36593,"byte_end":36690,"line_start":96,"line_end":96,"column_start":1,"column_end":98}},{"value":"!   website, or a mobile app)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36691,"byte_end":36722,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"! * Are you using Twitter authentication as a substitute for user accounts in your own","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36723,"byte_end":36811,"line_start":98,"line_end":98,"column_start":1,"column_end":89}},{"value":"!   application, instead of wanting to interact with their Twitter account?","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36812,"byte_end":36889,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36890,"byte_end":36893,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Depending on your answer to the first question, you may need to use \"PIN-Based Authorization\",","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36894,"byte_end":36992,"line_start":101,"line_end":101,"column_start":1,"column_end":99}},{"value":"! where the user completes the authentication/authorization process in a separate window and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":36993,"byte_end":37087,"line_start":102,"line_end":102,"column_start":1,"column_end":95}},{"value":"! receives a numeric PIN in response that your app can use to complete the authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37088,"byte_end":37179,"line_start":103,"line_end":103,"column_start":1,"column_end":92}},{"value":"! process. The alternative to that is the standard OAuth flow, where a web browser is directed to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37180,"byte_end":37279,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"! Twitter to complete the login and authorization, then redirected back to your app to receive","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37280,"byte_end":37376,"line_start":105,"line_end":105,"column_start":1,"column_end":97}},{"value":"! the access token proper. The way to signal one method or another is by the `callback` parameter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37377,"byte_end":37476,"line_start":106,"line_end":106,"column_start":1,"column_end":100}},{"value":"! to the [access token] request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37477,"byte_end":37511,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37512,"byte_end":37515,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! The second question informs *where* you send the user to authorize your app. Using the \"Sign In","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37516,"byte_end":37615,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"! With Twitter\" flow, your app could be able to transparently request another access token","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37616,"byte_end":37708,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"! without the user needing to accept the connection every time. This is ideal for websites where","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37709,"byte_end":37807,"line_start":111,"line_end":111,"column_start":1,"column_end":99}},{"value":"! a \"Sign In With Twitter\" button could replace a regular login button, using a user's Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37808,"byte_end":37904,"line_start":112,"line_end":112,"column_start":1,"column_end":97}},{"value":"! account in place for regular username/password credentials. To be able to use the \"Sign In With","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":37905,"byte_end":38004,"line_start":113,"line_end":113,"column_start":1,"column_end":100}},{"value":"! Twitter\" flow, you must first enable it for your app on Twitter's Application Manager.  Then,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38005,"byte_end":38102,"line_start":114,"line_end":114,"column_start":1,"column_end":98}},{"value":"! for Step 2 of the authentication process, send the user to an [authenticate] URL. If you don't","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38103,"byte_end":38201,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"! need or want to use the \"Sign In With Twitter\" process, send the user to an [authorize] URL","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38202,"byte_end":38297,"line_start":116,"line_end":116,"column_start":1,"column_end":96}},{"value":"! instead.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38298,"byte_end":38310,"line_start":117,"line_end":117,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38311,"byte_end":38314,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! The primary difference between the different URLs for Step 2 is that an [authenticate] URL","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38315,"byte_end":38409,"line_start":119,"line_end":119,"column_start":1,"column_end":95}},{"value":"! allows the above behavior, whereas an [authorize] URL does not require the extra setting in the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38410,"byte_end":38509,"line_start":120,"line_end":120,"column_start":1,"column_end":100}},{"value":"! app manager and always requires the user to re-authorize the app every time they're sent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38510,"byte_end":38602,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"! through the authentication process. Since access tokens can be cached and reused indefinitely","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38603,"byte_end":38700,"line_start":122,"line_end":122,"column_start":1,"column_end":98}},{"value":"! until the app's access is revoked, you only really need to send the user through the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38701,"byte_end":38789,"line_start":123,"line_end":123,"column_start":1,"column_end":89}},{"value":"! authentication process once.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38790,"byte_end":38822,"line_start":124,"line_end":124,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38823,"byte_end":38826,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"! The end result of Step 2 is that your app receives a \"verifier\" to vouch for the user's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38827,"byte_end":38918,"line_start":126,"line_end":126,"column_start":1,"column_end":92}},{"value":"! acceptance of your app. With PIN-Based Authorization, the user receives a PIN from Twitter that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":38919,"byte_end":39018,"line_start":127,"line_end":127,"column_start":1,"column_end":100}},{"value":"! acts as the verifier. With \"Sign In With Twitter\" and its counterpart, \"3-Legged","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39019,"byte_end":39103,"line_start":128,"line_end":128,"column_start":1,"column_end":85}},{"value":"! Authorization\", the verifier is given as a query parameter to the callback URL given back in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39104,"byte_end":39200,"line_start":129,"line_end":129,"column_start":1,"column_end":97}},{"value":"! Step 1. With this verifier and the original request token, you can combine them with your app's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39201,"byte_end":39300,"line_start":130,"line_end":130,"column_start":1,"column_end":100}},{"value":"! consumer token to get the [access token] that opens up the rest of the Twitter API.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39301,"byte_end":39388,"line_start":131,"line_end":131,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39389,"byte_end":39392,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ### Example (Access Token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39393,"byte_end":39423,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39424,"byte_end":39427,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! For \"PIN-Based Authorization\":","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39428,"byte_end":39462,"line_start":135,"line_end":135,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39463,"byte_end":39466,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39467,"byte_end":39485,"line_start":137,"line_end":137,"column_start":1,"column_end":19}},{"value":"! # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39486,"byte_end":39506,"line_start":138,"line_end":138,"column_start":1,"column_end":21}},{"value":"! # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39507,"byte_end":39530,"line_start":139,"line_end":139,"column_start":1,"column_end":24}},{"value":"! let con_token = egg_mode::KeyPair::new(\"consumer key\", \"consumer secret\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39531,"byte_end":39609,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"! // \"oob\" is needed for PIN-based auth; see docs for `request_token` for more info","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39610,"byte_end":39695,"line_start":141,"line_end":141,"column_start":1,"column_end":86}},{"value":"! let request_token = egg_mode::auth::request_token(&con_token, \"oob\").await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39696,"byte_end":39784,"line_start":142,"line_end":142,"column_start":1,"column_end":89}},{"value":"! let auth_url = egg_mode::auth::authorize_url(&request_token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39785,"byte_end":39850,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39851,"byte_end":39854,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! // give auth_url to the user, they can sign in to Twitter and accept your app's permissions.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39855,"byte_end":39951,"line_start":145,"line_end":145,"column_start":1,"column_end":97}},{"value":"! // they'll receive a PIN in return, they need to give this to your application","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":39952,"byte_end":40034,"line_start":146,"line_end":146,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40035,"byte_end":40038,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"! let verifier = \"123456\"; //read the PIN from the user here","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40039,"byte_end":40101,"line_start":148,"line_end":148,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40102,"byte_end":40105,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! // note this consumes con_token; if you want to sign in multiple accounts, clone it here","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40106,"byte_end":40198,"line_start":150,"line_end":150,"column_start":1,"column_end":93}},{"value":"! let (token, user_id, screen_name) =","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40199,"byte_end":40238,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"!     egg_mode::auth::access_token(con_token, &request_token, verifier).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40239,"byte_end":40328,"line_start":152,"line_end":152,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40329,"byte_end":40332,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! // token can be given to any egg_mode method that asks for a token","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40333,"byte_end":40403,"line_start":154,"line_end":154,"column_start":1,"column_end":71}},{"value":"! // user_id and screen_name refer to the user who signed in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40404,"byte_end":40466,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40467,"byte_end":40474,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40475,"byte_end":40482,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40483,"byte_end":40486,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! **WARNING**: The consumer token and preset access token mentioned below are as privileged as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40487,"byte_end":40583,"line_start":159,"line_end":159,"column_start":1,"column_end":97}},{"value":"! passwords! If your consumer key pair leaks or is visible to the public, anyone can impersonate","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40584,"byte_end":40682,"line_start":160,"line_end":160,"column_start":1,"column_end":99}},{"value":"! your app! If you use a fixed token for your app, it's recommended to set them in separate files","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40683,"byte_end":40782,"line_start":161,"line_end":161,"column_start":1,"column_end":100}},{"value":"! and use `include_str!()` (from the standard library), or save them in an environment file and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40783,"byte_end":40880,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"! use a library like `dotenv` to load them in, so you can safely exclude them from source","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40881,"byte_end":40972,"line_start":163,"line_end":163,"column_start":1,"column_end":92}},{"value":"! control.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40973,"byte_end":40985,"line_start":164,"line_end":164,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40986,"byte_end":40989,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! ### Shortcut: Pre-Generated Access Token","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":40990,"byte_end":41034,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41035,"byte_end":41038,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! If you only want to sign in as yourself, there's a shortcut you can use to get an Access token.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41039,"byte_end":41138,"line_start":168,"line_end":168,"column_start":1,"column_end":100}},{"value":"! When you sign up for an app and get your consumer token, a second key/secret pair are given to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41139,"byte_end":41237,"line_start":169,"line_end":169,"column_start":1,"column_end":99}},{"value":"! you. This \"access token\" and \"access token secret\" act as authorization to access your own","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41238,"byte_end":41332,"line_start":170,"line_end":170,"column_start":1,"column_end":95}},{"value":"! account with your own code, and can be used to directly construct an egg-mode `Token`:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41333,"byte_end":41423,"line_start":171,"line_end":171,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41424,"byte_end":41427,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41428,"byte_end":41439,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"! let con_token = egg_mode::KeyPair::new(\"consumer key\", \"consumer secret\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41440,"byte_end":41518,"line_start":174,"line_end":174,"column_start":1,"column_end":79}},{"value":"! let access_token = egg_mode::KeyPair::new(\"access token key\", \"access token secret\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41519,"byte_end":41608,"line_start":175,"line_end":175,"column_start":1,"column_end":90}},{"value":"! let token = egg_mode::Token::Access {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41609,"byte_end":41650,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"!     consumer: con_token,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41651,"byte_end":41679,"line_start":177,"line_end":177,"column_start":1,"column_end":29}},{"value":"!     access: access_token,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41680,"byte_end":41709,"line_start":178,"line_end":178,"column_start":1,"column_end":30}},{"value":"! };","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41710,"byte_end":41716,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41717,"byte_end":41720,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! // token can be given to any egg_mode method that asks for a token","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41721,"byte_end":41791,"line_start":181,"line_end":181,"column_start":1,"column_end":71}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41792,"byte_end":41799,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41800,"byte_end":41803,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! For more information on the individual steps of the authentication process, see the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41804,"byte_end":41891,"line_start":184,"line_end":184,"column_start":1,"column_end":88}},{"value":"! documentation for the functions in this module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":41892,"byte_end":41943,"line_start":185,"line_end":185,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":62973,"byte_end":62987,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"RequestBuilder","qualname":"::auth::raw::RequestBuilder","value":"RequestBuilder {  }","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" Builder struct to assemble and sign an API request.","sig":null,"attributes":[{"value":"/ Builder struct to assemble and sign an API request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":62773,"byte_end":62828,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":62829,"byte_end":62832,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For more information about how to use this type and about building requests manually, see [the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":62833,"byte_end":62931,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ module docs](index.html).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":62932,"byte_end":62961,"line_start":27,"line_end":27,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63282,"byte_end":63285,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<RequestBuilder>::new","value":"fn (method: Method, base_uri: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RequestBuilder` with the given HTTP method and base URL.\n","sig":null,"attributes":[{"value":"/ Creates a new `RequestBuilder` with the given HTTP method and base URL.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63195,"byte_end":63270,"line_start":38,"line_end":38,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64147,"byte_end":64164,"line_start":60,"line_end":60,"column_start":12,"column_end":29},"name":"with_query_params","qualname":"<RequestBuilder>::with_query_params","value":"fn (self, params: &ParamList) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the given parameters as a query string. Parameters given this way will be included in\n the OAuth signature.","sig":null,"attributes":[{"value":"/ Adds the given parameters as a query string. Parameters given this way will be included in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63531,"byte_end":63625,"line_start":50,"line_end":50,"column_start":5,"column_end":99}},{"value":"/ the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63630,"byte_end":63654,"line_start":51,"line_end":51,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63659,"byte_end":63662,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that functions that take a `ParamList` accumulate parameters as part of the OAuth","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63667,"byte_end":63757,"line_start":53,"line_end":53,"column_start":5,"column_end":95}},{"value":"/ signature. If you call both `with_query_params` and `with_body_params`, both sets of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63762,"byte_end":63850,"line_start":54,"line_end":54,"column_start":5,"column_end":93}},{"value":"/ parameters will be used as part of the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63855,"byte_end":63914,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63919,"byte_end":63922,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ On the other hand, the query string is not cumulative. If you call `with_query_params`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63927,"byte_end":64017,"line_start":57,"line_end":57,"column_start":5,"column_end":95}},{"value":"/ multiple times, only the last set of parameters will actually be considered part of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64022,"byte_end":64113,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ query string.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64118,"byte_end":64135,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65231,"byte_end":65247,"line_start":84,"line_end":84,"column_start":12,"column_end":28},"name":"with_body_params","qualname":"<RequestBuilder>::with_body_params","value":"fn (self, params: &ParamList) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the given params as a request body, formatted as `application/x-www-form-urlencoded`.\n Parameters given this way will be included in the OAuth signature.","sig":null,"attributes":[{"value":"/ Adds the given params as a request body, formatted as `application/x-www-form-urlencoded`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64549,"byte_end":64643,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ Parameters given this way will be included in the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64648,"byte_end":64718,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64723,"byte_end":64726,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that functions that take a `ParamList` accumulate parameters as part of the OAuth","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64731,"byte_end":64821,"line_start":77,"line_end":77,"column_start":5,"column_end":95}},{"value":"/ signature. If you call both `with_query_params` and `with_body_params`, both sets of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64826,"byte_end":64914,"line_start":78,"line_end":78,"column_start":5,"column_end":93}},{"value":"/ parameters will be used as part of the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64919,"byte_end":64978,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64983,"byte_end":64986,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that the functions that specify a request body each overwrite the body. For example,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":64991,"byte_end":65084,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ if you specify `with_body_params` and also `with_body_json`, only the one you call last","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65089,"byte_end":65180,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ will be sent with the request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65185,"byte_end":65219,"line_start":83,"line_end":83,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66077,"byte_end":66091,"line_start":104,"line_end":104,"column_start":12,"column_end":26},"name":"with_body_json","qualname":"<RequestBuilder>::with_body_json","value":"fn (self, body: impl serde::Serialize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Includes the given data as the request body, formatted as JSON. Data given this way will\n *not* be included in the OAuth signature.","sig":null,"attributes":[{"value":"/ Includes the given data as the request body, formatted as JSON. Data given this way will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65682,"byte_end":65774,"line_start":98,"line_end":98,"column_start":5,"column_end":97}},{"value":"/ *not* be included in the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65779,"byte_end":65824,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65829,"byte_end":65832,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Note that the functions that specify a request body each overwrite the body. For example,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65837,"byte_end":65930,"line_start":101,"line_end":101,"column_start":5,"column_end":98}},{"value":"/ if you specify `with_body_params` and also `with_body_json`, only the one you call last","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":65935,"byte_end":66026,"line_start":102,"line_end":102,"column_start":5,"column_end":96}},{"value":"/ will be sent with the request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66031,"byte_end":66065,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66645,"byte_end":66654,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"with_body","qualname":"<RequestBuilder>::with_body","value":"fn (self, body: impl Into<Body>, content: &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Includes the given data as the request body, with the given content type. Data given this\n way will *not* be included in the OAuth signature.","sig":null,"attributes":[{"value":"/ Includes the given data as the request body, with the given content type. Data given this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66245,"byte_end":66338,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/ way will *not* be included in the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66343,"byte_end":66397,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66402,"byte_end":66405,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that the functions that specify a request body each overwrite the body. For example,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66410,"byte_end":66503,"line_start":111,"line_end":111,"column_start":5,"column_end":98}},{"value":"/ if you specify `with_body_params` and also `with_body`, only the one you call last will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66508,"byte_end":66602,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ sent with the request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66607,"byte_end":66633,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67075,"byte_end":67089,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"oauth_callback","qualname":"<RequestBuilder>::oauth_callback","value":"fn (self, callback: impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Includes the given OAuth Callback into the OAuth parameters.","sig":null,"attributes":[{"value":"/ Includes the given OAuth Callback into the OAuth parameters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66830,"byte_end":66894,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66899,"byte_end":66902,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Note that `oauth_callback` and `oauth_verifier` are mutually exclusive. If you specify both","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":66907,"byte_end":67002,"line_start":123,"line_end":123,"column_start":5,"column_end":100}},{"value":"/ on the same request, only the last one will be sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67007,"byte_end":67063,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67503,"byte_end":67517,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"oauth_verifier","qualname":"<RequestBuilder>::oauth_verifier","value":"fn (self, verifier: impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Includes the given OAuth Verifier into the OAuth parameters.","sig":null,"attributes":[{"value":"/ Includes the given OAuth Verifier into the OAuth parameters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67258,"byte_end":67322,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67327,"byte_end":67330,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that `oauth_callback` and `oauth_verifier` are mutually exclusive. If you specify both","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67335,"byte_end":67430,"line_start":134,"line_end":134,"column_start":5,"column_end":100}},{"value":"/ on the same request, only the last one will be sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67435,"byte_end":67491,"line_start":135,"line_end":135,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68033,"byte_end":68045,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"request_keys","qualname":"<RequestBuilder>::request_keys","value":"fn (self, consumer_key: &KeyPair, token: Option<&KeyPair>) -> Request<Body>","parent":null,"children":[],"decl_id":null,"docs":" Formats this `RequestBuilder` into a complete `Request`, signing it with the given keys.","sig":null,"attributes":[{"value":"/ Formats this `RequestBuilder` into a complete `Request`, signing it with the given keys.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67686,"byte_end":67778,"line_start":143,"line_end":143,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67783,"byte_end":67786,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ While the `token` parameter is an Option here, it should only be `None` when generating a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67791,"byte_end":67884,"line_start":145,"line_end":145,"column_start":5,"column_end":98}},{"value":"/ request token; all other calls must have two sets of keys (or be authenticated in a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67889,"byte_end":67976,"line_start":146,"line_end":146,"column_start":5,"column_end":92}},{"value":"/ different way, i.e. a Bearer token).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":67981,"byte_end":68021,"line_start":147,"line_end":147,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68849,"byte_end":68862,"line_start":162,"line_end":162,"column_start":12,"column_end":25},"name":"request_token","qualname":"<RequestBuilder>::request_token","value":"fn (self, token: &Token) -> Request<Body>","parent":null,"children":[],"decl_id":null,"docs":" Formats this `RequestBuilder` into a complete `Request`, signing it with the given token.","sig":null,"attributes":[{"value":"/ Formats this `RequestBuilder` into a complete `Request`, signing it with the given token.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68395,"byte_end":68488,"line_start":155,"line_end":155,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68493,"byte_end":68496,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ If the given `Token` is an Access token, the request will be signed using OAuth 1.0a, using","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68501,"byte_end":68596,"line_start":157,"line_end":157,"column_start":5,"column_end":100}},{"value":"/ the given URI, HTTP method, and parameters to create a signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68601,"byte_end":68670,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68675,"byte_end":68678,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If the given `Token` is a Bearer token, the request will be authenticated using OAuth 2.0,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68683,"byte_end":68777,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ specifying the given Bearer token as authorization.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":68782,"byte_end":68837,"line_start":161,"line_end":161,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69913,"byte_end":69936,"line_start":180,"line_end":180,"column_start":12,"column_end":35},"name":"request_consumer_bearer","qualname":"<RequestBuilder>::request_consumer_bearer","value":"fn (self, consumer_key: &KeyPair) -> Request<Body>","parent":null,"children":[],"decl_id":null,"docs":" Formats this `RequestBuilder` into a complete `Request`, with an Authorization header\n formatted using HTTP Basic authentication using the given consumer key, as expected by the\n `POST oauth2/token` endpoint.","sig":null,"attributes":[{"value":"/ Formats this `RequestBuilder` into a complete `Request`, with an Authorization header","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69134,"byte_end":69223,"line_start":169,"line_end":169,"column_start":5,"column_end":94}},{"value":"/ formatted using HTTP Basic authentication using the given consumer key, as expected by the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69228,"byte_end":69322,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ `POST oauth2/token` endpoint.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69327,"byte_end":69360,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69365,"byte_end":69368,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This Authorization should only be used when requesting a Bearer token; other requests need","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69373,"byte_end":69467,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"/ to be signed with multiple keys (as with `request_keys` or giving an Access token to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69472,"byte_end":69560,"line_start":174,"line_end":174,"column_start":5,"column_end":93}},{"value":"/ `request_token`) or with a proper Bearer token given to `request_token`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69565,"byte_end":69641,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69646,"byte_end":69649,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This authorization can also be used to access Enterprise API endpoints that require Basic","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69654,"byte_end":69747,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ authentication, using a `KeyPair` with the email address and password that would ordinarily","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69752,"byte_end":69847,"line_start":178,"line_end":178,"column_start":5,"column_end":100}},{"value":"/ be used to access the Enterprise API Console.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":69852,"byte_end":69901,"line_start":179,"line_end":179,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":78664,"byte_end":78667,"line_start":418,"line_end":418,"column_start":8,"column_end":11},"name":"get","qualname":"::auth::raw::get","value":"fn (uri: &str, token: &Token, params: Option<&ParamList>) -> Request<Body>","parent":null,"children":[],"decl_id":null,"docs":" Assemble a signed GET request to the given URL with the given parameters.","sig":null,"attributes":[{"value":"/ Assemble a signed GET request to the given URL with the given parameters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":78350,"byte_end":78427,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":78428,"byte_end":78431,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ The given parameters, if present, will be appended to the given `uri` as a percent-encoded","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":78432,"byte_end":78526,"line_start":415,"line_end":415,"column_start":1,"column_end":95}},{"value":"/ query string. If the given `token` is not a Bearer token, the parameters will also be used to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":78527,"byte_end":78624,"line_start":416,"line_end":416,"column_start":1,"column_end":98}},{"value":"/ create the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":78625,"byte_end":78656,"line_start":417,"line_end":417,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79382,"byte_end":79386,"line_start":432,"line_end":432,"column_start":8,"column_end":12},"name":"post","qualname":"::auth::raw::post","value":"fn (uri: &str, token: &Token, params: Option<&ParamList>) -> Request<Body>","parent":null,"children":[],"decl_id":null,"docs":" Assemble a signed POST request to the given URL with the given parameters.","sig":null,"attributes":[{"value":"/ Assemble a signed POST request to the given URL with the given parameters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79014,"byte_end":79092,"line_start":427,"line_end":427,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79093,"byte_end":79096,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ The given parameters, if present, will be percent-encoded and included in the POST body","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79097,"byte_end":79188,"line_start":429,"line_end":429,"column_start":1,"column_end":92}},{"value":"/ formatted with a content-type of `application/x-www-form-urlencoded`. If the given `token` is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79189,"byte_end":79286,"line_start":430,"line_end":430,"column_start":1,"column_end":98}},{"value":"/ not a Bearer token, the parameters will also be used to create the OAuth signature.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79287,"byte_end":79374,"line_start":431,"line_end":431,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":80155,"byte_end":80164,"line_start":447,"line_end":447,"column_start":8,"column_end":17},"name":"post_json","qualname":"::auth::raw::post_json","value":"fn <B> (uri: &str, token: &Token, body: B) -> Request<Body>","parent":null,"children":[],"decl_id":null,"docs":" Assemble a signed POST request to the given URL with the given JSON body.","sig":null,"attributes":[{"value":"/ Assemble a signed POST request to the given URL with the given JSON body.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79733,"byte_end":79810,"line_start":441,"line_end":441,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79811,"byte_end":79814,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ This method of building requests allows you to use endpoints that require a request body of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79815,"byte_end":79910,"line_start":443,"line_end":443,"column_start":1,"column_end":96}},{"value":"/ plain text or JSON, like `POST media/metadata/create`. Note that this function does not encode","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":79911,"byte_end":80009,"line_start":444,"line_end":444,"column_start":1,"column_end":99}},{"value":"/ its parameters into the OAuth signature, so take care if the endpoint you're using lists","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":80010,"byte_end":80102,"line_start":445,"line_end":445,"column_start":1,"column_end":93}},{"value":"/ parameters as part of its specification.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":80103,"byte_end":80147,"line_start":446,"line_end":446,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42960,"byte_end":42967,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"KeyPair","qualname":"::auth::KeyPair","value":"KeyPair { key, secret }","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"decl_id":null,"docs":" A key/secret pair representing the app that is sending a request or an authorization from a user.","sig":null,"attributes":[{"value":"/ A key/secret pair representing the app that is sending a request or an authorization from a user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42165,"byte_end":42266,"line_start":203,"line_end":203,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42267,"byte_end":42270,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ This type is used as part of the authentication process and to sign API requests afterward. For","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42271,"byte_end":42370,"line_start":205,"line_end":205,"column_start":1,"column_end":100}},{"value":"/ the most part it's used internally as part of a [`Token`], but at the very beginning of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42371,"byte_end":42466,"line_start":206,"line_end":206,"column_start":1,"column_end":96}},{"value":"/ authentication process, you'll need to manually create one to hold onto your \"consumer token\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42467,"byte_end":42564,"line_start":207,"line_end":207,"column_start":1,"column_end":98}},{"value":"/ and request a [request token].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42565,"byte_end":42599,"line_start":208,"line_end":208,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42600,"byte_end":42603,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`Token`]: enum.Token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42604,"byte_end":42634,"line_start":210,"line_end":210,"column_start":1,"column_end":31}},{"value":"/ [request token]: fn.request_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42635,"byte_end":42677,"line_start":211,"line_end":211,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42678,"byte_end":42681,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ For more information, see the [authentication documentation][auth].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42682,"byte_end":42753,"line_start":213,"line_end":213,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42754,"byte_end":42757,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [auth]: index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42758,"byte_end":42780,"line_start":215,"line_end":215,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42781,"byte_end":42784,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42785,"byte_end":42798,"line_start":217,"line_end":217,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42799,"byte_end":42802,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42803,"byte_end":42814,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ let con_token = egg_mode::KeyPair::new(\"consumer key\", \"consumer token\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42815,"byte_end":42892,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42893,"byte_end":42900,"line_start":221,"line_end":221,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43032,"byte_end":43035,"line_start":225,"line_end":225,"column_start":9,"column_end":12},"name":"key","qualname":"::auth::KeyPair::key","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"A key used to identify an application or user.\n","sig":null,"attributes":[{"value":"/A key used to identify an application or user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":42974,"byte_end":43023,"line_start":224,"line_end":224,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43136,"byte_end":43142,"line_start":227,"line_end":227,"column_start":9,"column_end":15},"name":"secret","qualname":"::auth::KeyPair::secret","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"A private key used to sign messages from an application or user.\n","sig":null,"attributes":[{"value":"/A private key used to sign messages from an application or user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43060,"byte_end":43127,"line_start":226,"line_end":226,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43372,"byte_end":43375,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyPair>::new","value":"fn <K, S> (key: K, secret: S) -> KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Creates a KeyPair with the given key and secret.","sig":null,"attributes":[{"value":"/ Creates a KeyPair with the given key and secret.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43185,"byte_end":43237,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43242,"byte_end":43245,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be called with either `&'static str` (a string literal) or `String` for either","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43250,"byte_end":43341,"line_start":233,"line_end":233,"column_start":5,"column_end":96}},{"value":"/ parameter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43346,"byte_end":43360,"line_start":234,"line_end":234,"column_start":5,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45201,"byte_end":45207,"line_start":279,"line_end":279,"column_start":5,"column_end":11},"name":"Access","qualname":"::auth::Token::Access","value":"Token::Access { consumer, access }","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" An OAuth Access token indicating the request is coming from a specific user.\n","sig":null,"attributes":[{"value":"/ An OAuth Access token indicating the request is coming from a specific user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45116,"byte_end":45196,"line_start":278,"line_end":278,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45581,"byte_end":45587,"line_start":287,"line_end":287,"column_start":5,"column_end":11},"name":"Bearer","qualname":"::auth::Token::Bearer","value":"Token::Bearer(String)","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" An OAuth Bearer token indicating the request is coming from the application itself, not a\n particular user.\n","sig":null,"attributes":[{"value":"/ An OAuth Bearer token indicating the request is coming from the application itself, not a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45458,"byte_end":45551,"line_start":285,"line_end":285,"column_start":5,"column_end":98}},{"value":"/ particular user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45556,"byte_end":45576,"line_start":286,"line_end":286,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45104,"byte_end":45109,"line_start":277,"line_end":277,"column_start":10,"column_end":15},"name":"Token","qualname":"::auth::Token","value":"Token::{Access, Bearer}","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1610}],"decl_id":null,"docs":" A token that can be used to sign requests to Twitter.","sig":null,"attributes":[{"value":"/ A token that can be used to sign requests to Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43814,"byte_end":43871,"line_start":255,"line_end":255,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43872,"byte_end":43875,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Token represents your authorization to call the Twitter API. It can either be a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43876,"byte_end":43975,"line_start":257,"line_end":257,"column_start":1,"column_end":100}},{"value":"/ [Bearer token], representing a \"logged-out\" view of Twitter coming from your app itself; or an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43976,"byte_end":44074,"line_start":258,"line_end":258,"column_start":1,"column_end":99}},{"value":"/ [Access token], representing a combination of your app's \"consumer\" key with a specific user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44075,"byte_end":44171,"line_start":259,"line_end":259,"column_start":1,"column_end":97}},{"value":"/ granting access for your app to use the Twitter API on their behalf. For more information, see","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44172,"byte_end":44270,"line_start":260,"line_end":260,"column_start":1,"column_end":99}},{"value":"/ the [authentication documentation][auth].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44271,"byte_end":44316,"line_start":261,"line_end":261,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44317,"byte_end":44320,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ [Bearer token]: index.html#bearer-tokens","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44321,"byte_end":44365,"line_start":263,"line_end":263,"column_start":1,"column_end":45}},{"value":"/ [Access token]: index.html#access-tokens","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44366,"byte_end":44410,"line_start":264,"line_end":264,"column_start":1,"column_end":45}},{"value":"/ [auth]: index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44411,"byte_end":44433,"line_start":265,"line_end":265,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44434,"byte_end":44437,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Once you have obtained a Token of either kind, the keys within may be saved and reused in the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44438,"byte_end":44535,"line_start":267,"line_end":267,"column_start":1,"column_end":98}},{"value":"/ future, as long as the access has not been revoked. **Note** that the keys saved in this type","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44536,"byte_end":44633,"line_start":268,"line_end":268,"column_start":1,"column_end":98}},{"value":"/ work just like a password, and they should be handled with care when you save them! If you","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44634,"byte_end":44728,"line_start":269,"line_end":269,"column_start":1,"column_end":95}},{"value":"/ believe your keys have been compromised, you can generate a new consumer token in [Twitter's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44729,"byte_end":44825,"line_start":270,"line_end":270,"column_start":1,"column_end":97}},{"value":"/ Apps Dashboard][apps], and if you've been using a Bearer token, you should [invalidate] it and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44826,"byte_end":44924,"line_start":271,"line_end":271,"column_start":1,"column_end":99}},{"value":"/ generate a new one.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44925,"byte_end":44948,"line_start":272,"line_end":272,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44949,"byte_end":44952,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ [apps]: https://developer.twitter.com/en/apps","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":44953,"byte_end":45002,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [invalidate]: fn.invalidate_bearer.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45003,"byte_end":45046,"line_start":275,"line_end":275,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":48082,"byte_end":48095,"line_start":341,"line_end":341,"column_start":14,"column_end":27},"name":"request_token","qualname":"::auth::request_token","value":"fn <S> (con_token: &KeyPair, callback: S) -> Result<KeyPair>","parent":null,"children":[],"decl_id":null,"docs":" With the given consumer KeyPair, ask Twitter for a request KeyPair that can be used to request\n access to the user's account.","sig":null,"attributes":[{"value":"/ With the given consumer KeyPair, ask Twitter for a request KeyPair that can be used to request","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45600,"byte_end":45698,"line_start":290,"line_end":290,"column_start":1,"column_end":99}},{"value":"/ access to the user's account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45699,"byte_end":45732,"line_start":291,"line_end":291,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45733,"byte_end":45736,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ # Access Token Authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45737,"byte_end":45770,"line_start":293,"line_end":293,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45771,"byte_end":45774,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ [Authentication overview](index.html)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45775,"byte_end":45816,"line_start":295,"line_end":295,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45817,"byte_end":45820,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ 1. **Request Token**: Authenticate your application","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45821,"byte_end":45876,"line_start":297,"line_end":297,"column_start":1,"column_end":56}},{"value":"/ 2. [Authorize]/[Authenticate]: Authenticate the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45877,"byte_end":45933,"line_start":298,"line_end":298,"column_start":1,"column_end":57}},{"value":"/ 3. [Access Token]: Confirm the authentication with Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45934,"byte_end":45996,"line_start":299,"line_end":299,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":45997,"byte_end":46000,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ [Authorize]: fn.authorize_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46001,"byte_end":46039,"line_start":301,"line_end":301,"column_start":1,"column_end":39}},{"value":"/ [Authenticate]: fn.authenticate_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46040,"byte_end":46084,"line_start":302,"line_end":302,"column_start":1,"column_end":45}},{"value":"/ [Access Token]: fn.access_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46085,"byte_end":46125,"line_start":303,"line_end":303,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46126,"byte_end":46129,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Request Token: Authenticate your application","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46130,"byte_end":46180,"line_start":305,"line_end":305,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46181,"byte_end":46184,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ To begin the authentication process, first log your request with Twitter by authenticating your","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46185,"byte_end":46284,"line_start":307,"line_end":307,"column_start":1,"column_end":100}},{"value":"/ application by itself. This \"request token\" is used in later steps to match all the requests to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46285,"byte_end":46384,"line_start":308,"line_end":308,"column_start":1,"column_end":100}},{"value":"/ the same authentication attempt.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46385,"byte_end":46421,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46422,"byte_end":46425,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ The parameter `callback` is used differently based on how your program is set up, and which","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46426,"byte_end":46521,"line_start":311,"line_end":311,"column_start":1,"column_end":96}},{"value":"/ authentication process you'd like to use. For applications where directing users to and from","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46522,"byte_end":46618,"line_start":312,"line_end":312,"column_start":1,"column_end":97}},{"value":"/ another web page is difficult, you can use the special value `\"oob\"` to indicate that you would","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46619,"byte_end":46718,"line_start":313,"line_end":313,"column_start":1,"column_end":100}},{"value":"/ like to use PIN-Based Authentication.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46719,"byte_end":46760,"line_start":314,"line_end":314,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46761,"byte_end":46764,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ Web-based applications and those that can handle web redirects transparently can instead supply","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46765,"byte_end":46864,"line_start":316,"line_end":316,"column_start":1,"column_end":100}},{"value":"/ a callback URL for that parameter. When the user completes the sign-in and authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46865,"byte_end":46958,"line_start":317,"line_end":317,"column_start":1,"column_end":94}},{"value":"/ process, they will be directed to the provided URL with the information necessary to complete","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":46959,"byte_end":47056,"line_start":318,"line_end":318,"column_start":1,"column_end":98}},{"value":"/ the authentication process. Depending on which Step 2 URL you use and whether you've enabled it","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47057,"byte_end":47156,"line_start":319,"line_end":319,"column_start":1,"column_end":100}},{"value":"/ for your app, this is called \"Sign In With Twitter\" or \"3-Legged Authorization\".","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47157,"byte_end":47241,"line_start":320,"line_end":320,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47242,"byte_end":47245,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ With this Request Token, you can assemble an [Authorize] or [Authenticate] URL that will allow","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47246,"byte_end":47344,"line_start":322,"line_end":322,"column_start":1,"column_end":99}},{"value":"/ the user to log in with Twitter and allow your app access to their account. See the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47345,"byte_end":47432,"line_start":323,"line_end":323,"column_start":1,"column_end":88}},{"value":"/ Authentication Overview for more details, but the short version is that you want to use","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47433,"byte_end":47524,"line_start":324,"line_end":324,"column_start":1,"column_end":92}},{"value":"/ [Authenticate] for \"Sign In With Twitter\" functionality, and [Authorize] if not.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47525,"byte_end":47609,"line_start":325,"line_end":325,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47610,"byte_end":47613,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47614,"byte_end":47628,"line_start":327,"line_end":327,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47629,"byte_end":47632,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47633,"byte_end":47651,"line_start":329,"line_end":329,"column_start":1,"column_end":19}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47652,"byte_end":47672,"line_start":330,"line_end":330,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47673,"byte_end":47696,"line_start":331,"line_end":331,"column_start":1,"column_end":24}},{"value":"/ let con_token = egg_mode::KeyPair::new(\"consumer key\", \"consumer token\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47697,"byte_end":47774,"line_start":332,"line_end":332,"column_start":1,"column_end":78}},{"value":"/ // for PIN-Based Auth","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47775,"byte_end":47800,"line_start":333,"line_end":333,"column_start":1,"column_end":26}},{"value":"/ let req_token = egg_mode::auth::request_token(&con_token, \"oob\").await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47801,"byte_end":47885,"line_start":334,"line_end":334,"column_start":1,"column_end":85}},{"value":"/ // for Sign In With Twitter/3-Legged Auth","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47886,"byte_end":47931,"line_start":335,"line_end":335,"column_start":1,"column_end":46}},{"value":"/ let req_token = egg_mode::auth::request_token(&con_token, \"https://myapp.io/auth\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":47932,"byte_end":48018,"line_start":336,"line_end":336,"column_start":1,"column_end":87}},{"value":"/     .await","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":48019,"byte_end":48033,"line_start":337,"line_end":337,"column_start":1,"column_end":15}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":48034,"byte_end":48052,"line_start":338,"line_end":338,"column_start":1,"column_end":19}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":48053,"byte_end":48060,"line_start":339,"line_end":339,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":48061,"byte_end":48068,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51994,"byte_end":52007,"line_start":421,"line_end":421,"column_start":8,"column_end":21},"name":"authorize_url","qualname":"::auth::authorize_url","value":"fn (request_token: &KeyPair) -> String","parent":null,"children":[],"decl_id":null,"docs":" With the given request KeyPair, return a URL that a user can access to accept or reject an\n authorization request.","sig":null,"attributes":[{"value":"/ With the given request KeyPair, return a URL that a user can access to accept or reject an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49339,"byte_end":49433,"line_start":378,"line_end":378,"column_start":1,"column_end":95}},{"value":"/ authorization request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49434,"byte_end":49460,"line_start":379,"line_end":379,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49461,"byte_end":49464,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ # Access Token Authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49465,"byte_end":49498,"line_start":381,"line_end":381,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49499,"byte_end":49502,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ [Authentication overview](index.html)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49503,"byte_end":49544,"line_start":383,"line_end":383,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49545,"byte_end":49548,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ 1. [Request Token]: Authenticate your application","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49549,"byte_end":49602,"line_start":385,"line_end":385,"column_start":1,"column_end":54}},{"value":"/ 2. **Authorize**/[Authenticate]: Authenticate the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49603,"byte_end":49661,"line_start":386,"line_end":386,"column_start":1,"column_end":59}},{"value":"/ 3. [Access Token]: Confirm the authentication with Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49662,"byte_end":49724,"line_start":387,"line_end":387,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49725,"byte_end":49728,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ [Request Token]: fn.request_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49729,"byte_end":49771,"line_start":389,"line_end":389,"column_start":1,"column_end":43}},{"value":"/ [Authenticate]: fn.authenticate_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49772,"byte_end":49816,"line_start":390,"line_end":390,"column_start":1,"column_end":45}},{"value":"/ [Access Token]: fn.access_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49817,"byte_end":49857,"line_start":391,"line_end":391,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49858,"byte_end":49861,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ # Authorize: Authenticate the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49862,"byte_end":49900,"line_start":393,"line_end":393,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49901,"byte_end":49904,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ This function is part of the step of authenticating a user with Twitter so they can authorize","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":49905,"byte_end":50002,"line_start":395,"line_end":395,"column_start":1,"column_end":98}},{"value":"/ your application to access their account. This function generates a URL with the given request","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50003,"byte_end":50101,"line_start":396,"line_end":396,"column_start":1,"column_end":99}},{"value":"/ token that you must give to the user. What happens with this URL depends on what you used as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50102,"byte_end":50198,"line_start":397,"line_end":397,"column_start":1,"column_end":97}},{"value":"/ the `callback` parameter for `request_token`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50199,"byte_end":50248,"line_start":398,"line_end":398,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50249,"byte_end":50252,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ If you gave a callback URL to `request_token`, Twitter will redirect the user to that URL after","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50253,"byte_end":50352,"line_start":400,"line_end":400,"column_start":1,"column_end":100}},{"value":"/ they log in and accept your app's permissions. There will be two query string parameters added","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50353,"byte_end":50451,"line_start":401,"line_end":401,"column_start":1,"column_end":99}},{"value":"/ to the URL for this redirect: `oauth_token`, which contains the `key` from the [request token]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50452,"byte_end":50550,"line_start":402,"line_end":402,"column_start":1,"column_end":99}},{"value":"/ used here, and `oauth_verifier`, which contains a verifier string that can be used to create","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50551,"byte_end":50647,"line_start":403,"line_end":403,"column_start":1,"column_end":97}},{"value":"/ the final [access token]. Note that if this URL is used instead of [Authenticate], the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50648,"byte_end":50743,"line_start":404,"line_end":404,"column_start":1,"column_end":96}},{"value":"/ will need to accept the app's connection each time, even if they have connected the app","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50744,"byte_end":50835,"line_start":405,"line_end":405,"column_start":1,"column_end":92}},{"value":"/ previously and have not revoked the app's permissions. This process is called [3-legged","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50836,"byte_end":50927,"line_start":406,"line_end":406,"column_start":1,"column_end":92}},{"value":"/ authorization]. If you would like the user to transparently be redirected without confirmation","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":50928,"byte_end":51026,"line_start":407,"line_end":407,"column_start":1,"column_end":99}},{"value":"/ if they've already accepted the connection, see the docs for [Authenticate] to read about \"Sign","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51027,"byte_end":51126,"line_start":408,"line_end":408,"column_start":1,"column_end":100}},{"value":"/ In With Twitter\".","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51127,"byte_end":51148,"line_start":409,"line_end":409,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51149,"byte_end":51152,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ [3-legged authorization]: https://developer.twitter.com/en/docs/basics/authentication/oauth-1-0a/obtaining-user-access-tokens","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51153,"byte_end":51282,"line_start":411,"line_end":411,"column_start":1,"column_end":130}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51283,"byte_end":51286,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ If you gave the special value `\"oob\"` to `request_token`, this URL can be directly shown to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51287,"byte_end":51386,"line_start":413,"line_end":413,"column_start":1,"column_end":100}},{"value":"/ user, who can enter it into a separate web browser to complete the authorization. This is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51387,"byte_end":51480,"line_start":414,"line_end":414,"column_start":1,"column_end":94}},{"value":"/ called [PIN-based authorization] and it's required for applications that cannot be reached by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51481,"byte_end":51578,"line_start":415,"line_end":415,"column_start":1,"column_end":98}},{"value":"/ redirecting a URL from a web browser. When the user loads this URL, they can sign in with","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51579,"byte_end":51672,"line_start":416,"line_end":416,"column_start":1,"column_end":94}},{"value":"/ Twitter and grant your app access to their account. If they grant this access, they are given a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51673,"byte_end":51772,"line_start":417,"line_end":417,"column_start":1,"column_end":100}},{"value":"/ numeric PIN that your app can use as the \"verifier\" to create the final [access token].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51773,"byte_end":51864,"line_start":418,"line_end":418,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51865,"byte_end":51868,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ [Pin-Based authorization]: https://developer.twitter.com/en/docs/basics/authentication/oauth-1-0a/pin-based-oauth","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":51869,"byte_end":51986,"line_start":420,"line_end":420,"column_start":1,"column_end":118}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53910,"byte_end":53926,"line_start":462,"line_end":462,"column_start":8,"column_end":24},"name":"authenticate_url","qualname":"::auth::authenticate_url","value":"fn (request_token: &KeyPair) -> String","parent":null,"children":[],"decl_id":null,"docs":" With the given request KeyPair, return a URL to redirect a user to so they can accept or reject\n an authorization request.","sig":null,"attributes":[{"value":"/ With the given request KeyPair, return a URL to redirect a user to so they can accept or reject","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52154,"byte_end":52253,"line_start":429,"line_end":429,"column_start":1,"column_end":100}},{"value":"/ an authorization request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52254,"byte_end":52283,"line_start":430,"line_end":430,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52284,"byte_end":52287,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ # Access Token Authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52288,"byte_end":52321,"line_start":432,"line_end":432,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52322,"byte_end":52325,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ [Authentication overview](index.html)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52326,"byte_end":52367,"line_start":434,"line_end":434,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52368,"byte_end":52371,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ 1. [Request Token]: Authenticate your application","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52372,"byte_end":52425,"line_start":436,"line_end":436,"column_start":1,"column_end":54}},{"value":"/ 2. [Authorize]/ **Authenticate**: Authenticate the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52426,"byte_end":52485,"line_start":437,"line_end":437,"column_start":1,"column_end":60}},{"value":"/ 3. [Access Token]: Confirm the authentication with Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52486,"byte_end":52548,"line_start":438,"line_end":438,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52549,"byte_end":52552,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ [Request Token]: fn.request_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52553,"byte_end":52595,"line_start":440,"line_end":440,"column_start":1,"column_end":43}},{"value":"/ [Authorize]: fn.authorize_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52596,"byte_end":52634,"line_start":441,"line_end":441,"column_start":1,"column_end":39}},{"value":"/ [Access Token]: fn.access_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52635,"byte_end":52675,"line_start":442,"line_end":442,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52676,"byte_end":52679,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ # Authenticate: Authenticate the user (with Sign In To Twitter)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52680,"byte_end":52747,"line_start":444,"line_end":444,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52748,"byte_end":52751,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ This function is part of the step of authenticating a user with Twitter so they can authorize","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52752,"byte_end":52849,"line_start":446,"line_end":446,"column_start":1,"column_end":98}},{"value":"/ your application to access their account. This function generates a URL with the given request","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52850,"byte_end":52948,"line_start":447,"line_end":447,"column_start":1,"column_end":99}},{"value":"/ token that you must give to the user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52949,"byte_end":52990,"line_start":448,"line_end":448,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52991,"byte_end":52994,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ The URL returned by this function acts the same as the [Authorize] URL, with one exception: If","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":52995,"byte_end":53093,"line_start":450,"line_end":450,"column_start":1,"column_end":99}},{"value":"/ you have \"[Sign In With Twitter]\" enabled for your app, the user does not need to re-accept the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53094,"byte_end":53193,"line_start":451,"line_end":451,"column_start":1,"column_end":100}},{"value":"/ app's connection if they've accepted it previously. If they're already logged in to Twitter,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53194,"byte_end":53290,"line_start":452,"line_end":452,"column_start":1,"column_end":97}},{"value":"/ and have already accepted your app's access, they won't even see the redirect through Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53291,"byte_end":53389,"line_start":453,"line_end":453,"column_start":1,"column_end":99}},{"value":"/ Twitter will immediately redirect the user to the `callback` URL given to the [request token].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53390,"byte_end":53488,"line_start":454,"line_end":454,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53489,"byte_end":53492,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ [Sign In With Twitter]: https://developer.twitter.com/en/docs/basics/authentication/guides/log-in-with-twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53493,"byte_end":53607,"line_start":456,"line_end":456,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53608,"byte_end":53611,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ If the user is redirected to a callback URL, Twitter will add two query string parameters:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53612,"byte_end":53706,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ `oauth_token`, which contains the `key` from the [request token] used here, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53707,"byte_end":53790,"line_start":459,"line_end":459,"column_start":1,"column_end":84}},{"value":"/ `oauth_verifier`, which contains a verifier string that can be used to create the final [access","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53791,"byte_end":53890,"line_start":460,"line_end":460,"column_start":1,"column_end":100}},{"value":"/ token].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":53891,"byte_end":53902,"line_start":461,"line_end":461,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55921,"byte_end":55933,"line_start":505,"line_end":505,"column_start":14,"column_end":26},"name":"access_token","qualname":"::auth::access_token","value":"fn <S> (con_token: KeyPair, request_token: &KeyPair, verifier: S) -> Result<(Token, u64, String)>","parent":null,"children":[],"decl_id":null,"docs":" With the given OAuth tokens and verifier, ask Twitter for an access KeyPair that can be used to\n sign further requests to the Twitter API.","sig":null,"attributes":[{"value":"/ With the given OAuth tokens and verifier, ask Twitter for an access KeyPair that can be used to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54076,"byte_end":54175,"line_start":470,"line_end":470,"column_start":1,"column_end":100}},{"value":"/ sign further requests to the Twitter API.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54176,"byte_end":54221,"line_start":471,"line_end":471,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54222,"byte_end":54225,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ # Access Token Authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54226,"byte_end":54259,"line_start":473,"line_end":473,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54260,"byte_end":54263,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ [Authentication overview](index.html)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54264,"byte_end":54305,"line_start":475,"line_end":475,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54306,"byte_end":54309,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ 1. [Request Token]: Authenticate your application","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54310,"byte_end":54363,"line_start":477,"line_end":477,"column_start":1,"column_end":54}},{"value":"/ 2. [Authorize]/[Authenticate]: Authenticate the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54364,"byte_end":54420,"line_start":478,"line_end":478,"column_start":1,"column_end":57}},{"value":"/ 3. **Access Token**: Confirm the authentication with Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54421,"byte_end":54485,"line_start":479,"line_end":479,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54486,"byte_end":54489,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ [Request Token]: fn.request_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54490,"byte_end":54532,"line_start":481,"line_end":481,"column_start":1,"column_end":43}},{"value":"/ [Authorize]: fn.authorize_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54533,"byte_end":54571,"line_start":482,"line_end":482,"column_start":1,"column_end":39}},{"value":"/ [Authenticate]: fn.authenticate_url.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54572,"byte_end":54616,"line_start":483,"line_end":483,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54617,"byte_end":54620,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ # Access Token: Confirm the authentication with Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54621,"byte_end":54680,"line_start":485,"line_end":485,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54681,"byte_end":54684,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ This is the final step in authenticating a user account to use your app. With this method, you","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54685,"byte_end":54783,"line_start":487,"line_end":487,"column_start":1,"column_end":99}},{"value":"/ combine the consumer `KeyPair` that represents your app, the [request token] that represents","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54784,"byte_end":54880,"line_start":488,"line_end":488,"column_start":1,"column_end":97}},{"value":"/ the session, and the \"verifier\" that represents the user's credentials and their acceptance of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54881,"byte_end":54979,"line_start":489,"line_end":489,"column_start":1,"column_end":99}},{"value":"/ your app's access.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":54980,"byte_end":55002,"line_start":490,"line_end":490,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55003,"byte_end":55006,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ The `verifier` parameter comes from the Step 2 process you used. For PIN-Based Authorization,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55007,"byte_end":55104,"line_start":492,"line_end":492,"column_start":1,"column_end":98}},{"value":"/ the verifier is the PIN returned to the user after they sign in. For \"Sign In With Twitter\" and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55105,"byte_end":55204,"line_start":493,"line_end":493,"column_start":1,"column_end":100}},{"value":"/ 3-Legged Authorization, the verifier is the string passed by twitter to your app through the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55205,"byte_end":55301,"line_start":494,"line_end":494,"column_start":1,"column_end":97}},{"value":"/ `oauth_verifier` query string parameter. For more information, see the documentation for the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55302,"byte_end":55398,"line_start":495,"line_end":495,"column_start":1,"column_end":97}},{"value":"/ [Authorize] URL function.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55399,"byte_end":55428,"line_start":496,"line_end":496,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55429,"byte_end":55432,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes `con_token`, because it is inserted into the `Token` that is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55433,"byte_end":55530,"line_start":498,"line_end":498,"column_start":1,"column_end":98}},{"value":"/ returned. If you would like to use the consumer token to authenticate multiple accounts in the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55531,"byte_end":55629,"line_start":499,"line_end":499,"column_start":1,"column_end":99}},{"value":"/ same session, clone the `KeyPair` when passing it into this function.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55630,"byte_end":55703,"line_start":500,"line_end":500,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55704,"byte_end":55707,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ The `Future` returned by this function, on success, yields a tuple of three items: The","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55708,"byte_end":55798,"line_start":502,"line_end":502,"column_start":1,"column_end":91}},{"value":"/ final access token, the ID of the authenticated user, and the screen name of the authenticated","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55799,"byte_end":55897,"line_start":503,"line_end":503,"column_start":1,"column_end":99}},{"value":"/ user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":55898,"byte_end":55907,"line_start":504,"line_end":504,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59670,"byte_end":59682,"line_start":586,"line_end":586,"column_start":14,"column_end":26},"name":"bearer_token","qualname":"::auth::bearer_token","value":"fn (con_token: &KeyPair) -> Result<Token>","parent":null,"children":[],"decl_id":null,"docs":" With the given consumer KeyPair, request the current Bearer token to perform Application-only\n authentication.","sig":null,"attributes":[{"value":"/ With the given consumer KeyPair, request the current Bearer token to perform Application-only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":57842,"byte_end":57939,"line_start":558,"line_end":558,"column_start":1,"column_end":98}},{"value":"/ authentication.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":57940,"byte_end":57959,"line_start":559,"line_end":559,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":57960,"byte_end":57963,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ If you don't need to use the Twitter API to perform actions on or with specific users, app-only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":57964,"byte_end":58063,"line_start":561,"line_end":561,"column_start":1,"column_end":100}},{"value":"/ auth provides a much easier way to authenticate with the Twitter API. The Token given by this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58064,"byte_end":58161,"line_start":562,"line_end":562,"column_start":1,"column_end":98}},{"value":"/ function can be used to authenticate requests as if there were coming from your app itself.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58162,"byte_end":58257,"line_start":563,"line_end":563,"column_start":1,"column_end":96}},{"value":"/ This comes with an important restriction, though: any request that requires a user context -","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58258,"byte_end":58354,"line_start":564,"line_end":564,"column_start":1,"column_end":97}},{"value":"/ direct messages, viewing protected user profiles, functions like `tweet::home_timeline` that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58355,"byte_end":58451,"line_start":565,"line_end":565,"column_start":1,"column_end":97}},{"value":"/ operate in terms of the authenticated user - will not work with just a Bearer token. Attempts","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58452,"byte_end":58549,"line_start":566,"line_end":566,"column_start":1,"column_end":98}},{"value":"/ to perform those actions will return an authentication error.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58550,"byte_end":58615,"line_start":567,"line_end":567,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58616,"byte_end":58619,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ Other things to note about Bearer tokens:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58620,"byte_end":58665,"line_start":569,"line_end":569,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58666,"byte_end":58669,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ - Bearer tokens have a higher rate limit for the methods they can be used on, compared to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58670,"byte_end":58763,"line_start":571,"line_end":571,"column_start":1,"column_end":94}},{"value":"/   regular Access tokens.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58764,"byte_end":58792,"line_start":572,"line_end":572,"column_start":1,"column_end":29}},{"value":"/ - The bearer token returned by Twitter is the same token each time you call it. It can be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58793,"byte_end":58886,"line_start":573,"line_end":573,"column_start":1,"column_end":94}},{"value":"/   cached and reused as long as you need it.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58887,"byte_end":58934,"line_start":574,"line_end":574,"column_start":1,"column_end":48}},{"value":"/ - Since a Bearer token can be used to directly authenticate calls to Twitter, it should be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":58935,"byte_end":59029,"line_start":575,"line_end":575,"column_start":1,"column_end":95}},{"value":"/   treated with the same sensitivity as a password. If you believe your Bearer token to be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59030,"byte_end":59123,"line_start":576,"line_end":576,"column_start":1,"column_end":94}},{"value":"/   compromised, call [`invalidate_bearer`] with your consumer KeyPair and the Bearer token you","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59124,"byte_end":59221,"line_start":577,"line_end":577,"column_start":1,"column_end":98}},{"value":"/   need to invalidate.  This will cause Twitter to generate a new Bearer token for your","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59222,"byte_end":59312,"line_start":578,"line_end":578,"column_start":1,"column_end":91}},{"value":"/   application, which will be returned the next time you call this function.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59313,"byte_end":59392,"line_start":579,"line_end":579,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59393,"byte_end":59396,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ [`invalidate_bearer`]: fn.invalidate_bearer.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59397,"byte_end":59449,"line_start":581,"line_end":581,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59450,"byte_end":59453,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ For more information, see the Twitter documentation on [Application-only authentication][auth].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59454,"byte_end":59553,"line_start":583,"line_end":583,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59554,"byte_end":59557,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ [auth]: https://developer.twitter.com/en/docs/basics/authentication/oauth-2-0/application-only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":59558,"byte_end":59656,"line_start":585,"line_end":585,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60791,"byte_end":60808,"line_start":614,"line_end":614,"column_start":14,"column_end":31},"name":"invalidate_bearer","qualname":"::auth::invalidate_bearer","value":"fn (con_token: &KeyPair, token: &Token) -> Result<Token>","parent":null,"children":[],"decl_id":null,"docs":" Invalidate the given Bearer token using the given consumer KeyPair. Upon success, the future\n returned by this function yields the Token that was just invalidated.","sig":null,"attributes":[{"value":"/ Invalidate the given Bearer token using the given consumer KeyPair. Upon success, the future","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60256,"byte_end":60352,"line_start":602,"line_end":602,"column_start":1,"column_end":97}},{"value":"/ returned by this function yields the Token that was just invalidated.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60353,"byte_end":60426,"line_start":603,"line_end":603,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60427,"byte_end":60430,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ For more information about Bearer tokens, see the [authentication overview][auth] and the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60431,"byte_end":60524,"line_start":605,"line_end":605,"column_start":1,"column_end":94}},{"value":"/ documentation for the [`bearer_token`] function.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60525,"byte_end":60577,"line_start":606,"line_end":606,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60578,"byte_end":60581,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ [auth]: index.html#bearer-tokens","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60582,"byte_end":60618,"line_start":608,"line_end":608,"column_start":1,"column_end":37}},{"value":"/ [`bearer_token`]: fn.bearer_token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60619,"byte_end":60661,"line_start":609,"line_end":609,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60662,"byte_end":60665,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60666,"byte_end":60678,"line_start":611,"line_end":611,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60679,"byte_end":60682,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ If this function is handed a `Token` that is not a Bearer token, this function will panic.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":60683,"byte_end":60777,"line_start":613,"line_end":613,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":61933,"byte_end":61946,"line_start":641,"line_end":641,"column_start":14,"column_end":27},"name":"verify_tokens","qualname":"::auth::verify_tokens","value":"fn (token: &Token) -> Result<Response<crate::user::TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" If the given tokens are valid, return the user information for the authenticated user.","sig":null,"attributes":[{"value":"/ If the given tokens are valid, return the user information for the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":61562,"byte_end":61652,"line_start":636,"line_end":636,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":61653,"byte_end":61656,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ If you have cached access tokens, using this method is a convenient way to make sure they're","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":61657,"byte_end":61753,"line_start":638,"line_end":638,"column_start":1,"column_end":97}},{"value":"/ still valid. If the user has revoked access from your app, this function will return an error","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":61754,"byte_end":61851,"line_start":639,"line_end":639,"column_start":1,"column_end":98}},{"value":"/ from Twitter indicating that you don't have access to the user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":61852,"byte_end":61919,"line_start":640,"line_end":640,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cursor","qualname":"::cursor","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":1698},{"krate":0,"index":1702},{"krate":0,"index":278},{"krate":0,"index":1747},{"krate":0,"index":1751},{"krate":0,"index":283},{"krate":0,"index":1796},{"krate":0,"index":1800},{"krate":0,"index":288},{"krate":0,"index":293},{"krate":0,"index":303},{"krate":0,"index":309}],"decl_id":null,"docs":" Types and traits to navigate cursored collections.","sig":null,"attributes":[{"value":"! Types and traits to navigate cursored collections.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81013,"byte_end":81067,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81068,"byte_end":81071,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Much of this module can be considered an implementation detail; the main intended entry point","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81072,"byte_end":81169,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"! to this code is `CursorIter`, and that can just be used as a stream to ignore the rest of this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81170,"byte_end":81268,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"! module. The rest of it is available to make sure consumers of the API can understand precisely","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81269,"byte_end":81367,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"! what types come out of functions that return `CursorIter`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81368,"byte_end":81430,"line_start":10,"line_end":10,"column_start":1,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82073,"byte_end":82079,"line_start":30,"line_end":30,"column_start":11,"column_end":17},"name":"Cursor","qualname":"::cursor::Cursor","value":"Cursor","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":"Trait to generalize over paginated views of API results.","sig":null,"attributes":[{"value":"/Trait to generalize over paginated views of API results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81658,"byte_end":81717,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81718,"byte_end":81721,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/Types that implement Cursor are used as intermediate steps in [`CursorIter`][]'s Stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81722,"byte_end":81812,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/implementation, to properly load the data from Twitter. Most of the time you don't need to deal","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81813,"byte_end":81911,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/with Cursor structs directly, but you can get them via `CursorIter`'s manual paging","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81912,"byte_end":81998,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/functionality.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":81999,"byte_end":82016,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82017,"byte_end":82020,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/[`CursorIter`]: struct.CursorIter.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82021,"byte_end":82062,"line_start":29,"line_end":29,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82143,"byte_end":82147,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"name":"Item","qualname":"::cursor::Cursor::Item","value":"type Item;","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"What type is being returned by the API call?\n","sig":null,"attributes":[{"value":"/What type is being returned by the API call?","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82086,"byte_end":82133,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82225,"byte_end":82243,"line_start":35,"line_end":35,"column_start":8,"column_end":26},"name":"previous_cursor_id","qualname":"::cursor::Cursor::previous_cursor_id","value":"fn (&self) -> i64","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"Returns a numeric reference to the previous page of results.\n","sig":null,"attributes":[{"value":"/Returns a numeric reference to the previous page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82154,"byte_end":82217,"line_start":34,"line_end":34,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82330,"byte_end":82344,"line_start":37,"line_end":37,"column_start":8,"column_end":22},"name":"next_cursor_id","qualname":"::cursor::Cursor::next_cursor_id","value":"fn (&self) -> i64","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"Returns a numeric reference to the next page of results.\n","sig":null,"attributes":[{"value":"/Returns a numeric reference to the next page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82263,"byte_end":82322,"line_start":36,"line_end":36,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82443,"byte_end":82453,"line_start":39,"line_end":39,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::cursor::Cursor::into_inner","value":"fn (self) -> Vec<Self::Item>","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"Unwraps the cursor, returning the collection of results from inside.\n","sig":null,"attributes":[{"value":"/Unwraps the cursor, returning the collection of results from inside.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82364,"byte_end":82435,"line_start":38,"line_end":38,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82799,"byte_end":82809,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"UserCursor","qualname":"::cursor::UserCursor","value":"UserCursor { previous_cursor, next_cursor, users }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"decl_id":null,"docs":"Represents a single-page view into a list of users.","sig":null,"attributes":[{"value":"/Represents a single-page view into a list of users.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82483,"byte_end":82537,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82538,"byte_end":82541,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/This type is intended to be used in the background by [`CursorIter`][] to hold an intermediate","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82542,"byte_end":82639,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/list of users to iterate over. See that struct's documentation for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82640,"byte_end":82718,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82719,"byte_end":82722,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/[`CursorIter`]: struct.CursorIter.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82723,"byte_end":82764,"line_start":47,"line_end":47,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82878,"byte_end":82893,"line_start":51,"line_end":51,"column_start":9,"column_end":24},"name":"previous_cursor","qualname":"::cursor::UserCursor::previous_cursor","value":"i64","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":"Numeric reference to the previous page of results.\n","sig":null,"attributes":[{"value":"/Numeric reference to the previous page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82816,"byte_end":82869,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82962,"byte_end":82973,"line_start":53,"line_end":53,"column_start":9,"column_end":20},"name":"next_cursor","qualname":"::cursor::UserCursor::next_cursor","value":"i64","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":"Numeric reference to the next page of results.\n","sig":null,"attributes":[{"value":"/Numeric reference to the next page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82904,"byte_end":82953,"line_start":52,"line_end":52,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83038,"byte_end":83043,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"users","qualname":"::cursor::UserCursor::users","value":"std::vec::Vec<user::TwitterUser>","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":"The list of users in this page of results.\n","sig":null,"attributes":[{"value":"/The list of users in this page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":82984,"byte_end":83029,"line_start":54,"line_end":54,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83670,"byte_end":83678,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"IDCursor","qualname":"::cursor::IDCursor","value":"IDCursor { previous_cursor, next_cursor, ids }","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750}],"decl_id":null,"docs":"Represents a single-page view into a list of IDs.","sig":null,"attributes":[{"value":"/Represents a single-page view into a list of IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83358,"byte_end":83410,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83411,"byte_end":83414,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/This type is intended to be used in the background by [`CursorIter`][] to hold an intermediate","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83415,"byte_end":83512,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/list of IDs to iterate over. See that struct's documentation for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83513,"byte_end":83589,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83590,"byte_end":83593,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/[`CursorIter`]: struct.CursorIter.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83594,"byte_end":83635,"line_start":79,"line_end":79,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83747,"byte_end":83762,"line_start":83,"line_end":83,"column_start":9,"column_end":24},"name":"previous_cursor","qualname":"::cursor::IDCursor::previous_cursor","value":"i64","parent":{"krate":0,"index":1747},"children":[],"decl_id":null,"docs":"Numeric reference to the previous page of results.\n","sig":null,"attributes":[{"value":"/Numeric reference to the previous page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83685,"byte_end":83738,"line_start":82,"line_end":82,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83831,"byte_end":83842,"line_start":85,"line_end":85,"column_start":9,"column_end":20},"name":"next_cursor","qualname":"::cursor::IDCursor::next_cursor","value":"i64","parent":{"krate":0,"index":1747},"children":[],"decl_id":null,"docs":"Numeric reference to the next page of results.\n","sig":null,"attributes":[{"value":"/Numeric reference to the next page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83773,"byte_end":83822,"line_start":84,"line_end":84,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83910,"byte_end":83913,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"name":"ids","qualname":"::cursor::IDCursor::ids","value":"std::vec::Vec<u64>","parent":{"krate":0,"index":1747},"children":[],"decl_id":null,"docs":"The list of user IDs in this page of results.\n","sig":null,"attributes":[{"value":"/The list of user IDs in this page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83853,"byte_end":83901,"line_start":86,"line_end":86,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84512,"byte_end":84522,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"ListCursor","qualname":"::cursor::ListCursor","value":"ListCursor { previous_cursor, next_cursor, lists }","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"decl_id":null,"docs":"Represents a single-page view into a list of lists.","sig":null,"attributes":[{"value":"/Represents a single-page view into a list of lists.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84196,"byte_end":84250,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84251,"byte_end":84254,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/This type is intended to be used in the background by [`CursorIter`][] to hold an intermediate","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84255,"byte_end":84352,"line_start":108,"line_end":108,"column_start":1,"column_end":98}},{"value":"/list of lists to iterate over. See that struct's documentation for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84353,"byte_end":84431,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84432,"byte_end":84435,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/[`CursorIter`]: struct.CursorIter.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84436,"byte_end":84477,"line_start":111,"line_end":111,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84591,"byte_end":84606,"line_start":115,"line_end":115,"column_start":9,"column_end":24},"name":"previous_cursor","qualname":"::cursor::ListCursor::previous_cursor","value":"i64","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"Numeric reference to the previous page of results.\n","sig":null,"attributes":[{"value":"/Numeric reference to the previous page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84529,"byte_end":84582,"line_start":114,"line_end":114,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84675,"byte_end":84686,"line_start":117,"line_end":117,"column_start":9,"column_end":20},"name":"next_cursor","qualname":"::cursor::ListCursor::next_cursor","value":"i64","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"Numeric reference to the next page of results.\n","sig":null,"attributes":[{"value":"/Numeric reference to the next page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84617,"byte_end":84666,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84751,"byte_end":84756,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"lists","qualname":"::cursor::ListCursor::lists","value":"std::vec::Vec<list::List>","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"The list of lists in this page of results.\n","sig":null,"attributes":[{"value":"/The list of lists in this page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84697,"byte_end":84742,"line_start":118,"line_end":118,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89049,"byte_end":89059,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"CursorIter","qualname":"::cursor::CursorIter","value":"CursorIter { page_size, previous_cursor, next_cursor }","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"decl_id":null,"docs":" Represents a paginated list of results, such as the users who follow a specific user or the\n lists owned by that user.","sig":null,"attributes":[{"value":"/ Represents a paginated list of results, such as the users who follow a specific user or the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85057,"byte_end":85152,"line_start":138,"line_end":138,"column_start":1,"column_end":96}},{"value":"/ lists owned by that user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85153,"byte_end":85182,"line_start":139,"line_end":139,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85183,"byte_end":85186,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This struct is given by several methods in this library, whenever Twitter would return a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85187,"byte_end":85279,"line_start":141,"line_end":141,"column_start":1,"column_end":93}},{"value":"/ cursored list of items. It implements the `Stream` trait, loading items in batches so that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85280,"byte_end":85374,"line_start":142,"line_end":142,"column_start":1,"column_end":95}},{"value":"/ several can be immedately returned whenever a single network call completes.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85375,"byte_end":85455,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85456,"byte_end":85459,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85460,"byte_end":85478,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85479,"byte_end":85505,"line_start":146,"line_end":146,"column_start":1,"column_end":27}},{"value":"/ use futures::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85506,"byte_end":85549,"line_start":147,"line_end":147,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85550,"byte_end":85553,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85554,"byte_end":85574,"line_start":149,"line_end":149,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85575,"byte_end":85598,"line_start":150,"line_end":150,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85599,"byte_end":85641,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/ egg_mode::user::followers_of(\"rustlang\", &token).take(10).try_for_each(|resp| {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85642,"byte_end":85725,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"/     println!(\"{}\", resp.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85726,"byte_end":85767,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/     futures::future::ok(())","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85768,"byte_end":85799,"line_start":154,"line_end":154,"column_start":1,"column_end":32}},{"value":"/ }).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85800,"byte_end":85822,"line_start":155,"line_end":155,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85823,"byte_end":85830,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85831,"byte_end":85838,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85839,"byte_end":85842,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ You can even collect the results, letting you get one set of rate-limit information for the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85843,"byte_end":85938,"line_start":159,"line_end":159,"column_start":1,"column_end":96}},{"value":"/ entire search setup:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85939,"byte_end":85963,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85964,"byte_end":85967,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85968,"byte_end":85986,"line_start":162,"line_end":162,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":85987,"byte_end":86013,"line_start":163,"line_end":163,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86014,"byte_end":86034,"line_start":164,"line_end":164,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86035,"byte_end":86058,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86059,"byte_end":86101,"line_start":166,"line_end":166,"column_start":1,"column_end":43}},{"value":"/ use futures::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86102,"byte_end":86145,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/ use egg_mode::Response;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86146,"byte_end":86173,"line_start":168,"line_end":168,"column_start":1,"column_end":28}},{"value":"/ use egg_mode::user::TwitterUser;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86174,"byte_end":86210,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ use egg_mode::error::Result;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86211,"byte_end":86243,"line_start":170,"line_end":170,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86244,"byte_end":86247,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ // Because Streams don't have a FromIterator adaptor, we load all the responses first, then","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86248,"byte_end":86343,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ // collect them into the final Vec","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86344,"byte_end":86382,"line_start":173,"line_end":173,"column_start":1,"column_end":39}},{"value":"/ let names: Result<Vec<TwitterUser>> =","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86383,"byte_end":86424,"line_start":174,"line_end":174,"column_start":1,"column_end":42}},{"value":"/     egg_mode::user::followers_of(\"rustlang\", &token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86425,"byte_end":86481,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/         .take(10)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86482,"byte_end":86503,"line_start":176,"line_end":176,"column_start":1,"column_end":22}},{"value":"/         .map_ok(|r| r.response)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86504,"byte_end":86539,"line_start":177,"line_end":177,"column_start":1,"column_end":36}},{"value":"/         .try_collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86540,"byte_end":86576,"line_start":178,"line_end":178,"column_start":1,"column_end":37}},{"value":"/         .await;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86577,"byte_end":86596,"line_start":179,"line_end":179,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86597,"byte_end":86604,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86605,"byte_end":86612,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86613,"byte_end":86616,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ `CursorIter` has an adaptor of its own, `with_page_size`, that you can use before consuming it.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86617,"byte_end":86716,"line_start":183,"line_end":183,"column_start":1,"column_end":100}},{"value":"/ `with_page_size` will let you set how many users are pulled in with a single network call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86717,"byte_end":86811,"line_start":184,"line_end":184,"column_start":1,"column_end":95}},{"value":"/ Calling it after starting iteration will clear any current results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86812,"byte_end":86883,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86884,"byte_end":86887,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ (A note about `with_page_size`/`page_size`: While the `CursorIter` struct always has this method","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86888,"byte_end":86988,"line_start":187,"line_end":187,"column_start":1,"column_end":101}},{"value":"/ and field available, not every cursored call supports changing page size. Check the individual","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":86989,"byte_end":87087,"line_start":188,"line_end":188,"column_start":1,"column_end":99}},{"value":"/ method documentation for notes on what page sizes are allowed.)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87088,"byte_end":87155,"line_start":189,"line_end":189,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87156,"byte_end":87159,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ The `Stream` implementation yields `Response<T::Item>` on a successful iteration, and `Error`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87160,"byte_end":87257,"line_start":191,"line_end":191,"column_start":1,"column_end":98}},{"value":"/ for errors, so network errors, rate-limit errors and other issues are passed directly through","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87258,"byte_end":87355,"line_start":192,"line_end":192,"column_start":1,"column_end":98}},{"value":"/ in `poll()`. The `Stream` implementation will allow you to poll again after an error to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87356,"byte_end":87447,"line_start":193,"line_end":193,"column_start":1,"column_end":92}},{"value":"/ re-initiate the late network call; this way, you can wait for your network connection to return","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87448,"byte_end":87547,"line_start":194,"line_end":194,"column_start":1,"column_end":100}},{"value":"/ or for your rate limit to refresh and try again with the same state.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87548,"byte_end":87620,"line_start":195,"line_end":195,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87621,"byte_end":87624,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ## Manual paging","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87625,"byte_end":87645,"line_start":197,"line_end":197,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87646,"byte_end":87649,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ The `Stream` implementation works by loading in a page of results (with size set by the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87650,"byte_end":87741,"line_start":199,"line_end":199,"column_start":1,"column_end":92}},{"value":"/ method's default or by `with_page_size`/the `page_size` field) when it's polled, and serving","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87742,"byte_end":87838,"line_start":200,"line_end":200,"column_start":1,"column_end":97}},{"value":"/ the individual elements from that locally-cached page until it runs out. This can be nice, but","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87839,"byte_end":87937,"line_start":201,"line_end":201,"column_start":1,"column_end":99}},{"value":"/ it also means that your only warning that something involves a network call is that the stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":87938,"byte_end":88036,"line_start":202,"line_end":202,"column_start":1,"column_end":99}},{"value":"/ returns `Poll::Pending`, by which time the network call has already started. If you want","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88037,"byte_end":88129,"line_start":203,"line_end":203,"column_start":1,"column_end":93}},{"value":"/ to know that ahead of time, that's where the `call()` method comes in. By using `call()`, you","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88130,"byte_end":88227,"line_start":204,"line_end":204,"column_start":1,"column_end":98}},{"value":"/ can get the cursor struct directly from Twitter. With that you can iterate over the results and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88228,"byte_end":88327,"line_start":205,"line_end":205,"column_start":1,"column_end":100}},{"value":"/ page forward and backward as needed:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88328,"byte_end":88368,"line_start":206,"line_end":206,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88369,"byte_end":88372,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88373,"byte_end":88391,"line_start":208,"line_end":208,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88392,"byte_end":88418,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88419,"byte_end":88439,"line_start":210,"line_end":210,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88440,"byte_end":88463,"line_start":211,"line_end":211,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88464,"byte_end":88506,"line_start":212,"line_end":212,"column_start":1,"column_end":43}},{"value":"/ let mut list = egg_mode::user::followers_of(\"rustlang\", &token).with_page_size(20);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88507,"byte_end":88594,"line_start":213,"line_end":213,"column_start":1,"column_end":88}},{"value":"/ let resp = list.call().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88595,"byte_end":88637,"line_start":214,"line_end":214,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88638,"byte_end":88641,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ for user in resp.response.users {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88642,"byte_end":88679,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/     println!(\"{} (@{})\", user.name, user.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88680,"byte_end":88738,"line_start":217,"line_end":217,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88739,"byte_end":88744,"line_start":218,"line_end":218,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88745,"byte_end":88748,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ list.next_cursor = resp.response.next_cursor;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88749,"byte_end":88798,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/ let resp = list.call().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88799,"byte_end":88841,"line_start":221,"line_end":221,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88842,"byte_end":88845,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ for user in resp.response.users {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88846,"byte_end":88883,"line_start":223,"line_end":223,"column_start":1,"column_end":38}},{"value":"/     println!(\"{} (@{})\", user.name, user.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88884,"byte_end":88942,"line_start":224,"line_end":224,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88943,"byte_end":88948,"line_start":225,"line_end":225,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88949,"byte_end":88956,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88957,"byte_end":88964,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"must_use = \"cursor iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":88965,"byte_end":89037,"line_start":228,"line_end":228,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89502,"byte_end":89511,"line_start":241,"line_end":241,"column_start":9,"column_end":18},"name":"page_size","qualname":"::cursor::CursorIter::page_size","value":"std::option::Option<i32>","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"The number of results returned in one network call.","sig":null,"attributes":[{"value":"/The number of results returned in one network call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89193,"byte_end":89247,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89252,"byte_end":89255,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/Certain calls set their own minimums and maximums for what this value can be. Furthermore,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89260,"byte_end":89353,"line_start":238,"line_end":238,"column_start":5,"column_end":98}},{"value":"/some calls don't allow you to set the size of the pages at all. Refer to the individual","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89358,"byte_end":89448,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/methods' documentation for specifics.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89453,"byte_end":89493,"line_start":240,"line_end":240,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89915,"byte_end":89930,"line_start":248,"line_end":248,"column_start":9,"column_end":24},"name":"previous_cursor","qualname":"::cursor::CursorIter::previous_cursor","value":"i64","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"Numeric reference to the previous page of results. A value of zero indicates that the\ncurrent page of results is the first page of the cursor.","sig":null,"attributes":[{"value":"/Numeric reference to the previous page of results. A value of zero indicates that the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89530,"byte_end":89618,"line_start":242,"line_end":242,"column_start":5,"column_end":93}},{"value":"/current page of results is the first page of the cursor.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89623,"byte_end":89682,"line_start":243,"line_end":243,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89687,"byte_end":89690,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/This value is intended to be automatically set and used as part of this struct's Iterator","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89695,"byte_end":89787,"line_start":245,"line_end":245,"column_start":5,"column_end":97}},{"value":"/implementation. It is made available for those who wish to manually manage network calls and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89792,"byte_end":89887,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/pagination.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89892,"byte_end":89906,"line_start":247,"line_end":247,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90321,"byte_end":90332,"line_start":255,"line_end":255,"column_start":9,"column_end":20},"name":"next_cursor","qualname":"::cursor::CursorIter::next_cursor","value":"i64","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"Numeric reference to the next page of results. A value of zero indicates that the current\npage of results is the last page of the cursor.","sig":null,"attributes":[{"value":"/Numeric reference to the next page of results. A value of zero indicates that the current","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":89941,"byte_end":90033,"line_start":249,"line_end":249,"column_start":5,"column_end":97}},{"value":"/page of results is the last page of the cursor.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90038,"byte_end":90088,"line_start":250,"line_end":250,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90093,"byte_end":90096,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/This value is intended to be automatically set and used as part of this struct's Iterator","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90101,"byte_end":90193,"line_start":252,"line_end":252,"column_start":5,"column_end":97}},{"value":"/implementation. It is made available for those who wish to manually manage network calls and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90198,"byte_end":90293,"line_start":253,"line_end":253,"column_start":5,"column_end":100}},{"value":"/pagination.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90298,"byte_end":90312,"line_start":254,"line_end":254,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":91078,"byte_end":91092,"line_start":272,"line_end":272,"column_start":12,"column_end":26},"name":"with_page_size","qualname":"<CursorIter<T>>::with_page_size","value":"fn (self, page_size: i32) -> CursorIter<T>","parent":null,"children":[],"decl_id":null,"docs":"Sets the number of results returned in a single network call.","sig":null,"attributes":[{"value":"/Sets the number of results returned in a single network call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90512,"byte_end":90576,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90581,"byte_end":90584,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/Certain calls set their own minimums and maximums for what this value can be. Furthermore,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90589,"byte_end":90682,"line_start":266,"line_end":266,"column_start":5,"column_end":98}},{"value":"/some calls don't allow you to set the size of the pages at all. Refer to the individual","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90687,"byte_end":90777,"line_start":267,"line_end":267,"column_start":5,"column_end":95}},{"value":"/methods' documentation for specifics. If this method is called for a response that does not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90782,"byte_end":90876,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/accept changing the page size, no change to the underlying struct will occur.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90881,"byte_end":90961,"line_start":269,"line_end":269,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90966,"byte_end":90969,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/Calling this function will invalidate any current results, if any were previously loaded.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90974,"byte_end":91066,"line_start":271,"line_end":271,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":91707,"byte_end":91711,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"call","qualname":"<CursorIter<T>>::call","value":"fn (&self) -> impl Future<Output = Result<Response<T>>>","parent":null,"children":[],"decl_id":null,"docs":"Loads the next page of results.","sig":null,"attributes":[{"value":"/Loads the next page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":91461,"byte_end":91495,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":91500,"byte_end":91503,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/This is intended to be used as part of this struct's Iterator implementation. It is provided","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":91508,"byte_end":91603,"line_start":289,"line_end":289,"column_start":5,"column_end":100}},{"value":"/as a convenience for those who wish to manage network calls and pagination manually.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":91608,"byte_end":91695,"line_start":290,"line_end":290,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"direct","qualname":"::direct","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":353},{"krate":0,"index":359},{"krate":0,"index":1936},{"krate":0,"index":1947},{"krate":0,"index":360},{"krate":0,"index":1949},{"krate":0,"index":2004},{"krate":0,"index":1955},{"krate":0,"index":364},{"krate":0,"index":371},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":408}],"decl_id":null,"docs":" Structs and methods for working with direct messages.","sig":null,"attributes":[{"value":"! Structs and methods for working with direct messages.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":94719,"byte_end":94776,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":94777,"byte_end":94780,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Note that direct message access requires a special permissions level above regular read/write","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":94781,"byte_end":94878,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"! access. Your app must be configured to have \"read, write, and direct message\" access to use any","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":94879,"byte_end":94978,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"! function in this module, even the read-only ones.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":94979,"byte_end":95032,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95033,"byte_end":95036,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Although the Twitter website and official apps display DMs as threads between the authenticated","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95037,"byte_end":95136,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"! user and specific other users, the API does not expose them like this. Separate calls to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95137,"byte_end":95229,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"! `received` and `sent` are necessary to fully reconstruct a DM thread. You can partition on","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95230,"byte_end":95324,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"! `sender_id`/`receiver_id` and sort by their `created_at` to weave the streams together.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95325,"byte_end":95416,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95417,"byte_end":95420,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ## Types","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95421,"byte_end":95433,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95434,"byte_end":95437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! * `DirectMessage`/`DMEntities`: A single DM and its associated entities. The `DMEntities`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95438,"byte_end":95531,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"!   struct contains information about URLs, user mentions, and hashtags in the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95532,"byte_end":95616,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"! * `Timeline`: Effectively the same as `tweet::Timeline`, but gives out `DirectMessage`s","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95617,"byte_end":95708,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"!   instead.  Returned by functions that traverse collections of DMs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95709,"byte_end":95780,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"! * `ConversationTimeline`/`DMConversations`: This struct and alias are part of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95781,"byte_end":95866,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"!   \"conversations\" wrapper for loading direct messages into per-recipient threads.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95867,"byte_end":95952,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95953,"byte_end":95956,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95957,"byte_end":95973,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95974,"byte_end":95977,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ### Lookup","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95978,"byte_end":95992,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95993,"byte_end":95996,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! These functions pull a user's DMs for viewing. `sent` and `received` can be cursored with","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":95997,"byte_end":96090,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"! sub-views like with tweets, so they return a `Timeline` instance that can be navigated at will.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96091,"byte_end":96190,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96191,"byte_end":96194,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! * `sent`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96195,"byte_end":96207,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"! * `received`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96208,"byte_end":96224,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"! * `show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96225,"byte_end":96237,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"! * `conversations`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96238,"byte_end":96259,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96260,"byte_end":96263,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ### Actions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96264,"byte_end":96279,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96280,"byte_end":96283,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! These functions are your basic write access to DMs. As a DM does not carry as much metadata as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96284,"byte_end":96382,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"! a tweet, the `send` action does not go through a builder struct like with `DraftTweet`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96383,"byte_end":96474,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96475,"byte_end":96478,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! * `send`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96479,"byte_end":96491,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"! * `delete`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96492,"byte_end":96506,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"deprecated(since = \"0.15\", note =\n             \"the direct message endpoints used in this module are no longer in service, \\\n        and this module has not been migrated over to the DM Events API\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":96508,"byte_end":96715,"line_start":45,"line_end":50,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":116978,"byte_end":116982,"line_start":12,"line_end":12,"column_start":14,"column_end":18},"name":"show","qualname":"::direct::fun::show","value":"fn (id: u64, token: &auth::Token) -> Result<Response<DirectMessage>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Lookup a single DM by its numeric ID.\n","sig":null,"attributes":[{"value":"/Lookup a single DM by its numeric ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":116924,"byte_end":116964,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117347,"byte_end":117355,"line_start":19,"line_end":19,"column_start":8,"column_end":16},"name":"received","qualname":"::direct::fun::received","value":"fn (token: &auth::Token) -> Timeline","parent":null,"children":[],"decl_id":null,"docs":"Create a `Timeline` struct to navigate the direct messages received by the authenticated user.\n","sig":null,"attributes":[{"value":"/Create a `Timeline` struct to navigate the direct messages received by the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117242,"byte_end":117339,"line_start":18,"line_end":18,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117551,"byte_end":117555,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"sent","qualname":"::direct::fun::sent","value":"fn (token: &auth::Token) -> Timeline","parent":null,"children":[],"decl_id":null,"docs":"Create a `Timeline` struct to navigate the direct messages sent by the authenticated user.\n","sig":null,"attributes":[{"value":"/Create a `Timeline` struct to navigate the direct messages sent by the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117450,"byte_end":117543,"line_start":23,"line_end":23,"column_start":1,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118193,"byte_end":118197,"line_start":37,"line_end":37,"column_start":14,"column_end":18},"name":"send","qualname":"::direct::fun::send","value":"fn <T> (to: T, text: CowStr, token: &auth::Token) -> Result<Response<DirectMessage>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Send a new direct message to the given user.","sig":null,"attributes":[{"value":"/Send a new direct message to the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117646,"byte_end":117693,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117694,"byte_end":117697,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/The recipient must allow DMs from the authenticated user for this to be successful. In practice,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117698,"byte_end":117797,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/this means that the recipient must either follow the authenticated user, or they must have the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117798,"byte_end":117895,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/\"allow DMs from anyone\" setting enabled. As the latter setting has no visibility on the API,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117896,"byte_end":117991,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/there may be situations where you can't verify the recipient's ability to receive the requested","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":117992,"byte_end":118090,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/DM beforehand.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118091,"byte_end":118108,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118109,"byte_end":118112,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/Upon successfully sending the DM, the message will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118113,"byte_end":118179,"line_start":36,"line_end":36,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118798,"byte_end":118804,"line_start":57,"line_end":57,"column_start":14,"column_end":20},"name":"delete","qualname":"::direct::fun::delete","value":"fn (id: u64, token: &auth::Token) -> Result<Response<DirectMessage>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Delete the direct message with the given ID.","sig":null,"attributes":[{"value":"/Delete the direct message with the given ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118536,"byte_end":118583,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118584,"byte_end":118587,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/The authenticated user must be the sender of this DM for this call to be successful.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118588,"byte_end":118675,"line_start":53,"line_end":53,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118676,"byte_end":118679,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/On a successful deletion, the future returned by this function yields the freshly-deleted","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118680,"byte_end":118772,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/message.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":118773,"byte_end":118784,"line_start":56,"line_end":56,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119397,"byte_end":119410,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"conversations","qualname":"::direct::fun::conversations","value":"fn (token: &auth::Token) -> ConversationTimeline","parent":null,"children":[],"decl_id":null,"docs":"Create a `ConversationTimeline` loader that can load direct messages as a collection of\npre-sorted conversations.","sig":null,"attributes":[{"value":"/Create a `ConversationTimeline` loader that can load direct messages as a collection of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119063,"byte_end":119153,"line_start":63,"line_end":63,"column_start":1,"column_end":91}},{"value":"/pre-sorted conversations.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119154,"byte_end":119182,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119183,"byte_end":119186,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/Note that this does not load any messages; you need to call `newest` or `next` for that. See","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119187,"byte_end":119282,"line_start":66,"line_end":66,"column_start":1,"column_end":96}},{"value":"/[`ConversationTimeline`] for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119283,"byte_end":119323,"line_start":67,"line_end":67,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119324,"byte_end":119327,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/[`ConversationTimeline`]: struct.ConversationTimeline.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\fun.rs","byte_start":119328,"byte_end":119389,"line_start":69,"line_end":69,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97323,"byte_end":97336,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"DirectMessage","qualname":"::direct::DirectMessage","value":"DirectMessage { id, created_at, text, entities, sender_screen_name, sender_id, sender, recipient_screen_name, recipient_id, recipient }","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946}],"decl_id":null,"docs":"Represents a single direct message.","sig":null,"attributes":[{"value":"/Represents a single direct message.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97000,"byte_end":97038,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97039,"byte_end":97042,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/As a DM has far less metadata than a regular tweet, the structure consequently contains far","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97043,"byte_end":97137,"line_start":71,"line_end":71,"column_start":1,"column_end":95}},{"value":"/fewer fields. The basic fields are `id`, `text`, `entities`, and `created_at`; everything else","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97138,"byte_end":97235,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/either refers to the sender or receiver in some manner.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97236,"byte_end":97294,"line_start":73,"line_end":73,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97378,"byte_end":97380,"line_start":77,"line_end":77,"column_start":9,"column_end":11},"name":"id","qualname":"::direct::DirectMessage::id","value":"u64","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"Numeric ID for this DM.\n","sig":null,"attributes":[{"value":"/Numeric ID for this DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97343,"byte_end":97369,"line_start":76,"line_end":76,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97447,"byte_end":97457,"line_start":79,"line_end":79,"column_start":9,"column_end":19},"name":"created_at","qualname":"::direct::DirectMessage::created_at","value":"chrono::datetime::DateTime<chrono::offset::utc::Utc>","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"UTC timestamp from when this DM was created.\n","sig":null,"attributes":[{"value":"/UTC timestamp from when this DM was created.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97391,"byte_end":97438,"line_start":78,"line_end":78,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97525,"byte_end":97529,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"name":"text","qualname":"::direct::DirectMessage::text","value":"std::string::String","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"The text of the DM.\n","sig":null,"attributes":[{"value":"/The text of the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97494,"byte_end":97516,"line_start":80,"line_end":80,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97620,"byte_end":97628,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"name":"entities","qualname":"::direct::DirectMessage::entities","value":"direct::DMEntities","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"Link, hashtag, and user mention information parsed out of the DM.\n","sig":null,"attributes":[{"value":"/Link, hashtag, and user mention information parsed out of the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97543,"byte_end":97611,"line_start":82,"line_end":82,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97702,"byte_end":97720,"line_start":85,"line_end":85,"column_start":9,"column_end":27},"name":"sender_screen_name","qualname":"::direct::DirectMessage::sender_screen_name","value":"std::string::String","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"The screen name of the user who sent the DM.\n","sig":null,"attributes":[{"value":"/The screen name of the user who sent the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97646,"byte_end":97693,"line_start":84,"line_end":84,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97781,"byte_end":97790,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"name":"sender_id","qualname":"::direct::DirectMessage::sender_id","value":"u64","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"The ID of the user who sent the DM.\n","sig":null,"attributes":[{"value":"/The ID of the user who sent the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97734,"byte_end":97772,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97858,"byte_end":97864,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"sender","qualname":"::direct::DirectMessage::sender","value":"std::boxed::Box<user::TwitterUser>","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"Full information of the user who sent the DM.\n","sig":null,"attributes":[{"value":"/Full information of the user who sent the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97801,"byte_end":97849,"line_start":88,"line_end":88,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97954,"byte_end":97975,"line_start":91,"line_end":91,"column_start":9,"column_end":30},"name":"recipient_screen_name","qualname":"::direct::DirectMessage::recipient_screen_name","value":"std::string::String","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"The screen name of the user who received the DM.\n","sig":null,"attributes":[{"value":"/The screen name of the user who received the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97894,"byte_end":97945,"line_start":90,"line_end":90,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":98040,"byte_end":98052,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"name":"recipient_id","qualname":"::direct::DirectMessage::recipient_id","value":"u64","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"The ID of the user who received the DM.\n","sig":null,"attributes":[{"value":"/The ID of the user who received the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":97989,"byte_end":98031,"line_start":92,"line_end":92,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":98125,"byte_end":98134,"line_start":95,"line_end":95,"column_start":9,"column_end":18},"name":"recipient","qualname":"::direct::DirectMessage::recipient","value":"std::boxed::Box<user::TwitterUser>","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"Full information for the user who received the DM.\n","sig":null,"attributes":[{"value":"/Full information for the user who received the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":98063,"byte_end":98116,"line_start":94,"line_end":94,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100332,"byte_end":100342,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"DMEntities","qualname":"::direct::DMEntities","value":"DMEntities { hashtags, symbols, urls, user_mentions, media }","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954}],"decl_id":null,"docs":"Container for URL, hashtag, mention, and media information associated with a direct message.","sig":null,"attributes":[{"value":"/Container for URL, hashtag, mention, and media information associated with a direct message.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":99526,"byte_end":99621,"line_start":138,"line_end":138,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":99622,"byte_end":99625,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/As far as entities are concerned, a DM can contain nearly everything a tweet can. The only thing","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":99626,"byte_end":99725,"line_start":140,"line_end":140,"column_start":1,"column_end":100}},{"value":"/that isn't present here is the \"extended media\" that would be on the tweet's `extended_entities`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":99726,"byte_end":99825,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/field. A user can attach a single picture to a DM via the Twitter website or official apps, so","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":99826,"byte_end":99923,"line_start":142,"line_end":142,"column_start":1,"column_end":98}},{"value":"/if that is present, it will be available in `media`. (Note that the functionality to send","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":99924,"byte_end":100016,"line_start":143,"line_end":143,"column_start":1,"column_end":93}},{"value":"/pictures through a DM is unavailable on the public API; only viewing them is possible.)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100017,"byte_end":100107,"line_start":144,"line_end":144,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100108,"byte_end":100111,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/For all other fields, if the message contains no hashtags, financial symbols (\"cashtags\"),","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100112,"byte_end":100205,"line_start":146,"line_end":146,"column_start":1,"column_end":94}},{"value":"/links, or mentions, those corresponding fields will still be present, just empty.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100206,"byte_end":100290,"line_start":147,"line_end":147,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100403,"byte_end":100411,"line_start":151,"line_end":151,"column_start":9,"column_end":17},"name":"hashtags","qualname":"::direct::DMEntities::hashtags","value":"std::vec::Vec<entities::HashtagEntity>","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"Collection of hashtags parsed from the DM.\n","sig":null,"attributes":[{"value":"/Collection of hashtags parsed from the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100349,"byte_end":100394,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100526,"byte_end":100533,"line_start":153,"line_end":153,"column_start":9,"column_end":16},"name":"symbols","qualname":"::direct::DMEntities::symbols","value":"std::vec::Vec<entities::HashtagEntity>","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"Collection of financial symbols, or \"cashtags\", parsed from the DM.\n","sig":null,"attributes":[{"value":"/Collection of financial symbols, or \"cashtags\", parsed from the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100447,"byte_end":100517,"line_start":152,"line_end":152,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100619,"byte_end":100623,"line_start":155,"line_end":155,"column_start":9,"column_end":13},"name":"urls","qualname":"::direct::DMEntities::urls","value":"std::vec::Vec<entities::UrlEntity>","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"Collection of URLs parsed from the DM.\n","sig":null,"attributes":[{"value":"/Collection of URLs parsed from the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100569,"byte_end":100610,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100714,"byte_end":100727,"line_start":157,"line_end":157,"column_start":9,"column_end":22},"name":"user_mentions","qualname":"::direct::DMEntities::user_mentions","value":"std::vec::Vec<entities::MentionEntity>","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"Collection of user mentions parsed from the DM.\n","sig":null,"attributes":[{"value":"/Collection of user mentions parsed from the DM.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100655,"byte_end":100705,"line_start":156,"line_end":156,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100882,"byte_end":100887,"line_start":160,"line_end":160,"column_start":9,"column_end":14},"name":"media","qualname":"::direct::DMEntities::media","value":"std::option::Option<std::vec::Vec<entities::MediaEntity>>","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"If the message contains any attached media, this contains a collection of media information\nfrom it.\n","sig":null,"attributes":[{"value":"/If the message contains any attached media, this contains a collection of media information","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100763,"byte_end":100857,"line_start":158,"line_end":158,"column_start":5,"column_end":99}},{"value":"/from it.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100862,"byte_end":100873,"line_start":159,"line_end":159,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104234,"byte_end":104242,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"Timeline","qualname":"::direct::Timeline","value":"Timeline { count, max_id, min_id }","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" Helper struct to navigate collections of direct messages by requesting DMs older or newer than\n certain IDs.","sig":null,"attributes":[{"value":"/ Helper struct to navigate collections of direct messages by requesting DMs older or newer than","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":100928,"byte_end":101026,"line_start":163,"line_end":163,"column_start":1,"column_end":99}},{"value":"/ certain IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101027,"byte_end":101043,"line_start":164,"line_end":164,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101044,"byte_end":101047,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Using a Timeline to navigate collections of DMs allows you to efficiently cursor through a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101048,"byte_end":101142,"line_start":166,"line_end":166,"column_start":1,"column_end":95}},{"value":"/ collection and only load in the messages you need.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101143,"byte_end":101197,"line_start":167,"line_end":167,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101198,"byte_end":101201,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ To begin, call a method that returns a `Timeline`, optionally set the page size, and call","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101202,"byte_end":101295,"line_start":169,"line_end":169,"column_start":1,"column_end":94}},{"value":"/ `start` to load the first page of results:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101296,"byte_end":101342,"line_start":170,"line_end":170,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101343,"byte_end":101346,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101347,"byte_end":101365,"line_start":172,"line_end":172,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101366,"byte_end":101392,"line_start":173,"line_end":173,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101393,"byte_end":101413,"line_start":174,"line_end":174,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101414,"byte_end":101437,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101438,"byte_end":101480,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/ let mut timeline = egg_mode::direct::received(&token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101481,"byte_end":101538,"line_start":177,"line_end":177,"column_start":1,"column_end":58}},{"value":"/                                     .with_page_size(10);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101539,"byte_end":101599,"line_start":178,"line_end":178,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101600,"byte_end":101603,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ for dm in timeline.start().await.unwrap().iter() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101604,"byte_end":101658,"line_start":180,"line_end":180,"column_start":1,"column_end":55}},{"value":"/     println!(\"<@{}> {}\", dm.sender_screen_name, dm.text);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101659,"byte_end":101720,"line_start":181,"line_end":181,"column_start":1,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101721,"byte_end":101726,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101727,"byte_end":101734,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101735,"byte_end":101742,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101743,"byte_end":101746,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ If you need to load the next set of messages, call `older`, which will automatically update the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101747,"byte_end":101846,"line_start":186,"line_end":186,"column_start":1,"column_end":100}},{"value":"/ IDs it tracks:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101847,"byte_end":101865,"line_start":187,"line_end":187,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101866,"byte_end":101869,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101870,"byte_end":101888,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101889,"byte_end":101915,"line_start":190,"line_end":190,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101916,"byte_end":101936,"line_start":191,"line_end":191,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101937,"byte_end":101960,"line_start":192,"line_end":192,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":101961,"byte_end":102003,"line_start":193,"line_end":193,"column_start":1,"column_end":43}},{"value":"/ # let mut timeline = egg_mode::direct::received(&token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102004,"byte_end":102064,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/ # timeline.start().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102065,"byte_end":102103,"line_start":195,"line_end":195,"column_start":1,"column_end":39}},{"value":"/ for dm in timeline.older(None).await.unwrap().iter() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102104,"byte_end":102162,"line_start":196,"line_end":196,"column_start":1,"column_end":59}},{"value":"/     println!(\"<@{}> {}\", dm.sender_screen_name, dm.text);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102163,"byte_end":102224,"line_start":197,"line_end":197,"column_start":1,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102225,"byte_end":102230,"line_start":198,"line_end":198,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102231,"byte_end":102238,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102239,"byte_end":102246,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102247,"byte_end":102250,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ...and similarly for `newer`, which operates in a similar fashion.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102251,"byte_end":102321,"line_start":202,"line_end":202,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102322,"byte_end":102325,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ If you want to start afresh and reload the newest set of DMs again, you can call `start` again,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102326,"byte_end":102425,"line_start":204,"line_end":204,"column_start":1,"column_end":100}},{"value":"/ which will clear the tracked IDs before loading the newest set of messages. However, if you've","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102426,"byte_end":102524,"line_start":205,"line_end":205,"column_start":1,"column_end":99}},{"value":"/ been storing these messages as you go, and already know the newest ID you have on hand, you can","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102525,"byte_end":102624,"line_start":206,"line_end":206,"column_start":1,"column_end":100}},{"value":"/ load only those messages you need like this:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102625,"byte_end":102673,"line_start":207,"line_end":207,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102674,"byte_end":102677,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102678,"byte_end":102696,"line_start":209,"line_end":209,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102697,"byte_end":102723,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102724,"byte_end":102744,"line_start":211,"line_end":211,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102745,"byte_end":102768,"line_start":212,"line_end":212,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102769,"byte_end":102811,"line_start":213,"line_end":213,"column_start":1,"column_end":43}},{"value":"/ let mut timeline = egg_mode::direct::received(&token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102812,"byte_end":102869,"line_start":214,"line_end":214,"column_start":1,"column_end":58}},{"value":"/                                     .with_page_size(10);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102870,"byte_end":102930,"line_start":215,"line_end":215,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102931,"byte_end":102934,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ timeline.start().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102935,"byte_end":102971,"line_start":217,"line_end":217,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102972,"byte_end":102975,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ //keep the max_id for later","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":102976,"byte_end":103007,"line_start":219,"line_end":219,"column_start":1,"column_end":32}},{"value":"/ let reload_id = timeline.max_id.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103008,"byte_end":103053,"line_start":220,"line_end":220,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103054,"byte_end":103057,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ //simulate scrolling down a little bit","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103058,"byte_end":103100,"line_start":222,"line_end":222,"column_start":1,"column_end":43}},{"value":"/ timeline.older(None).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103101,"byte_end":103141,"line_start":223,"line_end":223,"column_start":1,"column_end":41}},{"value":"/ timeline.older(None).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103142,"byte_end":103182,"line_start":224,"line_end":224,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103183,"byte_end":103186,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ //reload the timeline with only what's new","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103187,"byte_end":103233,"line_start":226,"line_end":226,"column_start":1,"column_end":47}},{"value":"/ timeline.reset();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103234,"byte_end":103255,"line_start":227,"line_end":227,"column_start":1,"column_end":22}},{"value":"/ timeline.older(Some(reload_id)).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103256,"byte_end":103307,"line_start":228,"line_end":228,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103308,"byte_end":103315,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103316,"byte_end":103323,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103324,"byte_end":103327,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ Here, the argument to `older` means \"older than what I just returned, but newer than the given","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103328,"byte_end":103426,"line_start":232,"line_end":232,"column_start":1,"column_end":99}},{"value":"/ ID\". Since we cleared the tracked IDs with `reset`, that turns into \"the newest DMs available","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103427,"byte_end":103524,"line_start":233,"line_end":233,"column_start":1,"column_end":98}},{"value":"/ that were sent after the given ID\". The earlier invocations of `older` with `None` do not place","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103525,"byte_end":103624,"line_start":234,"line_end":234,"column_start":1,"column_end":100}},{"value":"/ a bound on the DMs it loads. `newer` operates in a similar fashion with its argument, saying","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103625,"byte_end":103721,"line_start":235,"line_end":235,"column_start":1,"column_end":97}},{"value":"/ \"newer than what I just returned, but not newer than this given ID\". When called like this,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103722,"byte_end":103817,"line_start":236,"line_end":236,"column_start":1,"column_end":96}},{"value":"/ it's possible for these methods to return nothing, which will also clear the `Timeline`'s","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103818,"byte_end":103911,"line_start":237,"line_end":237,"column_start":1,"column_end":94}},{"value":"/ tracked IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103912,"byte_end":103928,"line_start":238,"line_end":238,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103929,"byte_end":103932,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ If you want to manually pull messages between certain IDs, the baseline `call` function can do","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":103933,"byte_end":104031,"line_start":240,"line_end":240,"column_start":1,"column_end":99}},{"value":"/ that for you. Keep in mind, though, that `call` doesn't update the `min_id` or `max_id` fields,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104032,"byte_end":104131,"line_start":241,"line_end":241,"column_start":1,"column_end":100}},{"value":"/ so you'll have to set those yourself if you want to follow up with `older` or `newer`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104132,"byte_end":104222,"line_start":242,"line_end":242,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104748,"byte_end":104753,"line_start":253,"line_end":253,"column_start":9,"column_end":14},"name":"count","qualname":"::direct::Timeline::count","value":"i32","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"The maximum number of messages to return in a single call. Twitter doesn't guarantee\nreturning exactly this number, as suspended or deleted content is removed after retrieving\nthe initial collection of messages.\n","sig":null,"attributes":[{"value":"/The maximum number of messages to return in a single call. Twitter doesn't guarantee","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104511,"byte_end":104598,"line_start":250,"line_end":250,"column_start":5,"column_end":92}},{"value":"/returning exactly this number, as suspended or deleted content is removed after retrieving","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104603,"byte_end":104696,"line_start":251,"line_end":251,"column_start":5,"column_end":98}},{"value":"/the initial collection of messages.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104701,"byte_end":104739,"line_start":252,"line_end":252,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104864,"byte_end":104870,"line_start":255,"line_end":255,"column_start":9,"column_end":15},"name":"max_id","qualname":"::direct::Timeline::max_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"The largest/most recent DM ID returned in the last call to `start`, `older`, or `newer`.\n","sig":null,"attributes":[{"value":"/The largest/most recent DM ID returned in the last call to `start`, `older`, or `newer`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104764,"byte_end":104855,"line_start":254,"line_end":254,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104985,"byte_end":104991,"line_start":257,"line_end":257,"column_start":9,"column_end":15},"name":"min_id","qualname":"::direct::Timeline::min_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"The smallest/oldest DM ID returned in the last call to `start`, `older`, or `newer`.\n","sig":null,"attributes":[{"value":"/The smallest/oldest DM ID returned in the last call to `start`, `older`, or `newer`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":104889,"byte_end":104976,"line_start":256,"line_end":256,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105081,"byte_end":105086,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"reset","qualname":"<Timeline>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Clear the saved IDs on this timeline.\n","sig":null,"attributes":[{"value":"/Clear the saved IDs on this timeline.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105029,"byte_end":105069,"line_start":261,"line_end":261,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105263,"byte_end":105268,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"start","qualname":"<Timeline>::start","value":"fn <'s> (&'s mut self) -> impl Future<Output = Result<Response<Vec<DirectMessage>>, error::Error>> + 's","parent":null,"children":[],"decl_id":null,"docs":"Clear the saved IDs on this timeline, and return the most recent set of messages.\n","sig":null,"attributes":[{"value":"/Clear the saved IDs on this timeline, and return the most recent set of messages.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105167,"byte_end":105251,"line_start":267,"line_end":267,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105568,"byte_end":105573,"line_start":277,"line_end":277,"column_start":12,"column_end":17},"name":"older","qualname":"<Timeline>::older","value":"fn <'s> (&'s mut self, since_id: Option<u64>) -> impl Future<Output = Result<Response<Vec<DirectMessage>>, error::Error>> + 's","parent":null,"children":[],"decl_id":null,"docs":"Return the set of DMs older than the last set pulled, optionally placing a minimum DM ID to\nbound with.\n","sig":null,"attributes":[{"value":"/Return the set of DMs older than the last set pulled, optionally placing a minimum DM ID to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105443,"byte_end":105537,"line_start":275,"line_end":275,"column_start":5,"column_end":99}},{"value":"/bound with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105542,"byte_end":105556,"line_start":276,"line_end":276,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106211,"byte_end":106216,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"newer","qualname":"<Timeline>::newer","value":"fn <'s> (&'s mut self, max_id: Option<u64>) -> impl Future<Output = Result<Response<Vec<DirectMessage>>, error::Error>> + 's","parent":null,"children":[],"decl_id":null,"docs":"Return the set of DMs newer than the last set pulled, optionally placing a maximum DM ID to\nbound with.\n","sig":null,"attributes":[{"value":"/Return the set of DMs newer than the last set pulled, optionally placing a maximum DM ID to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106086,"byte_end":106180,"line_start":292,"line_end":292,"column_start":5,"column_end":99}},{"value":"/bound with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106185,"byte_end":106199,"line_start":293,"line_end":293,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":107079,"byte_end":107083,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"call","qualname":"<Timeline>::call","value":"fn (&self, since_id: Option<u64>, max_id: Option<u64>) -> impl Future<Output = Result<Response<Vec<DirectMessage>>, error::Error>>","parent":null,"children":[],"decl_id":null,"docs":"Return the set of DMs between the IDs given.","sig":null,"attributes":[{"value":"/Return the set of DMs between the IDs given.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106708,"byte_end":106755,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106760,"byte_end":106763,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/Note that the range is not fully inclusive; the message ID given by `since_id` will not be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106768,"byte_end":106861,"line_start":311,"line_end":311,"column_start":5,"column_end":98}},{"value":"/returned, but the message with `max_id` will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106866,"byte_end":106926,"line_start":312,"line_end":312,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106931,"byte_end":106934,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/If the range of DMs given by the IDs would return more than `self.count`, the newest set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":106939,"byte_end":107030,"line_start":314,"line_end":314,"column_start":5,"column_end":96}},{"value":"/of messages will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":107035,"byte_end":107067,"line_start":315,"line_end":315,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":107382,"byte_end":107396,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"with_page_size","qualname":"<Timeline>::with_page_size","value":"fn (self, page_size: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Helper builder function to set the page size.\n","sig":null,"attributes":[{"value":"/Helper builder function to set the page size.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":107322,"byte_end":107370,"line_start":324,"line_end":324,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":109007,"byte_end":109022,"line_start":367,"line_end":367,"column_start":10,"column_end":25},"name":"DMConversations","qualname":"::direct::DMConversations","value":"HashMap<u64, Vec<DirectMessage>>","parent":null,"children":[],"decl_id":null,"docs":"Wrapper around a collection of direct messages, sorted by their recipient.","sig":null,"attributes":[{"value":"/Wrapper around a collection of direct messages, sorted by their recipient.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":108658,"byte_end":108735,"line_start":361,"line_end":361,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":108736,"byte_end":108739,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/The mapping exposed here is from a User ID to a listing of direct messages between the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":108740,"byte_end":108829,"line_start":363,"line_end":363,"column_start":1,"column_end":90}},{"value":"/authenticated user and that user. For more information, see the docs for [`ConversationTimeline`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":108830,"byte_end":108931,"line_start":364,"line_end":364,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":108932,"byte_end":108935,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/[`ConversationTimeline`]: struct.ConversationTimeline.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":108936,"byte_end":108997,"line_start":366,"line_end":366,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112631,"byte_end":112651,"line_start":442,"line_end":442,"column_start":12,"column_end":32},"name":"ConversationTimeline","qualname":"::direct::ConversationTimeline","value":"ConversationTimeline { last_sent, last_received, first_sent, first_received, count, conversations }","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"decl_id":null,"docs":" Helper struct to load both sent and received direct messages, pre-sorting them into\n conversations by their recipient.","sig":null,"attributes":[{"value":"/ Helper struct to load both sent and received direct messages, pre-sorting them into","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":109758,"byte_end":109845,"line_start":387,"line_end":387,"column_start":1,"column_end":88}},{"value":"/ conversations by their recipient.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":109846,"byte_end":109883,"line_start":388,"line_end":388,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":109884,"byte_end":109887,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ This timeline loader is meant to get around a limitation of the direct message API endpoints:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":109888,"byte_end":109985,"line_start":390,"line_end":390,"column_start":1,"column_end":98}},{"value":"/ Twitter only gives endpoints to load all the messages *sent* by the authenticated user, or all","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":109986,"byte_end":110084,"line_start":391,"line_end":391,"column_start":1,"column_end":99}},{"value":"/ the messages *received* by the authenticated user. However, the common user interface for DMs","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110085,"byte_end":110182,"line_start":392,"line_end":392,"column_start":1,"column_end":98}},{"value":"/ is to separate them by the other account in the conversation. This loader is a higher-level","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110183,"byte_end":110278,"line_start":393,"line_end":393,"column_start":1,"column_end":96}},{"value":"/ wrapper over the direct `sent` and `received` calls to achieve this interface without library","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110279,"byte_end":110376,"line_start":394,"line_end":394,"column_start":1,"column_end":98}},{"value":"/ users having to implement it themselves.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110377,"byte_end":110421,"line_start":395,"line_end":395,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110422,"byte_end":110425,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ Much like [`Timeline`], simply receiving a `ConversationTimeline` from `conversations` does not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110426,"byte_end":110525,"line_start":397,"line_end":397,"column_start":1,"column_end":100}},{"value":"/ load any messages on its own. This is to allow setting the page size before loading the first","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110526,"byte_end":110623,"line_start":398,"line_end":398,"column_start":1,"column_end":98}},{"value":"/ batch of messages.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110624,"byte_end":110646,"line_start":399,"line_end":399,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110647,"byte_end":110650,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`Timeline`]: struct.Timeline.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110651,"byte_end":110689,"line_start":401,"line_end":401,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110690,"byte_end":110693,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ `ConversationTimeline` keeps a cache of all the messages its loaded, and updates this during","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110694,"byte_end":110790,"line_start":403,"line_end":403,"column_start":1,"column_end":97}},{"value":"/ calls to Twitter. Any calls on this timeline that generate a `ConversationFuture` will take","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110791,"byte_end":110886,"line_start":404,"line_end":404,"column_start":1,"column_end":96}},{"value":"/ ownership of the `ConversationTimeline` so that it can update this cache. The Future will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110887,"byte_end":110980,"line_start":405,"line_end":405,"column_start":1,"column_end":94}},{"value":"/ return the `ConversationTimeline` on success. To view the current cache, use the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":110981,"byte_end":111065,"line_start":406,"line_end":406,"column_start":1,"column_end":85}},{"value":"/ `conversations` field.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111066,"byte_end":111092,"line_start":407,"line_end":407,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111093,"byte_end":111096,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ There are two methods to load messages, and they operate by extending the cache by loading","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111097,"byte_end":111191,"line_start":409,"line_end":409,"column_start":1,"column_end":95}},{"value":"/ messages either older or newer than the extent of the cache.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111192,"byte_end":111256,"line_start":410,"line_end":410,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111257,"byte_end":111260,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: Twitter has different API limitations for sent versus received messages. You can only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111261,"byte_end":111360,"line_start":412,"line_end":412,"column_start":1,"column_end":100}},{"value":"/ load the most recent 200 *received* messages through the public API, but you can load up to 800","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111361,"byte_end":111460,"line_start":413,"line_end":413,"column_start":1,"column_end":100}},{"value":"/ *sent* messages. This can create some strange user-interface if a user has some old","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111461,"byte_end":111548,"line_start":414,"line_end":414,"column_start":1,"column_end":88}},{"value":"/ conversations, as they can only see their own side of the conversation this way. If you'd like","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111549,"byte_end":111647,"line_start":415,"line_end":415,"column_start":1,"column_end":99}},{"value":"/ to load as many messages as possible, both API endpoints have a per-call limit of 200. Setting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111648,"byte_end":111746,"line_start":416,"line_end":416,"column_start":1,"column_end":99}},{"value":"/ the page size to 200 prior to loading messages allows you to use one function call to load a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111747,"byte_end":111843,"line_start":417,"line_end":417,"column_start":1,"column_end":97}},{"value":"/ fairly-complete view of the user's conversations.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111844,"byte_end":111897,"line_start":418,"line_end":418,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111898,"byte_end":111901,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111902,"byte_end":111915,"line_start":420,"line_end":420,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111916,"byte_end":111919,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111920,"byte_end":111938,"line_start":422,"line_end":422,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111939,"byte_end":111965,"line_start":423,"line_end":423,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111966,"byte_end":111986,"line_start":424,"line_end":424,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":111987,"byte_end":112010,"line_start":425,"line_end":425,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112011,"byte_end":112053,"line_start":426,"line_end":426,"column_start":1,"column_end":43}},{"value":"/ let mut conversations = egg_mode::direct::conversations(&token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112054,"byte_end":112122,"line_start":427,"line_end":427,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112123,"byte_end":112126,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ // newest() and oldest() consume the Timeline and give it back on success, so assign it back","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112127,"byte_end":112223,"line_start":429,"line_end":429,"column_start":1,"column_end":97}},{"value":"/ // when it's done","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112224,"byte_end":112245,"line_start":430,"line_end":430,"column_start":1,"column_end":22}},{"value":"/ conversations = conversations.newest().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112246,"byte_end":112304,"line_start":431,"line_end":431,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112305,"byte_end":112308,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ for (id, convo) in &conversations.conversations {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112309,"byte_end":112362,"line_start":433,"line_end":433,"column_start":1,"column_end":54}},{"value":"/     let user = egg_mode::user::show(*id, &token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112363,"byte_end":112431,"line_start":434,"line_end":434,"column_start":1,"column_end":69}},{"value":"/     println!(\"Conversation with @{}\", user.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112432,"byte_end":112492,"line_start":435,"line_end":435,"column_start":1,"column_end":61}},{"value":"/     for msg in convo {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112493,"byte_end":112519,"line_start":436,"line_end":436,"column_start":1,"column_end":27}},{"value":"/         println!(\"<@{}> {}\", msg.sender_screen_name, msg.text);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112520,"byte_end":112587,"line_start":437,"line_end":437,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112588,"byte_end":112597,"line_start":438,"line_end":438,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112598,"byte_end":112603,"line_start":439,"line_end":439,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112604,"byte_end":112611,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112612,"byte_end":112619,"line_start":441,"line_end":441,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112793,"byte_end":112802,"line_start":446,"line_end":446,"column_start":9,"column_end":18},"name":"last_sent","qualname":"::direct::ConversationTimeline::last_sent","value":"std::option::Option<u64>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"The message ID of the most recent sent message in the current conversation set.\n","sig":null,"attributes":[{"value":"/The message ID of the most recent sent message in the current conversation set.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112702,"byte_end":112784,"line_start":445,"line_end":445,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112916,"byte_end":112929,"line_start":448,"line_end":448,"column_start":9,"column_end":22},"name":"last_received","qualname":"::direct::ConversationTimeline::last_received","value":"std::option::Option<u64>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"The message ID of the most recent received message in the current conversation set.\n","sig":null,"attributes":[{"value":"/The message ID of the most recent received message in the current conversation set.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112821,"byte_end":112907,"line_start":447,"line_end":447,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113034,"byte_end":113044,"line_start":450,"line_end":450,"column_start":9,"column_end":19},"name":"first_sent","qualname":"::direct::ConversationTimeline::first_sent","value":"std::option::Option<u64>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"The message ID of the oldest sent message in the current conversation set.\n","sig":null,"attributes":[{"value":"/The message ID of the oldest sent message in the current conversation set.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":112948,"byte_end":113025,"line_start":449,"line_end":449,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113153,"byte_end":113167,"line_start":452,"line_end":452,"column_start":9,"column_end":23},"name":"first_received","qualname":"::direct::ConversationTimeline::first_received","value":"std::option::Option<u64>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"The message ID of the oldest received message in the current conversation set.\n","sig":null,"attributes":[{"value":"/The message ID of the oldest received message in the current conversation set.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113063,"byte_end":113144,"line_start":451,"line_end":451,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113241,"byte_end":113246,"line_start":454,"line_end":454,"column_start":9,"column_end":14},"name":"count","qualname":"::direct::ConversationTimeline::count","value":"u32","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"The number of messages loaded per API call.\n","sig":null,"attributes":[{"value":"/The number of messages loaded per API call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113186,"byte_end":113232,"line_start":453,"line_end":453,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113323,"byte_end":113336,"line_start":456,"line_end":456,"column_start":9,"column_end":22},"name":"conversations","qualname":"::direct::ConversationTimeline::conversations","value":"std::collections::HashMap<u64, std::vec::Vec<direct::DirectMessage>>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"The conversation threads that have been loaded so far.\n","sig":null,"attributes":[{"value":"/The conversation threads that have been loaded so far.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113257,"byte_end":113314,"line_start":455,"line_end":455,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":114950,"byte_end":114964,"line_start":501,"line_end":501,"column_start":12,"column_end":26},"name":"with_page_size","qualname":"<ConversationTimeline>::with_page_size","value":"fn (self, page_size: u32) -> ConversationTimeline","parent":null,"children":[],"decl_id":null,"docs":"Builder function to set the number of messages pulled in a single request.\n","sig":null,"attributes":[{"value":"/Builder function to set the number of messages pulled in a single request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":114861,"byte_end":114938,"line_start":500,"line_end":500,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115360,"byte_end":115366,"line_start":511,"line_end":511,"column_start":18,"column_end":24},"name":"newest","qualname":"<ConversationTimeline>::newest","value":"fn (self) -> Result<ConversationTimeline, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Load messages newer than the currently-loaded set, or the newset set if no messages have\nbeen loaded yet. The complete conversation set can be viewed from the `ConversationTimeline`\nafter it is finished loading.\n","sig":null,"attributes":[{"value":"/Load messages newer than the currently-loaded set, or the newset set if no messages have","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115114,"byte_end":115205,"line_start":508,"line_end":508,"column_start":5,"column_end":96}},{"value":"/been loaded yet. The complete conversation set can be viewed from the `ConversationTimeline`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115210,"byte_end":115305,"line_start":509,"line_end":509,"column_start":5,"column_end":100}},{"value":"/after it is finished loading.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115310,"byte_end":115342,"line_start":510,"line_end":510,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115842,"byte_end":115846,"line_start":521,"line_end":521,"column_start":12,"column_end":16},"name":"next","qualname":"<ConversationTimeline>::next","value":"fn (self) -> impl Future<Output = Result<ConversationTimeline, error::Error>>","parent":null,"children":[],"decl_id":null,"docs":"Load messages older than the currently-loaded set, or the newest set if no messages have\nbeen loaded. The complete conversation set can be viewed from the `ConversationTimeline`\nafter it is finished loading.\n","sig":null,"attributes":[{"value":"/Load messages older than the currently-loaded set, or the newest set if no messages have","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115606,"byte_end":115697,"line_start":518,"line_end":518,"column_start":5,"column_end":96}},{"value":"/been loaded. The complete conversation set can be viewed from the `ConversationTimeline`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115702,"byte_end":115793,"line_start":519,"line_end":519,"column_start":5,"column_end":96}},{"value":"/after it is finished loading.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":115798,"byte_end":115830,"line_start":520,"line_end":520,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"entities","qualname":"::entities","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":2006},{"krate":0,"index":2054},{"krate":0,"index":2052},{"krate":0,"index":2009},{"krate":0,"index":2056},{"krate":0,"index":2134},{"krate":0,"index":2132},{"krate":0,"index":2069},{"krate":0,"index":2136},{"krate":0,"index":2187},{"krate":0,"index":2186},{"krate":0,"index":2184},{"krate":0,"index":2143},{"krate":0,"index":2189},{"krate":0,"index":2244},{"krate":0,"index":2243},{"krate":0,"index":2241},{"krate":0,"index":2194},{"krate":0,"index":2246},{"krate":0,"index":2293},{"krate":0,"index":2292},{"krate":0,"index":2290},{"krate":0,"index":2251},{"krate":0,"index":2295},{"krate":0,"index":2347},{"krate":0,"index":2346},{"krate":0,"index":2344},{"krate":0,"index":2299},{"krate":0,"index":2349},{"krate":0,"index":2400},{"krate":0,"index":2398},{"krate":0,"index":2353},{"krate":0,"index":2402},{"krate":0,"index":2472},{"krate":0,"index":2470},{"krate":0,"index":2406},{"krate":0,"index":2474},{"krate":0,"index":2528},{"krate":0,"index":2526},{"krate":0,"index":2479},{"krate":0,"index":2530},{"krate":0,"index":2622},{"krate":0,"index":2620},{"krate":0,"index":2535},{"krate":0,"index":435},{"krate":0,"index":438}],"decl_id":null,"docs":" Data structures containing extracted URL, mention, tag, and media information.","sig":null,"attributes":[{"value":"! Data structures containing extracted URL, mention, tag, and media information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":120945,"byte_end":121027,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121028,"byte_end":121031,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! These structures are meant to be received in an API call to describe the data they accompany.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121032,"byte_end":121129,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"! For example, a `UrlEntity` describes a hyperlink in a tweet or user description text, and a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121130,"byte_end":121225,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"! `HashtagEntity` describes a hashtag or stock symbol extracted from a tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121226,"byte_end":121305,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121306,"byte_end":121309,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! For more information on the data in these structures, see Twitter's documentation for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121310,"byte_end":121399,"line_start":11,"line_end":11,"column_start":1,"column_end":90}},{"value":"! [Entities][] and [Entities in Objects][obj].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121400,"byte_end":121448,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121449,"byte_end":121452,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! [Entities]: https://dev.twitter.com/overview/api/entities","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121453,"byte_end":121514,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"! [obj]: https://dev.twitter.com/overview/api/entities-in-twitter-objects","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121515,"byte_end":121590,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121591,"byte_end":121594,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ## Entity Ranges","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121595,"byte_end":121615,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121616,"byte_end":121619,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Entities that refer to elements within a text have a `range` field that contains the text span","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121620,"byte_end":121718,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"! that is being referenced. The numbers in question are byte offsets, so if you have an entity","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121719,"byte_end":121815,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"! that you'd like to slice out of the source text, you can use the indices directly in slicing","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121816,"byte_end":121912,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"! operations:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121913,"byte_end":121928,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121929,"byte_end":121932,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121933,"byte_end":121944,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"! # use egg_mode::entities::HashtagEntity;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121945,"byte_end":121989,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"! # let entity = HashtagEntity { range: (0, 0), text: \"\".to_string() };","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":121990,"byte_end":122063,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"! # let text = \"asdf\";","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122064,"byte_end":122088,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"! let slice = &text[entity.range.0..entity.range.1];","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122089,"byte_end":122143,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122144,"byte_end":122151,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122152,"byte_end":122155,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! ### Shortened, Display, and Expanded URLs","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122156,"byte_end":122201,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122202,"byte_end":122205,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! URL and Media entities contain references to a URL within their parent text. However, due to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122206,"byte_end":122302,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"! the nature of how Twitter handles URLs in tweets and user bios, each entity struct has three","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122303,"byte_end":122399,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"! URLs within it:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122400,"byte_end":122419,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122420,"byte_end":122423,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! - `url`: This is the `t.co` shortened URL as returned directly from twitter. This is what","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122424,"byte_end":122517,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"!   contributes to character count in tweets and user bios.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122518,"byte_end":122579,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"! - `expanded_url`: This is the original URL the user entered in their tweet. While it is given","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122580,"byte_end":122677,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"!   to API client, Twitter recommends still sending users to the shortened link, for analytics","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122678,"byte_end":122774,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"!   purposes. Twitter Web uses this field to supply hover-text for where the URL resolves to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122775,"byte_end":122870,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"! - `display_url`: This is a truncated version of `expanded_url`, meant to be displayed inline","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122871,"byte_end":122967,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"!   with the parent text. This is useful to show users where the link resolves to, without","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":122968,"byte_end":123060,"line_start":43,"line_end":43,"column_start":1,"column_end":93}},{"value":"!   potentially filling up a lot of space with the fullly expanded URL.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123061,"byte_end":123134,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123344,"byte_end":123357,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"HashtagEntity","qualname":"::entities::HashtagEntity","value":"HashtagEntity { range, text }","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2007}],"decl_id":null,"docs":"Represents a hashtag or symbol extracted from another piece of text.\n","sig":null,"attributes":[{"value":"/Represents a hashtag or symbol extracted from another piece of text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123224,"byte_end":123295,"line_start":50,"line_end":50,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123592,"byte_end":123597,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"range","qualname":"::entities::HashtagEntity::range","value":"(usize, usize)","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":"The byte offsets where the hashtag is located. The first index is the location of the # or $\ncharacter; the second is the location of the first character following the hashtag.\n","sig":null,"attributes":[{"value":"/The byte offsets where the hashtag is located. The first index is the location of the # or $","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123364,"byte_end":123459,"line_start":53,"line_end":53,"column_start":5,"column_end":100}},{"value":"/character; the second is the location of the first character following the hashtag.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123464,"byte_end":123550,"line_start":54,"line_end":54,"column_start":5,"column_end":91}},{"value":"serde(rename = \"indices\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123555,"byte_end":123583,"line_start":55,"line_end":55,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123693,"byte_end":123697,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"text","qualname":"::entities::HashtagEntity::text","value":"std::string::String","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":"The text of the hashtag, without the leading # or $ character.\n","sig":null,"attributes":[{"value":"/The text of the hashtag, without the leading # or $ character.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123619,"byte_end":123684,"line_start":57,"line_end":57,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124573,"byte_end":124584,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"MediaEntity","qualname":"::entities::MediaEntity","value":"MediaEntity { display_url, expanded_url, id, range, media_url, media_url_https, sizes, source_status_id, media_type, url, video_info, ext_alt_text }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2067},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2068},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066}],"decl_id":null,"docs":"Represents a piece of media attached to a tweet.","sig":null,"attributes":[{"value":"/Represents a piece of media attached to a tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123710,"byte_end":123761,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123762,"byte_end":123765,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/The information in this struct is subtly different depending on what media is being referenced,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123766,"byte_end":123864,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/and which entity container is holding this instance. For videos and GIFs, the `media_url` and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123865,"byte_end":123961,"line_start":64,"line_end":64,"column_start":1,"column_end":97}},{"value":"/`media_url_https` fields each link to a thumbnail image of the media, typically of the first","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":123962,"byte_end":124057,"line_start":65,"line_end":65,"column_start":1,"column_end":96}},{"value":"/frame. The real video information can be found on the `video_info` field, including various","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124058,"byte_end":124152,"line_start":66,"line_end":66,"column_start":1,"column_end":95}},{"value":"/encodings if available.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124153,"byte_end":124179,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124180,"byte_end":124183,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/Image links available in `media_url` and `media_url_https` can be obtained in different sizes by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124184,"byte_end":124283,"line_start":69,"line_end":69,"column_start":1,"column_end":100}},{"value":"/appending a colon and one of the available sizes in the `MediaSizes` struct. For example, the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124284,"byte_end":124380,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/cropped thumbnail can be viewed by appending `:thumb` to the end of the URL, and the full-size","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124381,"byte_end":124478,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/image can be viewed by appending `:large`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124479,"byte_end":124524,"line_start":72,"line_end":72,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124641,"byte_end":124652,"line_start":76,"line_end":76,"column_start":9,"column_end":20},"name":"display_url","qualname":"::entities::MediaEntity::display_url","value":"std::string::String","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"A shortened URL to display to clients.\n","sig":null,"attributes":[{"value":"/A shortened URL to display to clients.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124591,"byte_end":124632,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124748,"byte_end":124760,"line_start":78,"line_end":78,"column_start":9,"column_end":21},"name":"expanded_url","qualname":"::entities::MediaEntity::expanded_url","value":"std::string::String","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"An expanded version of `display_url`; links to the media display page.\n","sig":null,"attributes":[{"value":"/An expanded version of `display_url`; links to the media display page.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124666,"byte_end":124739,"line_start":77,"line_end":77,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124813,"byte_end":124815,"line_start":80,"line_end":80,"column_start":9,"column_end":11},"name":"id","qualname":"::entities::MediaEntity::id","value":"u64","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"A numeric ID for the media.\n","sig":null,"attributes":[{"value":"/A numeric ID for the media.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124774,"byte_end":124804,"line_start":79,"line_end":79,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125069,"byte_end":125074,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"range","qualname":"::entities::MediaEntity::range","value":"(usize, usize)","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"The byte offsets where the media URL is located. The first index is the location of the\nfirst character of the URL; the second is the location of the first character following the\nURL.\n","sig":null,"attributes":[{"value":"/The byte offsets where the media URL is located. The first index is the location of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124826,"byte_end":124916,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/first character of the URL; the second is the location of the first character following the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":124921,"byte_end":125015,"line_start":82,"line_end":82,"column_start":5,"column_end":99}},{"value":"/URL.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125020,"byte_end":125027,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"serde(rename = \"indices\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125032,"byte_end":125060,"line_start":84,"line_end":84,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125326,"byte_end":125335,"line_start":90,"line_end":90,"column_start":9,"column_end":18},"name":"media_url","qualname":"::entities::MediaEntity::media_url","value":"std::string::String","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"A URL pointing directly to the media file. Uses HTTP as the protocol.","sig":null,"attributes":[{"value":"/A URL pointing directly to the media file. Uses HTTP as the protocol.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125096,"byte_end":125168,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125173,"byte_end":125176,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/For videos and GIFs, this link will be to a thumbnail of the media, and the real video link","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125181,"byte_end":125275,"line_start":88,"line_end":88,"column_start":5,"column_end":99}},{"value":"/will be contained in `video_info`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125280,"byte_end":125317,"line_start":89,"line_end":89,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125580,"byte_end":125595,"line_start":95,"line_end":95,"column_start":9,"column_end":24},"name":"media_url_https","qualname":"::entities::MediaEntity::media_url_https","value":"std::string::String","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"A URL pointing directly to the media file. Uses HTTPS as the protocol.","sig":null,"attributes":[{"value":"/A URL pointing directly to the media file. Uses HTTPS as the protocol.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125349,"byte_end":125422,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125427,"byte_end":125430,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/For videos and GIFs, this link will be to a thumbnail of the media, and the real video link","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125435,"byte_end":125529,"line_start":93,"line_end":93,"column_start":5,"column_end":99}},{"value":"/will be contained in `video_info`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125534,"byte_end":125571,"line_start":94,"line_end":94,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125664,"byte_end":125669,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"sizes","qualname":"::entities::MediaEntity::sizes","value":"entities::MediaSizes","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"Various sizes available for the media file.\n","sig":null,"attributes":[{"value":"/Various sizes available for the media file.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125609,"byte_end":125655,"line_start":96,"line_end":96,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125832,"byte_end":125848,"line_start":100,"line_end":100,"column_start":9,"column_end":25},"name":"source_status_id","qualname":"::entities::MediaEntity::source_status_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"For tweets containing media that was originally associated with a different tweet, this\ncontains the ID of the original tweet.\n","sig":null,"attributes":[{"value":"/For tweets containing media that was originally associated with a different tweet, this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125687,"byte_end":125777,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/contains the ID of the original tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125782,"byte_end":125823,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125945,"byte_end":125955,"line_start":103,"line_end":103,"column_start":9,"column_end":19},"name":"media_type","qualname":"::entities::MediaEntity::media_type","value":"entities::MediaType","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"The type of media being represented.\n","sig":null,"attributes":[{"value":"/The type of media being represented.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125867,"byte_end":125906,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"serde(rename = \"type\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125911,"byte_end":125936,"line_start":102,"line_end":102,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126021,"byte_end":126024,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"name":"url","qualname":"::entities::MediaEntity::url","value":"std::string::String","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"The t.co link from the original text.\n","sig":null,"attributes":[{"value":"/The t.co link from the original text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":125972,"byte_end":126012,"line_start":104,"line_end":104,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126156,"byte_end":126166,"line_start":108,"line_end":108,"column_start":9,"column_end":19},"name":"video_info","qualname":"::entities::MediaEntity::video_info","value":"std::option::Option<entities::VideoInfo>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"For media entities corresponding to videos, this contains extra information about the linked\nvideo.\n","sig":null,"attributes":[{"value":"/For media entities corresponding to videos, this contains extra information about the linked","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126038,"byte_end":126133,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/video.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126138,"byte_end":126147,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126230,"byte_end":126242,"line_start":110,"line_end":110,"column_start":9,"column_end":21},"name":"ext_alt_text","qualname":"::entities::MediaEntity::ext_alt_text","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"Media alt text, if present.\n","sig":null,"attributes":[{"value":"/Media alt text, if present.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126191,"byte_end":126221,"line_start":109,"line_end":109,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126451,"byte_end":126456,"line_start":118,"line_end":118,"column_start":5,"column_end":10},"name":"Photo","qualname":"::entities::MediaType::Photo","value":"MediaType::Photo","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"A static image.\n","sig":null,"attributes":[{"value":"/A static image.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126397,"byte_end":126415,"line_start":116,"line_end":116,"column_start":5,"column_end":23}},{"value":"serde(rename = \"photo\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126420,"byte_end":126446,"line_start":117,"line_end":117,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2139},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126509,"byte_end":126514,"line_start":121,"line_end":121,"column_start":5,"column_end":10},"name":"Video","qualname":"::entities::MediaType::Video","value":"MediaType::Video","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"A video.\n","sig":null,"attributes":[{"value":"/A video.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126462,"byte_end":126473,"line_start":119,"line_end":119,"column_start":5,"column_end":16}},{"value":"serde(rename = \"video\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126478,"byte_end":126504,"line_start":120,"line_end":120,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126618,"byte_end":126621,"line_start":124,"line_end":124,"column_start":5,"column_end":8},"name":"Gif","qualname":"::entities::MediaType::Gif","value":"MediaType::Gif","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"An animated GIF, delivered as a video without audio.\n","sig":null,"attributes":[{"value":"/An animated GIF, delivered as a video without audio.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126520,"byte_end":126575,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"serde(rename = \"animated_gif\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126580,"byte_end":126613,"line_start":123,"line_end":123,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126381,"byte_end":126390,"line_start":115,"line_end":115,"column_start":10,"column_end":19},"name":"MediaType","qualname":"::entities::MediaType","value":"MediaType::{Photo, Video, Gif}","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2141}],"decl_id":null,"docs":"Represents the types of media that can be attached to a tweet.\n","sig":null,"attributes":[{"value":"/Represents the types of media that can be attached to a tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126263,"byte_end":126328,"line_start":113,"line_end":113,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126732,"byte_end":126742,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"MediaSizes","qualname":"::entities::MediaSizes","value":"MediaSizes { thumb, small, medium, large }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193}],"decl_id":null,"docs":"Represents the available sizes for a media file.\n","sig":null,"attributes":[{"value":"/Represents the available sizes for a media file.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126626,"byte_end":126677,"line_start":127,"line_end":127,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126816,"byte_end":126821,"line_start":131,"line_end":131,"column_start":9,"column_end":14},"name":"thumb","qualname":"::entities::MediaSizes::thumb","value":"entities::MediaSize","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"Information for a thumbnail-sized version of the media.\n","sig":null,"attributes":[{"value":"/Information for a thumbnail-sized version of the media.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126749,"byte_end":126807,"line_start":130,"line_end":130,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126901,"byte_end":126906,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"small","qualname":"::entities::MediaSizes::small","value":"entities::MediaSize","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"Information for a small-sized version of the media.\n","sig":null,"attributes":[{"value":"/Information for a small-sized version of the media.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126838,"byte_end":126892,"line_start":132,"line_end":132,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126987,"byte_end":126993,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"name":"medium","qualname":"::entities::MediaSizes::medium","value":"entities::MediaSize","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"Information for a medium-sized version of the media.\n","sig":null,"attributes":[{"value":"/Information for a medium-sized version of the media.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":126923,"byte_end":126978,"line_start":134,"line_end":134,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127073,"byte_end":127078,"line_start":137,"line_end":137,"column_start":9,"column_end":14},"name":"large","qualname":"::entities::MediaSizes::large","value":"entities::MediaSize","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"Information for a large-sized version of the media.\n","sig":null,"attributes":[{"value":"/Information for a large-sized version of the media.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127010,"byte_end":127064,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127339,"byte_end":127342,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"Fit","qualname":"::entities::ResizeMode::Fit","value":"ResizeMode::Fit","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":"The media was resized to fit one dimension, keeping its aspect ratio.\n","sig":null,"attributes":[{"value":"/The media was resized to fit one dimension, keeping its aspect ratio.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127233,"byte_end":127305,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"serde(rename = \"fit\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127310,"byte_end":127334,"line_start":144,"line_end":144,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127437,"byte_end":127441,"line_start":148,"line_end":148,"column_start":5,"column_end":9},"name":"Crop","qualname":"::entities::ResizeMode::Crop","value":"ResizeMode::Crop","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":"The media was cropped to fit a specific resolution.\n","sig":null,"attributes":[{"value":"/The media was cropped to fit a specific resolution.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127348,"byte_end":127402,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"serde(rename = \"crop\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127407,"byte_end":127432,"line_start":147,"line_end":147,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2246},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127216,"byte_end":127226,"line_start":142,"line_end":142,"column_start":10,"column_end":20},"name":"ResizeMode","qualname":"::entities::ResizeMode","value":"ResizeMode::{Fit, Crop}","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2249}],"decl_id":null,"docs":"Represents how an image has been resized for a given size variant.\n","sig":null,"attributes":[{"value":"/Represents how an image has been resized for a given size variant.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127094,"byte_end":127163,"line_start":140,"line_end":140,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127546,"byte_end":127555,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"MediaSize","qualname":"::entities::MediaSize","value":"MediaSize { w, h, resize }","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298}],"decl_id":null,"docs":"Represents the dimensions of a media file.\n","sig":null,"attributes":[{"value":"/Represents the dimensions of a media file.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127446,"byte_end":127491,"line_start":151,"line_end":151,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127609,"byte_end":127610,"line_start":155,"line_end":155,"column_start":9,"column_end":10},"name":"w","qualname":"::entities::MediaSize::w","value":"i32","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"The size variant's width in pixels.\n","sig":null,"attributes":[{"value":"/The size variant's width in pixels.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127562,"byte_end":127600,"line_start":154,"line_end":154,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127669,"byte_end":127670,"line_start":157,"line_end":157,"column_start":9,"column_end":10},"name":"h","qualname":"::entities::MediaSize::h","value":"i32","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"The size variant's height in pixels.\n","sig":null,"attributes":[{"value":"/The size variant's height in pixels.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127621,"byte_end":127660,"line_start":156,"line_end":156,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127740,"byte_end":127746,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"resize","qualname":"::entities::MediaSize::resize","value":"entities::ResizeMode","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"The method used to obtain the given dimensions.\n","sig":null,"attributes":[{"value":"/The method used to obtain the given dimensions.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127681,"byte_end":127731,"line_start":158,"line_end":158,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2349},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127854,"byte_end":127863,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"VideoInfo","qualname":"::entities::VideoInfo","value":"VideoInfo { aspect_ratio, duration_millis, variants }","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352}],"decl_id":null,"docs":"Represents metadata specific to videos.\n","sig":null,"attributes":[{"value":"/Represents metadata specific to videos.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127763,"byte_end":127805,"line_start":162,"line_end":162,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127912,"byte_end":127924,"line_start":166,"line_end":166,"column_start":9,"column_end":21},"name":"aspect_ratio","qualname":"::entities::VideoInfo::aspect_ratio","value":"(i32, i32)","parent":{"krate":0,"index":2349},"children":[],"decl_id":null,"docs":"The aspect ratio of the video.\n","sig":null,"attributes":[{"value":"/The aspect ratio of the video.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127870,"byte_end":127903,"line_start":165,"line_end":165,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128055,"byte_end":128070,"line_start":170,"line_end":170,"column_start":9,"column_end":24},"name":"duration_millis","qualname":"::entities::VideoInfo::duration_millis","value":"std::option::Option<i32>","parent":{"krate":0,"index":2349},"children":[],"decl_id":null,"docs":"The duration of the video, in milliseconds.","sig":null,"attributes":[{"value":"/The duration of the video, in milliseconds.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127942,"byte_end":127988,"line_start":167,"line_end":167,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":127993,"byte_end":127996,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/This field is not given for animated GIFs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128001,"byte_end":128046,"line_start":169,"line_end":169,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128161,"byte_end":128169,"line_start":172,"line_end":172,"column_start":9,"column_end":17},"name":"variants","qualname":"::entities::VideoInfo::variants","value":"std::vec::Vec<entities::VideoVariant>","parent":{"krate":0,"index":2349},"children":[],"decl_id":null,"docs":"Information about various encodings available for the video.\n","sig":null,"attributes":[{"value":"/Information about various encodings available for the video.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128089,"byte_end":128152,"line_start":171,"line_end":171,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128305,"byte_end":128317,"line_start":177,"line_end":177,"column_start":12,"column_end":24},"name":"VideoVariant","qualname":"::entities::VideoVariant","value":"VideoVariant { bitrate, content_type, url }","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2404}],"decl_id":null,"docs":"Represents information about a specific encoding of a video.\n","sig":null,"attributes":[{"value":"/Represents information about a specific encoding of a video.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128193,"byte_end":128256,"line_start":175,"line_end":175,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128414,"byte_end":128421,"line_start":179,"line_end":179,"column_start":9,"column_end":16},"name":"bitrate","qualname":"::entities::VideoVariant::bitrate","value":"std::option::Option<i32>","parent":{"krate":0,"index":2402},"children":[],"decl_id":null,"docs":"The bitrate of the video. This value is present for GIFs, but it will be zero.\n","sig":null,"attributes":[{"value":"/The bitrate of the video. This value is present for GIFs, but it will be zero.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128324,"byte_end":128405,"line_start":178,"line_end":178,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128541,"byte_end":128553,"line_start":182,"line_end":182,"column_start":9,"column_end":21},"name":"content_type","qualname":"::entities::VideoVariant::content_type","value":"mime::Mime","parent":{"krate":0,"index":2402},"children":[],"decl_id":null,"docs":"The file format of the video variant.\n","sig":null,"attributes":[{"value":"/The file format of the video variant.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128440,"byte_end":128480,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"serde(deserialize_with = \"deserialize_mime\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128485,"byte_end":128532,"line_start":181,"line_end":181,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2404},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128613,"byte_end":128616,"line_start":184,"line_end":184,"column_start":9,"column_end":12},"name":"url","qualname":"::entities::VideoVariant::url","value":"std::string::String","parent":{"krate":0,"index":2402},"children":[],"decl_id":null,"docs":"The URL for the video variant.\n","sig":null,"attributes":[{"value":"/The URL for the video variant.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128571,"byte_end":128604,"line_start":183,"line_end":183,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128736,"byte_end":128745,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"UrlEntity","qualname":"::entities::UrlEntity","value":"UrlEntity { display_url, expanded_url, range, url }","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2475}],"decl_id":null,"docs":"Represents a link extracted from another piece of text.\n","sig":null,"attributes":[{"value":"/Represents a link extracted from another piece of text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128629,"byte_end":128687,"line_start":187,"line_end":187,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128845,"byte_end":128856,"line_start":192,"line_end":192,"column_start":9,"column_end":20},"name":"display_url","qualname":"::entities::UrlEntity::display_url","value":"std::string::String","parent":{"krate":0,"index":2474},"children":[],"decl_id":null,"docs":"A truncated URL meant to be displayed inline with the text.\n","sig":null,"attributes":[{"value":"/A truncated URL meant to be displayed inline with the text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128752,"byte_end":128814,"line_start":190,"line_end":190,"column_start":5,"column_end":67}},{"value":"serde(default)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128819,"byte_end":128836,"line_start":191,"line_end":191,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129020,"byte_end":129032,"line_start":197,"line_end":197,"column_start":9,"column_end":21},"name":"expanded_url","qualname":"::entities::UrlEntity::expanded_url","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2474},"children":[],"decl_id":null,"docs":"The URL that the t.co URL resolves to.","sig":null,"attributes":[{"value":"/The URL that the t.co URL resolves to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128870,"byte_end":128911,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128916,"byte_end":128919,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/Meant to be used as hover-text when a user mouses over a link.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128924,"byte_end":128989,"line_start":195,"line_end":195,"column_start":5,"column_end":70}},{"value":"serde(default)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":128994,"byte_end":129011,"line_start":196,"line_end":196,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2478},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129171,"byte_end":129176,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"name":"range","qualname":"::entities::UrlEntity::range","value":"(usize, usize)","parent":{"krate":0,"index":2474},"children":[],"decl_id":null,"docs":"The byte offsets in the companion text where the URL was extracted from.\n","sig":null,"attributes":[{"value":"/The byte offsets in the companion text where the URL was extracted from.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129054,"byte_end":129129,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"serde(rename = \"indices\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129134,"byte_end":129162,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129257,"byte_end":129260,"line_start":202,"line_end":202,"column_start":9,"column_end":12},"name":"url","qualname":"::entities::UrlEntity::url","value":"std::string::String","parent":{"krate":0,"index":2474},"children":[],"decl_id":null,"docs":"The t.co URL extracted from the companion text.\n","sig":null,"attributes":[{"value":"/The t.co URL extracted from the companion text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129198,"byte_end":129248,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2530},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129387,"byte_end":129400,"line_start":207,"line_end":207,"column_start":12,"column_end":25},"name":"MentionEntity","qualname":"::entities::MentionEntity","value":"MentionEntity { id, range, name, screen_name }","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2531}],"decl_id":null,"docs":"Represnts a user mention extracted from another piece of text.\n","sig":null,"attributes":[{"value":"/Represnts a user mention extracted from another piece of text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129273,"byte_end":129338,"line_start":205,"line_end":205,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129533,"byte_end":129535,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"name":"id","qualname":"::entities::MentionEntity::id","value":"u64","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":"Numeric ID of the mentioned user.\n","sig":null,"attributes":[{"value":"/Numeric ID of the mentioned user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129407,"byte_end":129443,"line_start":208,"line_end":208,"column_start":5,"column_end":41}},{"value":"serde(deserialize_with = \"nullable_id\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129448,"byte_end":129490,"line_start":209,"line_end":209,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2533},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129808,"byte_end":129813,"line_start":215,"line_end":215,"column_start":9,"column_end":14},"name":"range","qualname":"::entities::MentionEntity::range","value":"(usize, usize)","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":"The byte offsets where the user mention is located in the original text. The first index is\nthe location of the @ symbol; the second is the location of the first character following\nthe user screen name.\n","sig":null,"attributes":[{"value":"/The byte offsets where the user mention is located in the original text. The first index is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129546,"byte_end":129640,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/the location of the @ symbol; the second is the location of the first character following","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129645,"byte_end":129737,"line_start":212,"line_end":212,"column_start":5,"column_end":97}},{"value":"/the user screen name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129742,"byte_end":129766,"line_start":213,"line_end":213,"column_start":5,"column_end":29}},{"value":"serde(rename = \"indices\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129771,"byte_end":129799,"line_start":214,"line_end":214,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129965,"byte_end":129969,"line_start":218,"line_end":218,"column_start":9,"column_end":13},"name":"name","qualname":"::entities::MentionEntity::name","value":"std::string::String","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":"Display name of the mentioned user.\n","sig":null,"attributes":[{"value":"/Display name of the mentioned user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129835,"byte_end":129873,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"serde(deserialize_with = \"nullable_str\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129878,"byte_end":129921,"line_start":217,"line_end":217,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":130059,"byte_end":130070,"line_start":220,"line_end":220,"column_start":9,"column_end":20},"name":"screen_name","qualname":"::entities::MentionEntity::screen_name","value":"std::string::String","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":"Screen name of the mentioned user, without the leading @ symbol.\n","sig":null,"attributes":[{"value":"/Screen name of the mentioned user, without the leading @ symbol.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\entities.rs","byte_start":129983,"byte_end":130050,"line_start":219,"line_end":219,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":2624},{"krate":0,"index":2674},{"krate":0,"index":2633},{"krate":0,"index":2627},{"krate":0,"index":2626},{"krate":0,"index":456},{"krate":0,"index":2676},{"krate":0,"index":2728},{"krate":0,"index":2685},{"krate":0,"index":2679},{"krate":0,"index":458},{"krate":0,"index":2730},{"krate":0,"index":2791},{"krate":0,"index":2789},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2740},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2793},{"krate":0,"index":2865},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2863}],"decl_id":null,"docs":" A composite error type for errors that can occur while interacting with Twitter.","sig":null,"attributes":[{"value":"! A composite error type for errors that can occur while interacting with Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":130658,"byte_end":130742,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":130743,"byte_end":130746,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Any action that crosses the network to call Twitter has many places where it can go wrong.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":130747,"byte_end":130841,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"! Whether it's a bad network connection, a revoked authorization token, a deleted tweet, or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":130842,"byte_end":130935,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"! anything in between, those errors are all represented in the (rather sprawling) [`Error`] enum.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":130936,"byte_end":131035,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"! Any errors direct from Twitter are represented as a collection of [`TwitterErrorCode`]s,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131036,"byte_end":131128,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"! contained in a [`TwitterErrors`] wrapper, and held in the `Error::TwitterError` enum variant.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131129,"byte_end":131226,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"! For more information, see the documentation for the [`Error`] enum.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131227,"byte_end":131298,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131299,"byte_end":131302,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! [`Error`]: enum.Error.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131303,"byte_end":131333,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"! [`TwitterErrorCode`]: struct.TwitterErrorCode.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131334,"byte_end":131388,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"! [`TwitterErrors`]: struct.TwitterErrors.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131389,"byte_end":131437,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131697,"byte_end":131703,"line_start":30,"line_end":30,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenient alias to a Result containing a local Error type\n","sig":null,"attributes":[{"value":"/ Convenient alias to a Result containing a local Error type","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131625,"byte_end":131687,"line_start":29,"line_end":29,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132029,"byte_end":132042,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"TwitterErrors","qualname":"::error::TwitterErrors","value":"TwitterErrors { errors }","parent":null,"children":[{"krate":0,"index":2625}],"decl_id":null,"docs":"Represents a collection of errors returned from a Twitter API call.","sig":null,"attributes":[{"value":"/Represents a collection of errors returned from a Twitter API call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131741,"byte_end":131811,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131812,"byte_end":131815,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/This is returned as part of [`Error::TwitterError`][] whenever Twitter has rejected a call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131816,"byte_end":131910,"line_start":34,"line_end":34,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131911,"byte_end":131914,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/[`Error::TwitterError`]: enum.Error.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":131915,"byte_end":131958,"line_start":36,"line_end":36,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2625},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132084,"byte_end":132090,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"name":"errors","qualname":"::error::TwitterErrors::errors","value":"std::vec::Vec<error::TwitterErrorCode>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":" A collection of errors\n","sig":null,"attributes":[{"value":"/ A collection of errors","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132049,"byte_end":132075,"line_start":39,"line_end":39,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132587,"byte_end":132603,"line_start":62,"line_end":62,"column_start":12,"column_end":28},"name":"TwitterErrorCode","qualname":"::error::TwitterErrorCode","value":"TwitterErrorCode { message, code }","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678}],"decl_id":null,"docs":"Represents a specific error returned from a Twitter API call.\n","sig":null,"attributes":[{"value":"/Represents a specific error returned from a Twitter API call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132470,"byte_end":132534,"line_start":60,"line_end":60,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132660,"byte_end":132667,"line_start":64,"line_end":64,"column_start":9,"column_end":16},"name":"message","qualname":"::error::TwitterErrorCode::message","value":"std::string::String","parent":{"krate":0,"index":2676},"children":[],"decl_id":null,"docs":"The error message returned by Twitter.\n","sig":null,"attributes":[{"value":"/The error message returned by Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132610,"byte_end":132651,"line_start":63,"line_end":63,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132910,"byte_end":132914,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"code","qualname":"::error::TwitterErrorCode::code","value":"i32","parent":{"krate":0,"index":2676},"children":[],"decl_id":null,"docs":"The numeric error code returned by Twitter. A list of possible error codes can be found in\nthe [API documentation][error-codes].","sig":null,"attributes":[{"value":"/The numeric error code returned by Twitter. A list of possible error codes can be found in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132681,"byte_end":132774,"line_start":65,"line_end":65,"column_start":5,"column_end":98}},{"value":"/the [API documentation][error-codes].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132779,"byte_end":132819,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132824,"byte_end":132827,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/[error-codes]: https://dev.twitter.com/overview/api/response-codes","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132832,"byte_end":132901,"line_start":68,"line_end":68,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133280,"byte_end":133290,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"MediaError","qualname":"::error::MediaError","value":"MediaError { code, name, message }","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"decl_id":null,"docs":" Represents an error that can occur during media processing.\n","sig":null,"attributes":[{"value":"/ Represents an error that can occur during media processing.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133087,"byte_end":133150,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"error(\"Media error {code} ({name}) - {message}\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133217,"byte_end":133268,"line_start":80,"line_end":80,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133353,"byte_end":133357,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"code","qualname":"::error::MediaError::code","value":"i32","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" A numeric error code assigned to the error.\n","sig":null,"attributes":[{"value":"/ A numeric error code assigned to the error.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133297,"byte_end":133344,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133413,"byte_end":133417,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"name":"name","qualname":"::error::MediaError::name","value":"std::string::String","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" A short name given to the error.\n","sig":null,"attributes":[{"value":"/ A short name given to the error.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133368,"byte_end":133404,"line_start":84,"line_end":84,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133479,"byte_end":133486,"line_start":87,"line_end":87,"column_start":9,"column_end":16},"name":"message","qualname":"::error::MediaError::message","value":"std::string::String","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" The full text of the error message.\n","sig":null,"attributes":[{"value":"/ The full text of the error message.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133431,"byte_end":133470,"line_start":86,"line_end":86,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133762,"byte_end":133768,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"BadUrl","qualname":"::error::Error::BadUrl","value":"Error::BadUrl","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"A URL was passed to a shortcut function that didn't match the method being called.\n","sig":null,"attributes":[{"value":"/A URL was passed to a shortcut function that didn't match the method being called.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133621,"byte_end":133706,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"error(\"URL given did not match API method\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133711,"byte_end":133757,"line_start":94,"line_end":94,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134129,"byte_end":134144,"line_start":101,"line_end":101,"column_start":5,"column_end":20},"name":"InvalidResponse","qualname":"::error::Error::InvalidResponse","value":"Error::InvalidResponse(&'static str, Option<String>)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The response from Twitter was formatted incorrectly or in an unexpected manner. The enclosed\nvalues are an explanatory string and, if applicable, the input that caused the error.","sig":null,"attributes":[{"value":"/The response from Twitter was formatted incorrectly or in an unexpected manner. The enclosed","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133774,"byte_end":133869,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/values are an explanatory string and, if applicable, the input that caused the error.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133874,"byte_end":133962,"line_start":97,"line_end":97,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133967,"byte_end":133970,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/This usually reflects a bug in this library, as it means I'm not parsing input right.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133975,"byte_end":134063,"line_start":99,"line_end":99,"column_start":5,"column_end":93}},{"value":"error(\"Invalid response received: {} ({:?})\", _0, _1)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134068,"byte_end":134124,"line_start":100,"line_end":100,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134529,"byte_end":134541,"line_start":108,"line_end":108,"column_start":5,"column_end":17},"name":"MissingValue","qualname":"::error::Error::MissingValue","value":"Error::MissingValue(&'static str)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The response from Twitter was missing an expected value.  The enclosed value was the\nexpected parameter.","sig":null,"attributes":[{"value":"/The response from Twitter was missing an expected value.  The enclosed value was the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134180,"byte_end":134267,"line_start":102,"line_end":102,"column_start":5,"column_end":92}},{"value":"/expected parameter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134272,"byte_end":134294,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134299,"byte_end":134302,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/This usually reflects a bug in this library, as it means I'm expecting a value that may not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134307,"byte_end":134401,"line_start":105,"line_end":105,"column_start":5,"column_end":99}},{"value":"/always be there, and need to update my parsing to reflect this.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134406,"byte_end":134472,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"error(\"Value missing from response: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134477,"byte_end":134524,"line_start":107,"line_end":107,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134763,"byte_end":134785,"line_start":112,"line_end":112,"column_start":5,"column_end":27},"name":"FutureAlreadyCompleted","qualname":"::error::Error::FutureAlreadyCompleted","value":"Error::FutureAlreadyCompleted","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The `Future` being polled has already returned a completed value (or another error). In\norder to retry the request, create the `Future` again.\n","sig":null,"attributes":[{"value":"/The `Future` being polled has already returned a completed value (or another error). In","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134561,"byte_end":134651,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/order to retry the request, create the `Future` again.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134656,"byte_end":134713,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"error(\"Future has already completed\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134718,"byte_end":134758,"line_start":111,"line_end":111,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134992,"byte_end":135004,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"name":"TwitterError","qualname":"::error::Error::TwitterError","value":"Error::TwitterError(Headers, TwitterErrors)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The response from Twitter returned an error structure instead of the expected response. The\nenclosed value was the response from Twitter.\n","sig":null,"attributes":[{"value":"/The response from Twitter returned an error structure instead of the expected response. The","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134791,"byte_end":134885,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/enclosed value was the response from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134890,"byte_end":134938,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"error(\"Errors returned by Twitter: {_1}\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":134943,"byte_end":134987,"line_start":115,"line_end":115,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135319,"byte_end":135328,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"RateLimit","qualname":"::error::Error::RateLimit","value":"Error::RateLimit(i32)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The response returned from Twitter contained an error indicating that the rate limit for\nthat method has been reached. The enclosed value is the Unix timestamp in UTC when the next\nrate-limit window will open.\n","sig":null,"attributes":[{"value":"/The response returned from Twitter contained an error indicating that the rate limit for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135034,"byte_end":135125,"line_start":117,"line_end":117,"column_start":5,"column_end":96}},{"value":"/that method has been reached. The enclosed value is the Unix timestamp in UTC when the next","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135130,"byte_end":135224,"line_start":118,"line_end":118,"column_start":5,"column_end":99}},{"value":"/rate-limit window will open.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135229,"byte_end":135260,"line_start":119,"line_end":119,"column_start":5,"column_end":36}},{"value":"error(\"Rate limit reached, hold until {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135265,"byte_end":135314,"line_start":120,"line_end":120,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135559,"byte_end":135569,"line_start":125,"line_end":125,"column_start":5,"column_end":15},"name":"MediaError","qualname":"::error::Error::MediaError","value":"Error::MediaError(MediaError)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"An attempt to upload a video or gif successfully uploaded the file, but failed in\npost-processing. The enclosed value contains the error message from Twitter.\n","sig":null,"attributes":[{"value":"/An attempt to upload a video or gif successfully uploaded the file, but failed in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135339,"byte_end":135423,"line_start":122,"line_end":122,"column_start":5,"column_end":89}},{"value":"/post-processing. The enclosed value contains the error message from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135428,"byte_end":135507,"line_start":123,"line_end":123,"column_start":5,"column_end":84}},{"value":"error(\"Error processing media: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135512,"byte_end":135554,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136013,"byte_end":136022,"line_start":134,"line_end":134,"column_start":5,"column_end":14},"name":"BadStatus","qualname":"::error::Error::BadStatus","value":"Error::BadStatus(hyper::StatusCode)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The response from Twitter gave a response code that indicated an error. The enclosed value\nwas the response code.","sig":null,"attributes":[{"value":"/The response from Twitter gave a response code that indicated an error. The enclosed value","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135595,"byte_end":135688,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/was the response code.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135693,"byte_end":135718,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135723,"byte_end":135726,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/This is only returned if Twitter did not also return an [error code][TwitterErrors] in the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135731,"byte_end":135824,"line_start":129,"line_end":129,"column_start":5,"column_end":98}},{"value":"/response body. That check is performed before examining the status code.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135829,"byte_end":135904,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135909,"byte_end":135912,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/[TwitterErrors]: struct.TwitterErrors.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135917,"byte_end":135962,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"error(\"Error status received: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":135967,"byte_end":136008,"line_start":133,"line_end":133,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136174,"byte_end":136182,"line_start":137,"line_end":137,"column_start":5,"column_end":13},"name":"NetError","qualname":"::error::Error::NetError","value":"Error::NetError(hyper::error::Error)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The web request experienced an error. The enclosed error was returned from hyper.\n","sig":null,"attributes":[{"value":"/The web request experienced an error. The enclosed error was returned from hyper.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136047,"byte_end":136131,"line_start":135,"line_end":135,"column_start":5,"column_end":89}},{"value":"error(\"Network error: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136136,"byte_end":136169,"line_start":136,"line_end":136,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136402,"byte_end":136410,"line_start":142,"line_end":142,"column_start":5,"column_end":13},"name":"TlsError","qualname":"::error::Error::TlsError","value":"Error::TlsError(native_tls::Error)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The `native_tls` implementation returned an error. The enclosed error was returned from\n`native_tls`.\n","sig":null,"attributes":[{"value":"/The `native_tls` implementation returned an error. The enclosed error was returned from","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136217,"byte_end":136307,"line_start":138,"line_end":138,"column_start":5,"column_end":95}},{"value":"/`native_tls`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136312,"byte_end":136328,"line_start":139,"line_end":139,"column_start":5,"column_end":21}},{"value":"cfg(feature = \"native_tls\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136333,"byte_end":136363,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"error(\"TLS error: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136368,"byte_end":136397,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136598,"byte_end":136605,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"IOError","qualname":"::error::Error::IOError","value":"Error::IOError(std::io::Error)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"An error was experienced while processing the response stream. The enclosed error was\nreturned from libstd.\n","sig":null,"attributes":[{"value":"/An error was experienced while processing the response stream. The enclosed error was","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136443,"byte_end":136531,"line_start":143,"line_end":143,"column_start":5,"column_end":93}},{"value":"/returned from libstd.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136536,"byte_end":136560,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"error(\"IO error: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136565,"byte_end":136593,"line_start":145,"line_end":145,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136798,"byte_end":136814,"line_start":150,"line_end":150,"column_start":5,"column_end":21},"name":"DeserializeError","qualname":"::error::Error::DeserializeError","value":"Error::DeserializeError(serde_json::Error)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"An error occurred while loading the JSON response. The enclosed error was returned from\n`serde_json`.\n","sig":null,"attributes":[{"value":"/An error occurred while loading the JSON response. The enclosed error was returned from","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136635,"byte_end":136725,"line_start":147,"line_end":147,"column_start":5,"column_end":95}},{"value":"/`serde_json`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136730,"byte_end":136746,"line_start":148,"line_end":148,"column_start":5,"column_end":21}},{"value":"error(\"JSON deserialize error: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136751,"byte_end":136793,"line_start":149,"line_end":149,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137011,"byte_end":137030,"line_start":154,"line_end":154,"column_start":5,"column_end":24},"name":"TimestampParseError","qualname":"::error::Error::TimestampParseError","value":"Error::TimestampParseError(chrono::ParseError)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"An error occurred when parsing a timestamp from Twitter. The enclosed error was returned\nfrom chrono.\n","sig":null,"attributes":[{"value":"/An error occurred when parsing a timestamp from Twitter. The enclosed error was returned","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136847,"byte_end":136938,"line_start":151,"line_end":151,"column_start":5,"column_end":96}},{"value":"/from chrono.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136943,"byte_end":136958,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"error(\"Error parsing timestamp: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":136963,"byte_end":137006,"line_start":153,"line_end":153,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137302,"byte_end":137320,"line_start":158,"line_end":158,"column_start":5,"column_end":23},"name":"TimerShutdownError","qualname":"::error::Error::TimerShutdownError","value":"Error::TimerShutdownError(tokio::time::Error)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"The tokio `Timer` instance was shut down while waiting on a timer, for example while waiting\nfor media to be processed by Twitter. The enclosed error was returned from `tokio`.\n","sig":null,"attributes":[{"value":"/The tokio `Timer` instance was shut down while waiting on a timer, for example while waiting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137064,"byte_end":137159,"line_start":155,"line_end":155,"column_start":5,"column_end":100}},{"value":"/for media to be processed by Twitter. The enclosed error was returned from `tokio`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137164,"byte_end":137250,"line_start":156,"line_end":156,"column_start":5,"column_end":91}},{"value":"error(\"Timer runtime shutdown: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137255,"byte_end":137297,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137686,"byte_end":137702,"line_start":165,"line_end":165,"column_start":5,"column_end":21},"name":"HeaderParseError","qualname":"::error::Error::HeaderParseError","value":"Error::HeaderParseError(hyper::header::ToStrError)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"An error occurred when reading the value from a response header. The enclused error was\nreturned from hyper.","sig":null,"attributes":[{"value":"/An error occurred when reading the value from a response header. The enclused error was","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137354,"byte_end":137444,"line_start":159,"line_end":159,"column_start":5,"column_end":95}},{"value":"/returned from hyper.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137449,"byte_end":137472,"line_start":160,"line_end":160,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137477,"byte_end":137480,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/This error should be considerably rare, but is included to ensure that egg-mode doesn't","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137485,"byte_end":137575,"line_start":162,"line_end":162,"column_start":5,"column_end":95}},{"value":"/panic if it receives malformed headers or the like.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137580,"byte_end":137634,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"error(\"Error decoding headers: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137639,"byte_end":137681,"line_start":164,"line_end":164,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":138096,"byte_end":138114,"line_start":172,"line_end":172,"column_start":5,"column_end":23},"name":"HeaderConvertError","qualname":"::error::Error::HeaderConvertError","value":"Error::HeaderConvertError(std::num::ParseIntError)","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":"An error occurred when converting a rate-limit header to an integer. The enclosed error was\nreturned from the standard library.","sig":null,"attributes":[{"value":"/An error occurred when converting a rate-limit header to an integer. The enclosed error was","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137743,"byte_end":137837,"line_start":166,"line_end":166,"column_start":5,"column_end":99}},{"value":"/returned from the standard library.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137842,"byte_end":137880,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137885,"byte_end":137888,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/This error should be considerably rare, but is included to ensure that egg-mode doesn't","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137893,"byte_end":137983,"line_start":169,"line_end":169,"column_start":5,"column_end":95}},{"value":"/panic if it receives malformed headers or the like.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":137988,"byte_end":138042,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"error(\"Error converting headers: {}\", _0)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":138047,"byte_end":138091,"line_start":171,"line_end":171,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133609,"byte_end":133614,"line_start":92,"line_end":92,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{BadUrl, InvalidResponse, MissingValue, FutureAlreadyCompleted, TwitterError, RateLimit, MediaError, BadStatus, NetError, TlsError, IOError, DeserializeError, TimestampParseError, TimerShutdownError, HeaderParseError, HeaderConvertError}","parent":null,"children":[{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2839}],"decl_id":null,"docs":" A set of errors that can occur when interacting with Twitter.\n","sig":null,"attributes":[{"value":"/ A set of errors that can occur when interacting with Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":133499,"byte_end":133564,"line_start":90,"line_end":90,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"list","qualname":"::list","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":560},{"krate":0,"index":645},{"krate":0,"index":2867},{"krate":0,"index":2877},{"krate":0,"index":2875},{"krate":0,"index":646},{"krate":0,"index":2879},{"krate":0,"index":2970},{"krate":0,"index":2968},{"krate":0,"index":2890},{"krate":0,"index":651},{"krate":0,"index":656}],"decl_id":null,"docs":" Structs and functions for working with lists.","sig":null,"attributes":[{"value":"! Structs and functions for working with lists.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146561,"byte_end":146610,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146611,"byte_end":146614,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! A list is a way to group accounts together, either as a way to highlight those accounts, or to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146615,"byte_end":146713,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"! view as a subset of or supplement to your main timeline. A list can be viewed in the same way","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146714,"byte_end":146811,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"! as the user's own timelines, loading in pages with the same [`Timeline`] interface.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146812,"byte_end":146899,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146900,"byte_end":146903,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [`Timeline`]: ../tweet/struct.Timeline.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146904,"byte_end":146951,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146952,"byte_end":146955,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Lists can be private or public. If a list if public, then other users can view the list's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":146956,"byte_end":147049,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"! members and the statuses of those members. (Statuses by protected accounts can still only be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147050,"byte_end":147146,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"! read by approved followers.)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147147,"byte_end":147179,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147180,"byte_end":147183,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! A list has \"members\", those accounts that are tracked as part of the list. When you call","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147184,"byte_end":147276,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"! `statuses` on a given list, you're looking at the recent posts by its members. Members can be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147277,"byte_end":147374,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"! added and removed either one at a time, or in batches. Protected accounts can only be added to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147375,"byte_end":147473,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"! a list if the user is an approved follower of that account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147474,"byte_end":147537,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147538,"byte_end":147541,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! A user can \"subscribe\" to another user's list as a sort of bookmark. Doing this places the list","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147542,"byte_end":147641,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"! in the \"lists\" section of their profile, and in the `subscriptions` and `list` sets available","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147642,"byte_end":147739,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"! from the API. Note that you don't need to subscribe to a list to view the statuses or users in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147740,"byte_end":147838,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"! it; you can do that to any public or personally owned list anyway. Subscribing merely allows","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147839,"byte_end":147935,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"! quick access in case you want to keep track of a list someone else made.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":147936,"byte_end":148012,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148013,"byte_end":148016,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! If a list is public, then all metadata about that list is public. Protected accounts can be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148017,"byte_end":148112,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"! seen as members of a list, but their statuses are still only visible to approved followers.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148113,"byte_end":148208,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"! None of the user-focused queries in this module assume that they're about the authenticated","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148209,"byte_end":148304,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"! user; they can all be called in reference to any user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148305,"byte_end":148363,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148364,"byte_end":148367,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ## Types","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148368,"byte_end":148380,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148381,"byte_end":148384,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! - `List`: This is the list metadata returned from Twitter when requesting information about the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148385,"byte_end":148484,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"!   list itself, or when performing some modification to one.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148485,"byte_end":148548,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"! - `ListID`: There are two ways to reference a list in the Twitter API: Either via a unique","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148549,"byte_end":148643,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"!   numeric ID, or with its \"slug\" combined with a reference to the user who created it. This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148644,"byte_end":148739,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"!   enum wraps that distinction into one type that all the methods take when they need to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148740,"byte_end":148831,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"!   reference a list like this. See the enum's documentation for details on how to create one.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148832,"byte_end":148928,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"! - `ListUpdate`: When updating a list's metadata, all the fields that can be updated are","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":148929,"byte_end":149020,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"!   optional, so the `update` function returns this builder struct so you don't have to provide","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149021,"byte_end":149118,"line_start":42,"line_end":42,"column_start":1,"column_end":98}},{"value":"!   all the parameters if you don't need to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149119,"byte_end":149165,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149166,"byte_end":149169,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149170,"byte_end":149186,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149187,"byte_end":149190,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ### Basic actions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149191,"byte_end":149212,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149213,"byte_end":149216,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! These functions perform basic write actions on lists as a whole. These all require write access","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149217,"byte_end":149316,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"! to the authenticated user's account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149317,"byte_end":149357,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149358,"byte_end":149361,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! - `create`/`delete`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149362,"byte_end":149385,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"! - `update` (see `ListUpdate` for full details)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149386,"byte_end":149436,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"! - `subscribe`/`unsubscribe`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149437,"byte_end":149468,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"! - `add_member`/`remove_member`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149469,"byte_end":149503,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"! - `add_member_list`/`remove_member_list`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149504,"byte_end":149548,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149549,"byte_end":149552,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ### Basic queries","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149553,"byte_end":149574,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149575,"byte_end":149578,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! These functions let you query information about lists, or related to lists somehow.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149579,"byte_end":149666,"line_start":60,"line_end":60,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149667,"byte_end":149670,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! - `ownerships`/`subscriptions`/`list`: Note that `list` will only return the most recent 100","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149671,"byte_end":149767,"line_start":62,"line_end":62,"column_start":1,"column_end":97}},{"value":"!   lists in the `ownerships`/`subscriptions` sets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149768,"byte_end":149821,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"! - `memberships`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149822,"byte_end":149841,"line_start":64,"line_end":64,"column_start":1,"column_end":20}},{"value":"! - `members`/`is_member`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149842,"byte_end":149869,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"! - `subscribers`/`is_subscriber`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149870,"byte_end":149905,"line_start":66,"line_end":66,"column_start":1,"column_end":36}},{"value":"! - `show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149906,"byte_end":149918,"line_start":67,"line_end":67,"column_start":1,"column_end":13}},{"value":"! - `statuses`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":149919,"byte_end":149935,"line_start":68,"line_end":68,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157266,"byte_end":157277,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"memberships","qualname":"::list::fun::memberships","value":"fn <T> (user: T, token: &auth::Token) -> CursorIter<ListCursor>","parent":null,"children":[],"decl_id":null,"docs":"Look up the lists the given user has been added to.","sig":null,"attributes":[{"value":"/Look up the lists the given user has been added to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157034,"byte_end":157088,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157089,"byte_end":157092,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/This function returns a `Stream` over the lists returned by Twitter. This method defaults to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157093,"byte_end":157188,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/reeturning 20 lists in a single network call; the maximum is 1000.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157189,"byte_end":157258,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158210,"byte_end":158214,"line_start":35,"line_end":35,"column_start":14,"column_end":18},"name":"list","qualname":"::list::fun::list","value":"fn <'id, T> (user: T, owned_first: bool, token: &auth::Token) -> Result<Response<Vec<List>>>","parent":null,"children":[],"decl_id":null,"docs":"Return up to 100 lists the given user is subscribed to, including those the user made\nthemselves.","sig":null,"attributes":[{"value":"/Return up to 100 lists the given user is subscribed to, including those the user made","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157497,"byte_end":157585,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/themselves.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157586,"byte_end":157600,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157601,"byte_end":157604,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/This function can be used to get a snapshot of a user's lists, but if they've created or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157605,"byte_end":157696,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/subscribed to a lot of lists, then the limitations of this function can get in the way.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157697,"byte_end":157787,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/If the `owned_first` parameter is `true`, Twitter will load the lists the given user created,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157788,"byte_end":157884,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/then the ones they've subscribed to, stopping when it reaches 100 lists. If it's `false`, then","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157885,"byte_end":157982,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/the lists are loaded in the opposite order.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":157983,"byte_end":158029,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158030,"byte_end":158033,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/If the user has more than 100 lists total like this, you'll need to call `ownerships` and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158034,"byte_end":158126,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/`subscriptions` separately to be able to properly load everything.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158127,"byte_end":158196,"line_start":34,"line_end":34,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158839,"byte_end":158852,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"subscriptions","qualname":"::list::fun::subscriptions","value":"fn <T> (user: T, token: &auth::Token) -> CursorIter<ListCursor>","parent":null,"children":[],"decl_id":null,"docs":"Look up the lists the given user is subscribed to, but not ones the user made themselves.","sig":null,"attributes":[{"value":"/Look up the lists the given user is subscribed to, but not ones the user made themselves.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158569,"byte_end":158661,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158662,"byte_end":158665,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/This function returns a `Stream` over the lists returned by Twitter. This method defaults to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158666,"byte_end":158761,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/reeturning 20 lists in a single network call; the maximum is 1000.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":158762,"byte_end":158831,"line_start":52,"line_end":52,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159299,"byte_end":159309,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"ownerships","qualname":"::list::fun::ownerships","value":"fn <T> (user: T, token: &auth::Token) -> CursorIter<ListCursor>","parent":null,"children":[],"decl_id":null,"docs":"Look up the lists created by the given user.","sig":null,"attributes":[{"value":"/Look up the lists created by the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159074,"byte_end":159121,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159122,"byte_end":159125,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/This function returns a `Stream` over the lists returned by Twitter. This method defaults to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159126,"byte_end":159221,"line_start":60,"line_end":60,"column_start":1,"column_end":96}},{"value":"/reeturning 20 lists in a single network call; the maximum is 1000.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159222,"byte_end":159291,"line_start":61,"line_end":61,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159583,"byte_end":159587,"line_start":68,"line_end":68,"column_start":14,"column_end":18},"name":"show","qualname":"::list::fun::show","value":"fn (list: ListID, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Look up information for a single list.\n","sig":null,"attributes":[{"value":"/Look up information for a single list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159528,"byte_end":159569,"line_start":67,"line_end":67,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160053,"byte_end":160060,"line_start":80,"line_end":80,"column_start":8,"column_end":15},"name":"members","qualname":"::list::fun::members","value":"fn <'a> (list: ListID, token: &auth::Token) -> CursorIter<UserCursor>","parent":null,"children":[],"decl_id":null,"docs":"Look up the users that have been added to the given list.","sig":null,"attributes":[{"value":"/Look up the users that have been added to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159815,"byte_end":159875,"line_start":76,"line_end":76,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159876,"byte_end":159879,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/This function returns a `Stream` over the users returned by Twitter. This method defaults to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159880,"byte_end":159975,"line_start":78,"line_end":78,"column_start":1,"column_end":96}},{"value":"/reeturning 20 users in a single network call; the maximum is 5000.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":159976,"byte_end":160045,"line_start":79,"line_end":79,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160500,"byte_end":160511,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"subscribers","qualname":"::list::fun::subscribers","value":"fn <'a> (list: ListID, token: &auth::Token) -> CursorIter<UserCursor>","parent":null,"children":[],"decl_id":null,"docs":"Look up the users that have subscribed to the given list.","sig":null,"attributes":[{"value":"/Look up the users that have subscribed to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160262,"byte_end":160322,"line_start":86,"line_end":86,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160323,"byte_end":160326,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/This function returns a `Stream` over the users returned by Twitter. This method defaults to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160327,"byte_end":160422,"line_start":88,"line_end":88,"column_start":1,"column_end":96}},{"value":"/reeturning 20 users in a single network call; the maximum is 5000.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160423,"byte_end":160492,"line_start":89,"line_end":89,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160795,"byte_end":160808,"line_start":97,"line_end":97,"column_start":14,"column_end":27},"name":"is_subscribed","qualname":"::list::fun::is_subscribed","value":"fn <'id, T> (user: T, list: ListID, token: &auth::Token) -> Result<Response<bool>>","parent":null,"children":[],"decl_id":null,"docs":"Check whether the given user is subscribed to the given list.\n","sig":null,"attributes":[{"value":"/Check whether the given user is subscribed to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":160717,"byte_end":160781,"line_start":96,"line_end":96,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":162013,"byte_end":162022,"line_start":128,"line_end":128,"column_start":14,"column_end":23},"name":"is_member","qualname":"::list::fun::is_member","value":"fn <'id, T> (user: T, list: ListID, token: &auth::Token) -> Result<Response<bool>>","parent":null,"children":[],"decl_id":null,"docs":"Check whether the given user has been added to the given list.\n","sig":null,"attributes":[{"value":"/Check whether the given user has been added to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":161934,"byte_end":161999,"line_start":127,"line_end":127,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163445,"byte_end":163453,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"statuses","qualname":"::list::fun::statuses","value":"fn (list: ListID, with_rts: bool, token: &auth::Token) -> tweet::Timeline","parent":null,"children":[],"decl_id":null,"docs":"Begin navigating the collection of tweets made by the users added to the given list.","sig":null,"attributes":[{"value":"/Begin navigating the collection of tweets made by the users added to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163146,"byte_end":163233,"line_start":157,"line_end":157,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163234,"byte_end":163237,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/The interface for loading statuses from a list is exactly the same as loading from a personal","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163238,"byte_end":163334,"line_start":159,"line_end":159,"column_start":1,"column_end":97}},{"value":"/timeline. see the [`Timeline`] docs for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163335,"byte_end":163386,"line_start":160,"line_end":160,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163387,"byte_end":163390,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/[`Timeline`]: ../tweet/struct.Timeline.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163391,"byte_end":163437,"line_start":162,"line_end":162,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163927,"byte_end":163937,"line_start":176,"line_end":176,"column_start":14,"column_end":24},"name":"add_member","qualname":"::list::fun::add_member","value":"fn <'id, T> (list: ListID, user: T, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Adds the given user to the given list.","sig":null,"attributes":[{"value":"/Adds the given user to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163721,"byte_end":163762,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163763,"byte_end":163766,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/Note that lists cannot have more than 5000 members.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163767,"byte_end":163821,"line_start":173,"line_end":173,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163822,"byte_end":163825,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/Upon success, the future returned by this function yields the freshly-modified list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":163826,"byte_end":163913,"line_start":175,"line_end":175,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164917,"byte_end":164932,"line_start":203,"line_end":203,"column_start":14,"column_end":29},"name":"add_member_list","qualname":"::list::fun::add_member_list","value":"fn <'id, T, I> (members: I, list: ListID, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Adds a set of users to the given list.","sig":null,"attributes":[{"value":"/Adds a set of users to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164257,"byte_end":164298,"line_start":190,"line_end":190,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164299,"byte_end":164302,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/The `members` param can be used the same way as the `accts` param in [`user::lookup`]. See that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164303,"byte_end":164401,"line_start":192,"line_end":192,"column_start":1,"column_end":99}},{"value":"/method's documentation for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164402,"byte_end":164440,"line_start":193,"line_end":193,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164441,"byte_end":164444,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/[`user::lookup`]: ../user/fn.lookup.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164445,"byte_end":164488,"line_start":195,"line_end":195,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164489,"byte_end":164492,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/Note that you cannot add more than 100 members to a list at a time, and that lists in general","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164493,"byte_end":164589,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/cannot have more than 5000 members.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164590,"byte_end":164628,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164629,"byte_end":164632,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/When using this method, take care not to add and remove many members in rapid succession; there","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164633,"byte_end":164731,"line_start":200,"line_end":200,"column_start":1,"column_end":99}},{"value":"/are no guarantees that the result of a `add_member_list` or `remove_member_list` will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164732,"byte_end":164823,"line_start":201,"line_end":201,"column_start":1,"column_end":92}},{"value":"/immediately available for a corresponding removal or addition, respectively.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":164824,"byte_end":164903,"line_start":202,"line_end":202,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":165768,"byte_end":165781,"line_start":238,"line_end":238,"column_start":14,"column_end":27},"name":"remove_member","qualname":"::list::fun::remove_member","value":"fn <'id, T> (list: ListID, user: T, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Removes the given user from the given list.\n","sig":null,"attributes":[{"value":"/Removes the given user from the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":165708,"byte_end":165754,"line_start":237,"line_end":237,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166701,"byte_end":166719,"line_start":264,"line_end":264,"column_start":14,"column_end":32},"name":"remove_member_list","qualname":"::list::fun::remove_member_list","value":"fn <T, I> (members: I, list: ListID, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Removes a set of users from the given list.","sig":null,"attributes":[{"value":"/Removes a set of users from the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166111,"byte_end":166157,"line_start":252,"line_end":252,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166158,"byte_end":166161,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/The `members` param can be used the same way as the `accts` param in [`user::lookup`]. See that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166162,"byte_end":166260,"line_start":254,"line_end":254,"column_start":1,"column_end":99}},{"value":"/method's documentation for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166261,"byte_end":166299,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166300,"byte_end":166303,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/[`user::lookup`]: ../user/fn.lookup.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166304,"byte_end":166347,"line_start":257,"line_end":257,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166348,"byte_end":166351,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/This method is limited to removing 100 members at a time.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166352,"byte_end":166412,"line_start":259,"line_end":259,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166413,"byte_end":166416,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/When using this method, take care not to add and remove many members in rapid succession; there","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166417,"byte_end":166515,"line_start":261,"line_end":261,"column_start":1,"column_end":99}},{"value":"/are no guarantees that the result of a `add_member_list` or `remove_member_list` will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166516,"byte_end":166607,"line_start":262,"line_end":262,"column_start":1,"column_end":92}},{"value":"/immediately available for a corresponding removal or addition, respectively.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":166608,"byte_end":166687,"line_start":263,"line_end":263,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":167784,"byte_end":167790,"line_start":303,"line_end":303,"column_start":14,"column_end":20},"name":"create","qualname":"::list::fun::create","value":"fn (name: String, public: bool, desc: Option<String>, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Creates a list, with the given name, visibility, and description.","sig":null,"attributes":[{"value":"/Creates a list, with the given name, visibility, and description.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":167493,"byte_end":167561,"line_start":298,"line_end":298,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":167562,"byte_end":167565,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/The new list is owned by the authenticated user, and its slug can be created with their handle","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":167566,"byte_end":167663,"line_start":300,"line_end":300,"column_start":1,"column_end":98}},{"value":"/and the name given to `name`. Twitter places an upper limit on 1000 lists owned by a single","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":167664,"byte_end":167758,"line_start":301,"line_end":301,"column_start":1,"column_end":95}},{"value":"/account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":167759,"byte_end":167770,"line_start":302,"line_end":302,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168300,"byte_end":168306,"line_start":322,"line_end":322,"column_start":14,"column_end":20},"name":"delete","qualname":"::list::fun::delete","value":"fn (list: ListID, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Deletes the given list.","sig":null,"attributes":[{"value":"/Deletes the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168202,"byte_end":168228,"line_start":319,"line_end":319,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168229,"byte_end":168232,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/The authenticated user must have created the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168233,"byte_end":168286,"line_start":321,"line_end":321,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168751,"byte_end":168760,"line_start":334,"line_end":334,"column_start":14,"column_end":23},"name":"subscribe","qualname":"::list::fun::subscribe","value":"fn (list: ListID, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Subscribes the authenticated user to the given list.","sig":null,"attributes":[{"value":"/Subscribes the authenticated user to the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168537,"byte_end":168592,"line_start":330,"line_end":330,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168593,"byte_end":168596,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/Subscribing to a list is a way to make it available in the \"Lists\" section of a user's profile","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168597,"byte_end":168694,"line_start":332,"line_end":332,"column_start":1,"column_end":98}},{"value":"/without having to create it themselves.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168695,"byte_end":168737,"line_start":333,"line_end":333,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":169067,"byte_end":169078,"line_start":343,"line_end":343,"column_start":14,"column_end":25},"name":"unsubscribe","qualname":"::list::fun::unsubscribe","value":"fn (list: ListID, token: &auth::Token) -> Result<Response<List>>","parent":null,"children":[],"decl_id":null,"docs":"Unsubscribes the authenticated user from the given list.\n","sig":null,"attributes":[{"value":"/Unsubscribes the authenticated user from the given list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":168994,"byte_end":169053,"line_start":342,"line_end":342,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":169500,"byte_end":169506,"line_start":356,"line_end":356,"column_start":8,"column_end":14},"name":"update","qualname":"::list::fun::update","value":"fn (list: ListID) -> ListUpdate","parent":null,"children":[],"decl_id":null,"docs":"Begins updating a list's metadata.","sig":null,"attributes":[{"value":"/Begins updating a list's metadata.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":169314,"byte_end":169351,"line_start":351,"line_end":351,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":169352,"byte_end":169355,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/This method is exposed using a builder struct. See the [`ListUpdate`] docs for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":169356,"byte_end":169446,"line_start":353,"line_end":353,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":169447,"byte_end":169450,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/[`ListUpdate`]: struct.ListUpdate.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\fun.rs","byte_start":169451,"byte_end":169492,"line_start":355,"line_end":355,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151414,"byte_end":151418,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"Slug","qualname":"::list::ListID::Slug","value":"ListID::Slug(user::UserID, CowStr)","parent":{"krate":0,"index":2867},"children":[],"decl_id":null,"docs":"Referring via the list's owner and its \"slug\" or name.\n","sig":null,"attributes":[{"value":"/Referring via the list's owner and its \"slug\" or name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151352,"byte_end":151409,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151490,"byte_end":151492,"line_start":107,"line_end":107,"column_start":5,"column_end":7},"name":"ID","qualname":"::list::ListID::ID","value":"ListID::ID(u64)","parent":{"krate":0,"index":2867},"children":[],"decl_id":null,"docs":"Referring via the list's numeric ID.\n","sig":null,"attributes":[{"value":"/Referring via the list's numeric ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151446,"byte_end":151485,"line_start":106,"line_end":106,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151339,"byte_end":151345,"line_start":103,"line_end":103,"column_start":10,"column_end":16},"name":"ListID","qualname":"::list::ListID","value":"ListID::{Slug, ID}","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2872}],"decl_id":null,"docs":" Convenience enum to refer to a list via its owner and name or via numeric ID.","sig":null,"attributes":[{"value":"/ Convenience enum to refer to a list via its owner and name or via numeric ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150061,"byte_end":150142,"line_start":79,"line_end":79,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150143,"byte_end":150146,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Any API call that needs to reference a specific list has a set of parameters that collectively","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150147,"byte_end":150245,"line_start":81,"line_end":81,"column_start":1,"column_end":99}},{"value":"/ refer to it. Not only do lists have a unique numeric ID that refers to them, they have a \"slug\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150246,"byte_end":150345,"line_start":82,"line_end":82,"column_start":1,"column_end":100}},{"value":"/ that stands in as the list's unique name. This slug is only unique when taken in combination","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150346,"byte_end":150442,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/ with the user that created it, though, so this leads to the raw API call having parameters that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150443,"byte_end":150542,"line_start":84,"line_end":84,"column_start":1,"column_end":100}},{"value":"/ refer to the user by screen name or ID, or the list as a whole by this pair of slug parameters","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150543,"byte_end":150641,"line_start":85,"line_end":85,"column_start":1,"column_end":99}},{"value":"/ or the single ID parameter. egg-mode wraps this pattern with this `ListID` enum.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150642,"byte_end":150726,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150727,"byte_end":150730,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Because the slug is formed from two variables instead of one, this enum foregoes the many","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150731,"byte_end":150824,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/ `From` implementations that `UserID` has and instead opts for two creation functions. If you","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150825,"byte_end":150921,"line_start":89,"line_end":89,"column_start":1,"column_end":97}},{"value":"/ have a user/name combo, use `ListID::from_slug` when looking for the list. If you have the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":150922,"byte_end":151016,"line_start":90,"line_end":90,"column_start":1,"column_end":95}},{"value":"/ list's ID instead, then you can use `ListID::from_id`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151017,"byte_end":151075,"line_start":91,"line_end":91,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151076,"byte_end":151079,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151080,"byte_end":151093,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151094,"byte_end":151097,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151098,"byte_end":151109,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ use egg_mode::list::ListID;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151110,"byte_end":151141,"line_start":96,"line_end":96,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151142,"byte_end":151145,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ //The following two ListIDs refer to the same list:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151146,"byte_end":151201,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"/ let slug = ListID::from_slug(\"Twitter\", \"support\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151202,"byte_end":151257,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ let id = ListID::from_id(99924643);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151258,"byte_end":151297,"line_start":100,"line_end":100,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151298,"byte_end":151305,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151587,"byte_end":151596,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"from_slug","qualname":"<ListID>::from_slug","value":"fn <T> (owner: T, list_name: impl Into<CowStr>) -> ListID","parent":null,"children":[],"decl_id":null,"docs":"Make a new `ListID` by supplying its owner and name.\n","sig":null,"attributes":[{"value":"/Make a new `ListID` by supplying its owner and name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151520,"byte_end":151575,"line_start":111,"line_end":111,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151799,"byte_end":151806,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"from_id","qualname":"<ListID>::from_id","value":"fn (list_id: u64) -> ListID","parent":null,"children":[],"decl_id":null,"docs":"Make a new `ListID` by supplying its numeric ID.\n","sig":null,"attributes":[{"value":"/Make a new `ListID` by supplying its numeric ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151736,"byte_end":151787,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153018,"byte_end":153022,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"List","qualname":"::list::List","value":"List { name, user, slug, id, subscriber_count, member_count, full_name, description, uri, created_at }","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889}],"decl_id":null,"docs":" Represents the metadata for a list.","sig":null,"attributes":[{"value":"/ Represents the metadata for a list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151870,"byte_end":151909,"line_start":122,"line_end":122,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151910,"byte_end":151913,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Because of the myriad ways to reference a list, there are a few seemingly-redundant fields on","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151914,"byte_end":152011,"line_start":124,"line_end":124,"column_start":1,"column_end":98}},{"value":"/ here. It's worthwhile to understand all the referential fields:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152012,"byte_end":152079,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152080,"byte_end":152083,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ * `name` is the human-readable name of the list. Notably, this can contain spaces and uppercase","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152084,"byte_end":152183,"line_start":127,"line_end":127,"column_start":1,"column_end":100}},{"value":"/   letters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152184,"byte_end":152198,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/ * `slug` is simply `name` converted to a format that can be put into a URL and used to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152199,"byte_end":152289,"line_start":129,"line_end":129,"column_start":1,"column_end":91}},{"value":"/   reference the list for API calls.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152290,"byte_end":152329,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ * `full_name` is how you'd link the list as a @mention, in the form `@screen_name/slug`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152330,"byte_end":152422,"line_start":131,"line_end":131,"column_start":1,"column_end":93}},{"value":"/ * `id` is the numeric ID, which can be used with `ListID::from_id` to make a `ListID` for the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152423,"byte_end":152520,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/   list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152521,"byte_end":152532,"line_start":133,"line_end":133,"column_start":1,"column_end":12}},{"value":"/ * `uri` is how you assemble a link to the list. Start with `\"https://twitter.com\"`, concat this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152533,"byte_end":152632,"line_start":134,"line_end":134,"column_start":1,"column_end":100}},{"value":"/   field to the end, and you have a full URL. Note that the field does start with its own slash.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152633,"byte_end":152732,"line_start":135,"line_end":135,"column_start":1,"column_end":100}},{"value":"/ * `user` is a mostly-populated `TwitterUser` corresponding to the creator of the list. If you","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152733,"byte_end":152830,"line_start":136,"line_end":136,"column_start":1,"column_end":98}},{"value":"/   combine `user.screen_name` or `user.id` with `slug`, you can send them to `ListID::from_slug`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152831,"byte_end":152930,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/   to make a `ListID` for the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":152931,"byte_end":152969,"line_start":138,"line_end":138,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153062,"byte_end":153066,"line_start":142,"line_end":142,"column_start":9,"column_end":13},"name":"name","qualname":"::list::List::name","value":"std::string::String","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The name of the list.\n","sig":null,"attributes":[{"value":"/The name of the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153029,"byte_end":153053,"line_start":141,"line_end":141,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153122,"byte_end":153126,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"user","qualname":"::list::List::user","value":"user::TwitterUser","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The user who created the list.\n","sig":null,"attributes":[{"value":"/The user who created the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153080,"byte_end":153113,"line_start":143,"line_end":143,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2882},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153255,"byte_end":153259,"line_start":146,"line_end":146,"column_start":9,"column_end":13},"name":"slug","qualname":"::list::List::slug","value":"std::string::String","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The \"slug\" of a list, that can be combined with its creator's `UserID` to refer to the list.\n","sig":null,"attributes":[{"value":"/The \"slug\" of a list, that can be combined with its creator's `UserID` to refer to the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153151,"byte_end":153246,"line_start":145,"line_end":145,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153312,"byte_end":153314,"line_start":148,"line_end":148,"column_start":9,"column_end":11},"name":"id","qualname":"::list::List::id","value":"u64","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The numeric ID of the list.\n","sig":null,"attributes":[{"value":"/The numeric ID of the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153273,"byte_end":153303,"line_start":147,"line_end":147,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153456,"byte_end":153472,"line_start":151,"line_end":151,"column_start":9,"column_end":25},"name":"subscriber_count","qualname":"::list::List::subscriber_count","value":"u64","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The number of accounts \"subscribed\" to the list, for whom it will appear in their collection\nof available lists.\n","sig":null,"attributes":[{"value":"/The number of accounts \"subscribed\" to the list, for whom it will appear in their collection","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153325,"byte_end":153420,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/of available lists.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153425,"byte_end":153447,"line_start":150,"line_end":150,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153536,"byte_end":153548,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"member_count","qualname":"::list::List::member_count","value":"u64","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The number of accounts added to the list.\n","sig":null,"attributes":[{"value":"/The number of accounts added to the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153483,"byte_end":153527,"line_start":152,"line_end":152,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153748,"byte_end":153757,"line_start":156,"line_end":156,"column_start":9,"column_end":18},"name":"full_name","qualname":"::list::List::full_name","value":"std::string::String","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The full name of the list, preceded by `@`, that can be used to link to the list as part of\na tweet, direct message, or other place on Twitter where @mentions are parsed.\n","sig":null,"attributes":[{"value":"/The full name of the list, preceded by `@`, that can be used to link to the list as part of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153559,"byte_end":153653,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/a tweet, direct message, or other place on Twitter where @mentions are parsed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153658,"byte_end":153739,"line_start":155,"line_end":155,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153838,"byte_end":153849,"line_start":158,"line_end":158,"column_start":9,"column_end":20},"name":"description","qualname":"::list::List::description","value":"std::string::String","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The description of the list, as entered by its creator.\n","sig":null,"attributes":[{"value":"/The description of the list, as entered by its creator.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153771,"byte_end":153829,"line_start":157,"line_end":157,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154003,"byte_end":154006,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"name":"uri","qualname":"::list::List::uri","value":"std::string::String","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"The full name of the list, preceded by `/`, that can be preceded with `https://twitter.com`\nto create a link to the list.\n","sig":null,"attributes":[{"value":"/The full name of the list, preceded by `/`, that can be preceded with `https://twitter.com`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153863,"byte_end":153957,"line_start":159,"line_end":159,"column_start":5,"column_end":99}},{"value":"/to create a link to the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":153962,"byte_end":153994,"line_start":160,"line_end":160,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154131,"byte_end":154141,"line_start":164,"line_end":164,"column_start":9,"column_end":19},"name":"created_at","qualname":"::list::List::created_at","value":"chrono::datetime::DateTime<chrono::offset::utc::Utc>","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"UTC timestamp of when the list was created.\n","sig":null,"attributes":[{"value":"/UTC timestamp of when the list was created.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154020,"byte_end":154066,"line_start":162,"line_end":162,"column_start":5,"column_end":51}},{"value":"serde(deserialize_with = \"deserialize_datetime\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154071,"byte_end":154122,"line_start":163,"line_end":163,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154894,"byte_end":154904,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"ListUpdate","qualname":"::list::ListUpdate","value":"ListUpdate {  }","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" Represents a pending update to a list's metadata.","sig":null,"attributes":[{"value":"/ Represents a pending update to a list's metadata.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154177,"byte_end":154230,"line_start":167,"line_end":167,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154231,"byte_end":154234,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ As updating a list could modify each field independently, this operation is exposed as a builder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154235,"byte_end":154335,"line_start":169,"line_end":169,"column_start":1,"column_end":101}},{"value":"/ struct. To update any field, call the method named after that field, then call `send` to send","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154336,"byte_end":154433,"line_start":170,"line_end":170,"column_start":1,"column_end":98}},{"value":"/ the update to Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154434,"byte_end":154460,"line_start":171,"line_end":171,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154461,"byte_end":154464,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154465,"byte_end":154478,"line_start":173,"line_end":173,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154479,"byte_end":154482,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154483,"byte_end":154501,"line_start":175,"line_end":175,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154502,"byte_end":154528,"line_start":176,"line_end":176,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154529,"byte_end":154549,"line_start":177,"line_end":177,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154550,"byte_end":154573,"line_start":178,"line_end":178,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154574,"byte_end":154616,"line_start":179,"line_end":179,"column_start":1,"column_end":43}},{"value":"/ use egg_mode::list::{self, ListID};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154617,"byte_end":154656,"line_start":180,"line_end":180,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154657,"byte_end":154660,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ //remember, you can only update a list if you own it!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154661,"byte_end":154718,"line_start":182,"line_end":182,"column_start":1,"column_end":58}},{"value":"/ let update = list::update(ListID::from_slug(\"Twitter\", \"support\"));","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154719,"byte_end":154790,"line_start":183,"line_end":183,"column_start":1,"column_end":72}},{"value":"/ let list = update.name(\"Official Support\").send(&token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154791,"byte_end":154866,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154867,"byte_end":154874,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":154875,"byte_end":154882,"line_start":186,"line_end":186,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155072,"byte_end":155076,"line_start":196,"line_end":196,"column_start":12,"column_end":16},"name":"name","qualname":"<ListUpdate>::name","value":"fn (self, name: impl Into<String>) -> ListUpdate","parent":null,"children":[],"decl_id":null,"docs":"Updates the name of the list.\n","sig":null,"attributes":[{"value":"/Updates the name of the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155028,"byte_end":155060,"line_start":195,"line_end":195,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155269,"byte_end":155275,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"public","qualname":"<ListUpdate>::public","value":"fn (self, public: bool) -> ListUpdate","parent":null,"children":[],"decl_id":null,"docs":"Sets whether the list is public.\n","sig":null,"attributes":[{"value":"/Sets whether the list is public.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155222,"byte_end":155257,"line_start":203,"line_end":203,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155458,"byte_end":155462,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"desc","qualname":"<ListUpdate>::desc","value":"fn (self, desc: String) -> ListUpdate","parent":null,"children":[],"decl_id":null,"docs":"Updates the description of the list.\n","sig":null,"attributes":[{"value":"/Updates the description of the list.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155407,"byte_end":155446,"line_start":211,"line_end":211,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155647,"byte_end":155651,"line_start":220,"line_end":220,"column_start":18,"column_end":22},"name":"send","qualname":"<ListUpdate>::send","value":"fn (self, token: &auth::Token) -> Result<Response<List>, crate::error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Sends the update request to Twitter.\n","sig":null,"attributes":[{"value":"/Sends the update request to Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155590,"byte_end":155629,"line_start":219,"line_end":219,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"media","qualname":"::media","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":2972},{"krate":0,"index":2990},{"krate":0,"index":2988},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2992},{"krate":0,"index":3044},{"krate":0,"index":3001},{"krate":0,"index":3046},{"krate":0,"index":3098},{"krate":0,"index":3051},{"krate":0,"index":689},{"krate":0,"index":3100},{"krate":0,"index":3149},{"krate":0,"index":3104},{"krate":0,"index":3151},{"krate":0,"index":3158},{"krate":0,"index":3156},{"krate":0,"index":3154},{"krate":0,"index":3160},{"krate":0,"index":3166},{"krate":0,"index":3164},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":3168},{"krate":0,"index":3186},{"krate":0,"index":3185},{"krate":0,"index":3183},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3175},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708}],"decl_id":null,"docs":" Functionality to upload images, GIFs, and videos that can be attached to tweets.","sig":null,"attributes":[{"value":"! Functionality to upload images, GIFs, and videos that can be attached to tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":169645,"byte_end":169729,"line_start":1,"line_end":1,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":169730,"byte_end":169733,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Tweet media is uploaded separately from the act of posting the tweet itself.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":169734,"byte_end":169814,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! In order to attach an image to a new tweet, you need to upload it first,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":169815,"byte_end":169891,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! then take the Media ID that Twitter generates and reference that when posting the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":169892,"byte_end":169984,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"! The media id is returned as part of the result of a call to [`upload_media`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":169985,"byte_end":170066,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170067,"byte_end":170070,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Here's a basic example of uploading an image and attaching to a tweet:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170071,"byte_end":170145,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170146,"byte_end":170149,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170150,"byte_end":170168,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"! # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170169,"byte_end":170195,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170196,"byte_end":170216,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"! # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170217,"byte_end":170282,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"! # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170283,"byte_end":170325,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"! use egg_mode::media::{upload_media, media_types};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170326,"byte_end":170379,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"! use egg_mode::tweet::DraftTweet;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170380,"byte_end":170416,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170417,"byte_end":170420,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! let image = b\"some image bytes\"; //pretend we loaded an image file into this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170421,"byte_end":170501,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! let handle = upload_media(image, &media_types::image_png(), &token).await?;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170502,"byte_end":170581,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"! let draft = DraftTweet::new(\"Hey, check out this cute cat!\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170582,"byte_end":170647,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"! draft.add_media(handle.id);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170648,"byte_end":170679,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"! let tweet = draft.send(&token).await?;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170680,"byte_end":170722,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170723,"byte_end":170730,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170731,"byte_end":170738,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171447,"byte_end":171458,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"name":"media_types","qualname":"::media::media_types","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"decl_id":null,"docs":" A collection of convenience functions that return media types accepted by Twitter.","sig":null,"attributes":[{"value":"/ A collection of convenience functions that return media types accepted by Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":170919,"byte_end":171005,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171006,"byte_end":171009,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ These are convenience types that can be handed to [`upload_media`] to set the right","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171010,"byte_end":171097,"line_start":39,"line_end":39,"column_start":1,"column_end":88}},{"value":"/ media type of a piece of media. The functions in the module correspond to media types","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171098,"byte_end":171187,"line_start":40,"line_end":40,"column_start":1,"column_end":90}},{"value":"/ that Twitter is known to accept.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171188,"byte_end":171224,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171225,"byte_end":171228,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Note that using `image_gif` and `video_mp4` will automatically set the upload's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171229,"byte_end":171312,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"/ `media_category` to `tweet_gif` and `tweet_video` respectively, allowing","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171313,"byte_end":171389,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ larger file sizes and extra processing time.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171390,"byte_end":171438,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171521,"byte_end":171530,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"image_png","qualname":"::media::media_types::image_png","value":"fn () -> Mime","parent":null,"children":[],"decl_id":null,"docs":" PNG images.\n","sig":null,"attributes":[{"value":"/ PNG images.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171494,"byte_end":171509,"line_start":49,"line_end":49,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171605,"byte_end":171614,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"image_jpg","qualname":"::media::media_types::image_jpg","value":"fn () -> Mime","parent":null,"children":[],"decl_id":null,"docs":" JPG images.\n","sig":null,"attributes":[{"value":"/ JPG images.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171578,"byte_end":171593,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171691,"byte_end":171701,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"image_webp","qualname":"::media::media_types::image_webp","value":"fn () -> Mime","parent":null,"children":[],"decl_id":null,"docs":" WEBP images.\n","sig":null,"attributes":[{"value":"/ WEBP images.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171663,"byte_end":171679,"line_start":59,"line_end":59,"column_start":5,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171799,"byte_end":171808,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"image_gif","qualname":"::media::media_types::image_gif","value":"fn () -> Mime","parent":null,"children":[],"decl_id":null,"docs":" Animated GIF images.\n","sig":null,"attributes":[{"value":"/ Animated GIF images.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171763,"byte_end":171787,"line_start":64,"line_end":64,"column_start":5,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171883,"byte_end":171892,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"video_mp4","qualname":"::media::media_types::video_mp4","value":"fn () -> Mime","parent":null,"children":[],"decl_id":null,"docs":" MP4 videos.\n","sig":null,"attributes":[{"value":"/ MP4 videos.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171856,"byte_end":171871,"line_start":69,"line_end":69,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172130,"byte_end":172137,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"Pending","qualname":"::media::ProgressInfo::Pending","value":"ProgressInfo::Pending(u64)","parent":{"krate":0,"index":2972},"children":[],"decl_id":null,"docs":" Video is pending for processing. Contains number of seconds after which to check.\n","sig":null,"attributes":[{"value":"/ Video is pending for processing. Contains number of seconds after which to check.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172040,"byte_end":172125,"line_start":78,"line_end":78,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172232,"byte_end":172242,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::media::ProgressInfo::InProgress","value":"ProgressInfo::InProgress(u64)","parent":{"krate":0,"index":2972},"children":[],"decl_id":null,"docs":" Video is beeing processed. Contains number of seconds after which to check.\n","sig":null,"attributes":[{"value":"/ Video is beeing processed. Contains number of seconds after which to check.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172148,"byte_end":172227,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172305,"byte_end":172311,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"name":"Failed","qualname":"::media::ProgressInfo::Failed","value":"ProgressInfo::Failed(error::MediaError)","parent":{"krate":0,"index":2972},"children":[],"decl_id":null,"docs":" Video's processing failed. Contains reason.\n","sig":null,"attributes":[{"value":"/ Video's processing failed. Contains reason.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172253,"byte_end":172300,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172417,"byte_end":172424,"line_start":85,"line_end":85,"column_start":5,"column_end":12},"name":"Success","qualname":"::media::ProgressInfo::Success","value":"ProgressInfo::Success","parent":{"krate":0,"index":2972},"children":[],"decl_id":null,"docs":" Video's processing is finished. RawMedia can be used in other API calls.\n","sig":null,"attributes":[{"value":"/ Video's processing is finished. RawMedia can be used in other API calls.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172336,"byte_end":172412,"line_start":84,"line_end":84,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172021,"byte_end":172033,"line_start":77,"line_end":77,"column_start":10,"column_end":22},"name":"ProgressInfo","qualname":"::media::ProgressInfo","value":"ProgressInfo::{Pending, InProgress, Failed, Success}","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2982}],"decl_id":null,"docs":" Upload progress info.\n","sig":null,"attributes":[{"value":"/ Upload progress info.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":171951,"byte_end":171976,"line_start":75,"line_end":75,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174358,"byte_end":174365,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"MediaId","qualname":"::media::MediaId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque type representing a media id.\n","sig":null,"attributes":[{"value":"/ An opaque type representing a media id.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174303,"byte_end":174346,"line_start":148,"line_end":148,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174464,"byte_end":174475,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"MediaHandle","qualname":"::media::MediaHandle","value":"MediaHandle { id, expires_at, progress }","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163}],"decl_id":null,"docs":" A handle representing uploaded media.\n","sig":null,"attributes":[{"value":"/ A handle representing uploaded media.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174387,"byte_end":174428,"line_start":151,"line_end":151,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174560,"byte_end":174562,"line_start":155,"line_end":155,"column_start":9,"column_end":11},"name":"id","qualname":"::media::MediaHandle::id","value":"media::MediaId","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" ID that can be used in API calls (e.g. to attach media to tweet).\n","sig":null,"attributes":[{"value":"/ ID that can be used in API calls (e.g. to attach media to tweet).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174482,"byte_end":174551,"line_start":154,"line_end":154,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174648,"byte_end":174658,"line_start":157,"line_end":157,"column_start":9,"column_end":19},"name":"expires_at","qualname":"::media::MediaHandle::expires_at","value":"std::time::Instant","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" Number of second the media can be used in other API calls.\n","sig":null,"attributes":[{"value":"/ Number of second the media can be used in other API calls.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174577,"byte_end":174639,"line_start":156,"line_end":156,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174759,"byte_end":174767,"line_start":159,"line_end":159,"column_start":9,"column_end":17},"name":"progress","qualname":"::media::MediaHandle::progress","value":"std::option::Option<media::ProgressInfo>","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" Progress information. If present determines whether RawMedia can be used.\n","sig":null,"attributes":[{"value":"/ Progress information. If present determines whether RawMedia can be used.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174673,"byte_end":174750,"line_start":158,"line_end":158,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175381,"byte_end":175389,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<MediaHandle>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Media uploads expire after a certain amount of time\n This method returns true if the upload is still valid\n and can therefore e.g. be attached to a tweet\n","sig":null,"attributes":[{"value":"/ Media uploads expire after a certain amount of time","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175198,"byte_end":175253,"line_start":175,"line_end":175,"column_start":5,"column_end":60}},{"value":"/ This method returns true if the upload is still valid","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175258,"byte_end":175315,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ and can therefore e.g. be attached to a tweet","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175320,"byte_end":175369,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":176548,"byte_end":176560,"line_start":217,"line_end":217,"column_start":14,"column_end":26},"name":"upload_media","qualname":"::media::upload_media","value":"fn (data: &[u8], media_type: &mime::Mime, token: &auth::Token) -> error::Result<MediaHandle>","parent":null,"children":[],"decl_id":null,"docs":" Upload media to the server.","sig":null,"attributes":[{"value":"/ Upload media to the server.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":176258,"byte_end":176289,"line_start":211,"line_end":211,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":176290,"byte_end":176293,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ The upload proceeds in 1MB chunks until completed. After completion,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":176294,"byte_end":176366,"line_start":213,"line_end":213,"column_start":1,"column_end":73}},{"value":"/ be sure to check the status of the uploaded media with [`get_status`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":176367,"byte_end":176441,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/ Twitter often needs time to post-process media before it can be attached","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":176442,"byte_end":176518,"line_start":215,"line_end":215,"column_start":1,"column_end":77}},{"value":"/ to a tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":176519,"byte_end":176534,"line_start":216,"line_end":216,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":177975,"byte_end":177985,"line_start":254,"line_end":254,"column_start":14,"column_end":24},"name":"get_status","qualname":"::media::get_status","value":"fn (media_id: MediaId, token: &auth::Token) -> error::Result<MediaHandle>","parent":null,"children":[],"decl_id":null,"docs":" Check the status of uploaded media\n","sig":null,"attributes":[{"value":"/ Check the status of uploaded media","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":177923,"byte_end":177961,"line_start":253,"line_end":253,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":178462,"byte_end":178474,"line_start":267,"line_end":267,"column_start":14,"column_end":26},"name":"set_metadata","qualname":"::media::set_metadata","value":"fn (media_id: &MediaId, alt_text: &str, token: &auth::Token) -> error::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set metadata for a media upload. At the moment the only attribute that may\n be set is `alt_text`.\n","sig":null,"attributes":[{"value":"/ Set metadata for a media upload. At the moment the only attribute that may","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":178344,"byte_end":178422,"line_start":265,"line_end":265,"column_start":1,"column_end":79}},{"value":"/ be set is `alt_text`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":178423,"byte_end":178448,"line_start":266,"line_end":266,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"place","qualname":"::place","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":725},{"krate":0,"index":752},{"krate":0,"index":3188},{"krate":0,"index":3276},{"krate":0,"index":3274},{"krate":0,"index":3198},{"krate":0,"index":3278},{"krate":0,"index":3343},{"krate":0,"index":3342},{"krate":0,"index":3340},{"krate":0,"index":3334},{"krate":0,"index":3289},{"krate":0,"index":3345},{"krate":0,"index":3355},{"krate":0,"index":3354},{"krate":0,"index":3352},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":765},{"krate":0,"index":770},{"krate":0,"index":779},{"krate":0,"index":790},{"krate":0,"index":797},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":811}],"decl_id":null,"docs":" Types and methods for looking up locations.","sig":null,"attributes":[{"value":"! Types and methods for looking up locations.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181062,"byte_end":181109,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181110,"byte_end":181113,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Location search for Twitter works in one of two ways. The most direct method is to take a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181114,"byte_end":181207,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"! latitude/longitude coordinate (say, from a devide's GPS system or by geolocating from wi-fi","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181208,"byte_end":181303,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"! networks, or simply from a known coordinate) and call `reverse_geocode`. Twitter says","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181304,"byte_end":181393,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"! `reverse_geocode` provides more of a \"raw data access\", and it can be considered to merely show","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181394,"byte_end":181493,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"! what locations are in that point or area.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181494,"byte_end":181539,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181540,"byte_end":181543,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! On the other hand, if you're intending to let a user select from a list of locations, you can","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181544,"byte_end":181641,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"! use the `search_*` methods instead. These have much of the same available parameters, but will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181642,"byte_end":181740,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"! \"potentially re-order \\[results\\] with regards to the user who is authenticated.\" In addition,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181741,"byte_end":181839,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"! the results may potentially pull in \"nearby\" results to allow for a more broad selection or to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181840,"byte_end":181938,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"! account for inaccurate location reporting.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181939,"byte_end":181985,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181986,"byte_end":181989,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Since there are several optional parameters to both query methods, each one is assembled as a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":181990,"byte_end":182087,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! builder. You can create the builder with the `reverse_geocode`, `search_point`, `search_query`,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182088,"byte_end":182187,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"! or `search_ip` functions. From there, add any additional parameters by chaining method calls","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182188,"byte_end":182284,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"! onto the builder. When you're ready to peform the search call, hand your tokens to `call`, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182285,"byte_end":182383,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"! the list of results will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182384,"byte_end":182425,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182426,"byte_end":182429,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! Along with the list of place results, Twitter also returns the full search URL. egg-mode","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182430,"byte_end":182522,"line_start":25,"line_end":25,"column_start":1,"column_end":93}},{"value":"! returns this URL as part of the result struct, allowing you to perform the same search using","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182523,"byte_end":182619,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"! the `reverse_geocode_url` or `search_url` functions.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182620,"byte_end":182676,"line_start":27,"line_end":27,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196335,"byte_end":196339,"line_start":26,"line_end":26,"column_start":14,"column_end":18},"name":"show","qualname":"::place::fun::show","value":"fn (id: &str, token: &auth::Token) -> Result<Response<Place>>","parent":null,"children":[],"decl_id":null,"docs":" Load the place with the given ID.","sig":null,"attributes":[{"value":"/ Load the place with the given ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":195976,"byte_end":196013,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196014,"byte_end":196017,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196018,"byte_end":196033,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196034,"byte_end":196037,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196038,"byte_end":196056,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196057,"byte_end":196083,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196084,"byte_end":196104,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196105,"byte_end":196128,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196129,"byte_end":196171,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/ let result = egg_mode::place::show(\"18810aa5b43e76c7\", &token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196172,"byte_end":196254,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196255,"byte_end":196258,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert!(result.full_name == \"Dallas, TX\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196259,"byte_end":196305,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196306,"byte_end":196313,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196314,"byte_end":196321,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197084,"byte_end":197099,"line_start":51,"line_end":51,"column_start":8,"column_end":23},"name":"reverse_geocode","qualname":"::place::fun::reverse_geocode","value":"fn (latitude: f64, longitude: f64) -> GeocodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Begins building a reverse-geocode search with the given coordinate.","sig":null,"attributes":[{"value":"/ Begins building a reverse-geocode search with the given coordinate.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196549,"byte_end":196620,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196621,"byte_end":196624,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196625,"byte_end":196640,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196641,"byte_end":196644,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196645,"byte_end":196663,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196664,"byte_end":196690,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196691,"byte_end":196711,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196712,"byte_end":196735,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196736,"byte_end":196778,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/ use egg_mode::place::{self, PlaceType};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196779,"byte_end":196822,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ let result = place::reverse_geocode(51.507222, -0.1275)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196823,"byte_end":196882,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/     .granularity(PlaceType::City)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196883,"byte_end":196920,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/     .call(&token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196921,"byte_end":196942,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     .await","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196943,"byte_end":196957,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196958,"byte_end":196976,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196977,"byte_end":196980,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert!(result.results.iter().any(|pl| pl.full_name == \"London, England\"));","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":196981,"byte_end":197060,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197061,"byte_end":197068,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197069,"byte_end":197076,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198157,"byte_end":198176,"line_start":84,"line_end":84,"column_start":14,"column_end":33},"name":"reverse_geocode_url","qualname":"::place::fun::reverse_geocode_url","value":"fn (url: &str, token: &auth::Token) -> Result<Response<SearchResult>>","parent":null,"children":[],"decl_id":null,"docs":"From a URL given with the result of `reverse_geocode`, perform the same reverse-geocode search.","sig":null,"attributes":[{"value":"/From a URL given with the result of `reverse_geocode`, perform the same reverse-geocode search.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197864,"byte_end":197962,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197963,"byte_end":197966,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/## Errors","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197967,"byte_end":197979,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197980,"byte_end":197983,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/In addition to errors that might occur generally, this function will return a `BadUrl` error if","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":197984,"byte_end":198082,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/the given URL is not a valid `reverse_geocode` query URL.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198083,"byte_end":198143,"line_start":83,"line_end":83,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198949,"byte_end":198961,"line_start":109,"line_end":109,"column_start":8,"column_end":20},"name":"search_point","qualname":"::place::fun::search_point","value":"fn (latitude: f64, longitude: f64) -> SearchBuilder","parent":null,"children":[],"decl_id":null,"docs":" Begins building a location search via latitude/longitude.","sig":null,"attributes":[{"value":"/ Begins building a location search via latitude/longitude.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198428,"byte_end":198489,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198490,"byte_end":198493,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198494,"byte_end":198508,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198509,"byte_end":198512,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198513,"byte_end":198531,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198532,"byte_end":198558,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198559,"byte_end":198579,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198580,"byte_end":198603,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198604,"byte_end":198646,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/ use egg_mode::place::{self, PlaceType};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198647,"byte_end":198690,"line_start":99,"line_end":99,"column_start":1,"column_end":44}},{"value":"/ let result = place::search_point(51.507222, -0.1275)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198691,"byte_end":198747,"line_start":100,"line_end":100,"column_start":1,"column_end":57}},{"value":"/     .granularity(PlaceType::City)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198748,"byte_end":198785,"line_start":101,"line_end":101,"column_start":1,"column_end":38}},{"value":"/     .call(&token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198786,"byte_end":198807,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/     .await","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198808,"byte_end":198822,"line_start":103,"line_end":103,"column_start":1,"column_end":15}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198823,"byte_end":198841,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198842,"byte_end":198845,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ assert!(result.results.iter().any(|pl| pl.full_name == \"London, England\"));","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198846,"byte_end":198925,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198926,"byte_end":198933,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":198934,"byte_end":198941,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199596,"byte_end":199608,"line_start":132,"line_end":132,"column_start":8,"column_end":20},"name":"search_query","qualname":"::place::fun::search_query","value":"fn (query: impl Into<CowStr>) -> SearchBuilder","parent":null,"children":[],"decl_id":null,"docs":" Begins building a location search via a text query.","sig":null,"attributes":[{"value":"/ Begins building a location search via a text query.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199079,"byte_end":199134,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199135,"byte_end":199138,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199139,"byte_end":199153,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199154,"byte_end":199157,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199158,"byte_end":199176,"line_start":117,"line_end":117,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199177,"byte_end":199203,"line_start":118,"line_end":118,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199204,"byte_end":199224,"line_start":119,"line_end":119,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199225,"byte_end":199248,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199249,"byte_end":199291,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/ use egg_mode::place::{self, PlaceType};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199292,"byte_end":199335,"line_start":122,"line_end":122,"column_start":1,"column_end":44}},{"value":"/ let result = place::search_query(\"columbia\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199336,"byte_end":199384,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/     .granularity(PlaceType::Admin)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199385,"byte_end":199423,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/     .call(&token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199424,"byte_end":199445,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     .await","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199446,"byte_end":199460,"line_start":126,"line_end":126,"column_start":1,"column_end":15}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199461,"byte_end":199479,"line_start":127,"line_end":127,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199480,"byte_end":199483,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert!(result.results.iter().any(|pl| pl.full_name == \"British Columbia, Canada\"));","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199484,"byte_end":199572,"line_start":129,"line_end":129,"column_start":1,"column_end":89}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199573,"byte_end":199580,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199581,"byte_end":199588,"line_start":131,"line_end":131,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199776,"byte_end":199785,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"search_ip","qualname":"::place::fun::search_ip","value":"fn (query: impl Into<CowStr>) -> SearchBuilder","parent":null,"children":[],"decl_id":null,"docs":"Begins building a location search via an IP address.\n","sig":null,"attributes":[{"value":"/Begins building a location search via an IP address.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199713,"byte_end":199768,"line_start":136,"line_end":136,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":200177,"byte_end":200187,"line_start":147,"line_end":147,"column_start":14,"column_end":24},"name":"search_url","qualname":"::place::fun::search_url","value":"fn (url: &str, token: &auth::Token) -> Result<Response<SearchResult>>","parent":null,"children":[],"decl_id":null,"docs":"From a URL given with the result of any `search_*` function, perform the same location search.","sig":null,"attributes":[{"value":"/From a URL given with the result of any `search_*` function, perform the same location search.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199894,"byte_end":199991,"line_start":141,"line_end":141,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199992,"byte_end":199995,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/## Errors","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":199996,"byte_end":200008,"line_start":143,"line_end":143,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":200009,"byte_end":200012,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/In addition to errors that might occur generally, this function will return a `BadUrl` error if","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":200013,"byte_end":200111,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/the given URL is not a valid `search` query URL.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\fun.rs","byte_start":200112,"byte_end":200163,"line_start":146,"line_end":146,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183074,"byte_end":183079,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"Place","qualname":"::place::Place","value":"Place { id, attributes, bounding_box, country, country_code, full_name, name, place_type, contained_within }","parent":null,"children":[{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3197},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196}],"decl_id":null,"docs":"Represents a named location.\n","sig":null,"attributes":[{"value":"/Represents a named location.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":182994,"byte_end":183025,"line_start":44,"line_end":44,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183130,"byte_end":183132,"line_start":48,"line_end":48,"column_start":9,"column_end":11},"name":"id","qualname":"::place::Place::id","value":"std::string::String","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"Alphanumeric ID of the location.\n","sig":null,"attributes":[{"value":"/Alphanumeric ID of the location.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183086,"byte_end":183121,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183372,"byte_end":183382,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"name":"attributes","qualname":"::place::Place::attributes","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"Map of miscellaneous information about this place. See [Twitter's documentation][attrib] for\ndetails and common attribute keys.","sig":null,"attributes":[{"value":"/Map of miscellaneous information about this place. See [Twitter's documentation][attrib] for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183146,"byte_end":183241,"line_start":49,"line_end":49,"column_start":5,"column_end":100}},{"value":"/details and common attribute keys.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183246,"byte_end":183283,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183288,"byte_end":183291,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/[attrib]: https://dev.twitter.com/overview/api/places#attributes","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183296,"byte_end":183363,"line_start":52,"line_end":52,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183559,"byte_end":183571,"line_start":56,"line_end":56,"column_start":9,"column_end":21},"name":"bounding_box","qualname":"::place::Place::bounding_box","value":"std::vec::Vec<(f64, f64)>","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"A bounding box of latitude/longitude coordinates that encloses this place.\n","sig":null,"attributes":[{"value":"/A bounding box of latitude/longitude coordinates that encloses this place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183413,"byte_end":183490,"line_start":54,"line_end":54,"column_start":5,"column_end":82}},{"value":"serde(deserialize_with = \"deserialize_bounding_box\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183495,"byte_end":183550,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183648,"byte_end":183655,"line_start":58,"line_end":58,"column_start":9,"column_end":16},"name":"country","qualname":"::place::Place::country","value":"std::string::String","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"Name of the country containing this place.\n","sig":null,"attributes":[{"value":"/Name of the country containing this place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183594,"byte_end":183639,"line_start":57,"line_end":57,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3192},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183751,"byte_end":183763,"line_start":60,"line_end":60,"column_start":9,"column_end":21},"name":"country_code","qualname":"::place::Place::country_code","value":"std::string::String","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"Shortened country code representing the country containing this place.\n","sig":null,"attributes":[{"value":"/Shortened country code representing the country containing this place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183669,"byte_end":183742,"line_start":59,"line_end":59,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3193},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183828,"byte_end":183837,"line_start":62,"line_end":62,"column_start":9,"column_end":18},"name":"full_name","qualname":"::place::Place::full_name","value":"std::string::String","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"Full human-readable name of this place.\n","sig":null,"attributes":[{"value":"/Full human-readable name of this place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183777,"byte_end":183819,"line_start":61,"line_end":61,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183903,"byte_end":183907,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"name","qualname":"::place::Place::name","value":"std::string::String","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"Short human-readable name of this place.\n","sig":null,"attributes":[{"value":"/Short human-readable name of this place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183851,"byte_end":183894,"line_start":63,"line_end":63,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183980,"byte_end":183990,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"name":"place_type","qualname":"::place::Place::place_type","value":"place::PlaceType","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"The type of location represented by this place.\n","sig":null,"attributes":[{"value":"/The type of location represented by this place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":183921,"byte_end":183971,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184093,"byte_end":184109,"line_start":68,"line_end":68,"column_start":9,"column_end":25},"name":"contained_within","qualname":"::place::Place::contained_within","value":"std::option::Option<std::vec::Vec<place::Place>>","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":"If present, the country or administrative region that contains this place.\n","sig":null,"attributes":[{"value":"/If present, the country or administrative region that contains this place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184007,"byte_end":184084,"line_start":67,"line_end":67,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184339,"byte_end":184354,"line_start":76,"line_end":76,"column_start":5,"column_end":20},"name":"PointOfInterest","qualname":"::place::PlaceType::PointOfInterest","value":"PlaceType::PointOfInterest","parent":{"krate":0,"index":3278},"children":[],"decl_id":null,"docs":"A coordinate with no area.\n","sig":null,"attributes":[{"value":"/A coordinate with no area.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184276,"byte_end":184305,"line_start":74,"line_end":74,"column_start":5,"column_end":34}},{"value":"serde(rename = \"poi\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184310,"byte_end":184334,"line_start":75,"line_end":75,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3281},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184429,"byte_end":184441,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"Neighborhood","qualname":"::place::PlaceType::Neighborhood","value":"PlaceType::Neighborhood","parent":{"krate":0,"index":3278},"children":[],"decl_id":null,"docs":"A region within a city.\n","sig":null,"attributes":[{"value":"/A region within a city.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184360,"byte_end":184386,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"serde(rename = \"neighborhood\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184391,"byte_end":184424,"line_start":78,"line_end":78,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184500,"byte_end":184504,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"City","qualname":"::place::PlaceType::City","value":"PlaceType::City","parent":{"krate":0,"index":3278},"children":[],"decl_id":null,"docs":"An entire city.\n","sig":null,"attributes":[{"value":"/An entire city.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184447,"byte_end":184465,"line_start":80,"line_end":80,"column_start":5,"column_end":23}},{"value":"serde(rename = \"city\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184470,"byte_end":184495,"line_start":81,"line_end":81,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184596,"byte_end":184601,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"Admin","qualname":"::place::PlaceType::Admin","value":"PlaceType::Admin","parent":{"krate":0,"index":3278},"children":[],"decl_id":null,"docs":"An administrative area, e.g. state or province.\n","sig":null,"attributes":[{"value":"/An administrative area, e.g. state or province.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184510,"byte_end":184560,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"serde(rename = \"admin\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184565,"byte_end":184591,"line_start":84,"line_end":84,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184666,"byte_end":184673,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Country","qualname":"::place::PlaceType::Country","value":"PlaceType::Country","parent":{"krate":0,"index":3278},"children":[],"decl_id":null,"docs":"An entire country.\n","sig":null,"attributes":[{"value":"/An entire country.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184607,"byte_end":184628,"line_start":86,"line_end":86,"column_start":5,"column_end":26}},{"value":"serde(rename = \"country\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184633,"byte_end":184661,"line_start":87,"line_end":87,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184260,"byte_end":184269,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"PlaceType","qualname":"::place::PlaceType","value":"PlaceType::{PointOfInterest, Neighborhood, City, Admin, Country}","parent":null,"children":[{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287}],"decl_id":null,"docs":"Represents the type of region represented by a given place.\n","sig":null,"attributes":[{"value":"/Represents the type of region represented by a given place.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184134,"byte_end":184196,"line_start":71,"line_end":71,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184876,"byte_end":184882,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"Meters","qualname":"::place::Accuracy::Meters","value":"Accuracy::Meters(f64)","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":"Location accurate to the given number of meters.\n","sig":null,"attributes":[{"value":"/Location accurate to the given number of meters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184820,"byte_end":184871,"line_start":94,"line_end":94,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184947,"byte_end":184951,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"Feet","qualname":"::place::Accuracy::Feet","value":"Accuracy::Feet(f64)","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":"Location accurate to the given number of feet.\n","sig":null,"attributes":[{"value":"/Location accurate to the given number of feet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184893,"byte_end":184942,"line_start":96,"line_end":96,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184805,"byte_end":184813,"line_start":93,"line_end":93,"column_start":10,"column_end":18},"name":"Accuracy","qualname":"::place::Accuracy","value":"Accuracy::{Meters, Feet}","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3349}],"decl_id":null,"docs":"Represents the accuracy of a GPS measurement, when being given to a location search.\n","sig":null,"attributes":[{"value":"/Represents the accuracy of a GPS measurement, when being given to a location search.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184678,"byte_end":184765,"line_start":91,"line_end":91,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185061,"byte_end":185073,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"SearchResult","qualname":"::place::SearchResult","value":"SearchResult { url, results }","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"decl_id":null,"docs":"Represents the result of a location search, either via `reverse_geocode` or `search`.\n","sig":null,"attributes":[{"value":"/Represents the result of a location search, either via `reverse_geocode` or `search`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":184961,"byte_end":185049,"line_start":100,"line_end":100,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185254,"byte_end":185257,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"name":"url","qualname":"::place::SearchResult::url","value":"std::string::String","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":"The full URL used to pull the result list. This can be fed to the `_url` version of your\noriginal call to avoid having to fill out the argument list again.\n","sig":null,"attributes":[{"value":"/The full URL used to pull the result list. This can be fed to the `_url` version of your","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185080,"byte_end":185171,"line_start":102,"line_end":102,"column_start":5,"column_end":96}},{"value":"/original call to avoid having to fill out the argument list again.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185176,"byte_end":185245,"line_start":103,"line_end":103,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185319,"byte_end":185326,"line_start":106,"line_end":106,"column_start":9,"column_end":16},"name":"results","qualname":"::place::SearchResult::results","value":"std::vec::Vec<place::Place>","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":"The list of results from the search.\n","sig":null,"attributes":[{"value":"/The list of results from the search.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185271,"byte_end":185310,"line_start":105,"line_end":105,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186551,"byte_end":186565,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"name":"GeocodeBuilder","qualname":"::place::GeocodeBuilder","value":"GeocodeBuilder {  }","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"decl_id":null,"docs":"Represents a `reverse_geocode` query before it is sent.","sig":null,"attributes":[{"value":"/Represents a `reverse_geocode` query before it is sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186059,"byte_end":186117,"line_start":129,"line_end":129,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186118,"byte_end":186121,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/The available methods on this builder struct allow you to specify optional parameters to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186122,"byte_end":186217,"line_start":131,"line_end":131,"column_start":1,"column_end":96}},{"value":"/search operation. Where applicable, each method lists its default value and acceptable ranges.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186218,"byte_end":186315,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186316,"byte_end":186319,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/To complete your search setup and send the query to Twitter, hand your tokens to `call`. The","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186320,"byte_end":186415,"line_start":134,"line_end":134,"column_start":1,"column_end":96}},{"value":"/list of results from Twitter will be returned, as well as a URL to perform the same search via","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186416,"byte_end":186513,"line_start":135,"line_end":135,"column_start":1,"column_end":98}},{"value":"/`reverse_geocode_url`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186514,"byte_end":186539,"line_start":136,"line_end":136,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187330,"byte_end":187338,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"accuracy","qualname":"<GeocodeBuilder>::accuracy","value":"fn (self, accuracy: Accuracy) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Expands the area to search to the given radius. By default, this is zero.","sig":null,"attributes":[{"value":"/Expands the area to search to the given radius. By default, this is zero.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187028,"byte_end":187104,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187109,"byte_end":187112,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/From Twitter: \"If coming from a device, in practice, this value is whatever accuracy the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187117,"byte_end":187208,"line_start":157,"line_end":157,"column_start":5,"column_end":96}},{"value":"/device has measuring its location (whether it be coming from a GPS, WiFi triangulation,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187213,"byte_end":187303,"line_start":158,"line_end":158,"column_start":5,"column_end":95}},{"value":"/etc.).\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187308,"byte_end":187318,"line_start":159,"line_end":159,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187663,"byte_end":187674,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"granularity","qualname":"<GeocodeBuilder>::granularity","value":"fn (self, granularity: PlaceType) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Sets the minimal specificity of what kind of results to return. For example, passing `City`\nto this will make the eventual result exclude neighborhoods and points.\n","sig":null,"attributes":[{"value":"/Sets the minimal specificity of what kind of results to return. For example, passing `City`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187478,"byte_end":187572,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/to this will make the eventual result exclude neighborhoods and points.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187577,"byte_end":187651,"line_start":168,"line_end":168,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188373,"byte_end":188384,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"max_results","qualname":"<GeocodeBuilder>::max_results","value":"fn (self, max_results: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restricts the maximum number of results returned in this search. This is not a guarantee\nthat the search will return this many results, but instead provides a hint as to how many\n\"nearby\" results to return.","sig":null,"attributes":[{"value":"/Restricts the maximum number of results returned in this search. This is not a guarantee","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187824,"byte_end":187915,"line_start":176,"line_end":176,"column_start":5,"column_end":96}},{"value":"/that the search will return this many results, but instead provides a hint as to how many","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":187920,"byte_end":188012,"line_start":177,"line_end":177,"column_start":5,"column_end":97}},{"value":"/\"nearby\" results to return.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188017,"byte_end":188047,"line_start":178,"line_end":178,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188052,"byte_end":188055,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/This value has a default value of 20, which is also its maximum. If zero or a number greater","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188060,"byte_end":188155,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/than 20 is passed here, it will be defaulted to 20 before sending to Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188160,"byte_end":188240,"line_start":181,"line_end":181,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188245,"byte_end":188248,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/From Twitter: \"Ideally, only pass in the number of places you intend to display to the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188253,"byte_end":188347,"line_start":183,"line_end":183,"column_start":5,"column_end":99}},{"value":"/here.\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188352,"byte_end":188361,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188614,"byte_end":188618,"line_start":193,"line_end":193,"column_start":18,"column_end":22},"name":"call","qualname":"<GeocodeBuilder>::call","value":"fn (&self, token: &auth::Token) -> Result<Response<SearchResult>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Finalize the search parameters and return the results collection.\n","sig":null,"attributes":[{"value":"/Finalize the search parameters and return the results collection.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":188528,"byte_end":188596,"line_start":192,"line_end":192,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189958,"byte_end":189971,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"SearchBuilder","qualname":"::place::SearchBuilder","value":"SearchBuilder {  }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796}],"decl_id":null,"docs":"Represents a location search query before it is sent.","sig":null,"attributes":[{"value":"/Represents a location search query before it is sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189477,"byte_end":189533,"line_start":218,"line_end":218,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189534,"byte_end":189537,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/The available methods on this builder struct allow you to specify optional parameters to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189538,"byte_end":189633,"line_start":220,"line_end":220,"column_start":1,"column_end":96}},{"value":"/search operation. Where applicable, each method lists its default value and acceptable ranges.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189634,"byte_end":189731,"line_start":221,"line_end":221,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189732,"byte_end":189735,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/To complete your search setup and send the query to Twitter, hand your tokens to `call`. The","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189736,"byte_end":189831,"line_start":223,"line_end":223,"column_start":1,"column_end":96}},{"value":"/list of results from Twitter will be returned, as well as a URL to perform the same search via","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189832,"byte_end":189929,"line_start":224,"line_end":224,"column_start":1,"column_end":98}},{"value":"/`search_url`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":189930,"byte_end":189946,"line_start":225,"line_end":225,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190838,"byte_end":190846,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"accuracy","qualname":"<SearchBuilder>::accuracy","value":"fn (self, accuracy: Accuracy) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Expands the area to search to the given radius. By default, this is zero.","sig":null,"attributes":[{"value":"/Expands the area to search to the given radius. By default, this is zero.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190536,"byte_end":190612,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190617,"byte_end":190620,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/From Twitter: \"If coming from a device, in practice, this value is whatever accuracy the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190625,"byte_end":190716,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/device has measuring its location (whether it be coming from a GPS, WiFi triangulation,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190721,"byte_end":190811,"line_start":251,"line_end":251,"column_start":5,"column_end":95}},{"value":"/etc.).\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190816,"byte_end":190826,"line_start":252,"line_end":252,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191170,"byte_end":191181,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"granularity","qualname":"<SearchBuilder>::granularity","value":"fn (self, granularity: PlaceType) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Sets the minimal specificity of what kind of results to return. For example, passing `City`\nto this will make the eventual result exclude neighborhoods and points.\n","sig":null,"attributes":[{"value":"/Sets the minimal specificity of what kind of results to return. For example, passing `City`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190985,"byte_end":191079,"line_start":260,"line_end":260,"column_start":5,"column_end":99}},{"value":"/to this will make the eventual result exclude neighborhoods and points.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191084,"byte_end":191158,"line_start":261,"line_end":261,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191862,"byte_end":191873,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"max_results","qualname":"<SearchBuilder>::max_results","value":"fn (self, max_results: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restricts the maximum number of results returned in this search. This is not a guarantee\nthat the search will return this many results, but instead provides a hint as to how many\n\"nearby\" results to return.","sig":null,"attributes":[{"value":"/Restricts the maximum number of results returned in this search. This is not a guarantee","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191330,"byte_end":191421,"line_start":269,"line_end":269,"column_start":5,"column_end":96}},{"value":"/that the search will return this many results, but instead provides a hint as to how many","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191426,"byte_end":191518,"line_start":270,"line_end":270,"column_start":5,"column_end":97}},{"value":"/\"nearby\" results to return.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191523,"byte_end":191553,"line_start":271,"line_end":271,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191558,"byte_end":191561,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/From experimentation, this value has a default of 20 and a maximum of 100. If fewer","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191566,"byte_end":191652,"line_start":273,"line_end":273,"column_start":5,"column_end":91}},{"value":"/locations match the search parameters, fewer places will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191657,"byte_end":191729,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191734,"byte_end":191737,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/From Twitter: \"Ideally, only pass in the number of places you intend to display to the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191742,"byte_end":191836,"line_start":276,"line_end":276,"column_start":5,"column_end":99}},{"value":"/here.\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":191841,"byte_end":191850,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192094,"byte_end":192110,"line_start":286,"line_end":286,"column_start":12,"column_end":28},"name":"contained_within","qualname":"<SearchBuilder>::contained_within","value":"fn (self, contained_id: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restricts results to those contained within the given Place ID.\n","sig":null,"attributes":[{"value":"/Restricts results to those contained within the given Place ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192016,"byte_end":192082,"line_start":285,"line_end":285,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192839,"byte_end":192848,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"attribute","qualname":"<SearchBuilder>::attribute","value":"fn (self, attribute_key: String, attribute_value: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restricts results to those with the given attribute. A list of common attributes are\navailable in [Twitter's documentation for Places][attrs]. Custom attributes are supported in\nthis search, if you know them. This function may be called multiple times with different\n`attribute_key` values to combine attribute search parameters.","sig":null,"attributes":[{"value":"/Restricts results to those with the given attribute. A list of common attributes are","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192263,"byte_end":192350,"line_start":293,"line_end":293,"column_start":5,"column_end":92}},{"value":"/available in [Twitter's documentation for Places][attrs]. Custom attributes are supported in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192355,"byte_end":192450,"line_start":294,"line_end":294,"column_start":5,"column_end":100}},{"value":"/this search, if you know them. This function may be called multiple times with different","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192455,"byte_end":192546,"line_start":295,"line_end":295,"column_start":5,"column_end":96}},{"value":"/`attribute_key` values to combine attribute search parameters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192551,"byte_end":192616,"line_start":296,"line_end":296,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192621,"byte_end":192624,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/[attrs]: https://dev.twitter.com/overview/api/places#attributes","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192629,"byte_end":192695,"line_start":298,"line_end":298,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192700,"byte_end":192703,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/For example, `.attribute(\"street_address\", \"123 Main St\")` searches for places with the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192708,"byte_end":192798,"line_start":300,"line_end":300,"column_start":5,"column_end":95}},{"value":"/given street address.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":192803,"byte_end":192827,"line_start":301,"line_end":301,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":193216,"byte_end":193220,"line_start":313,"line_end":313,"column_start":18,"column_end":22},"name":"call","qualname":"<SearchBuilder>::call","value":"fn (&self, token: &auth::Token) -> Result<Response<SearchResult>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Finalize the search parameters and return the results collection.\n","sig":null,"attributes":[{"value":"/Finalize the search parameters and return the results collection.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":193130,"byte_end":193198,"line_start":312,"line_end":312,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::raw","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838}],"decl_id":null,"docs":" Raw access to request- and response-building primitives used internally by egg-mode.","sig":null,"attributes":[{"value":"! Raw access to request- and response-building primitives used internally by egg-mode.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":200633,"byte_end":200721,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":200722,"byte_end":200725,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! The functions and types exposed in this module allow you to access Twitter API functions that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":200726,"byte_end":200823,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"! aren't currently wrapped by egg-mode, or to provide parameters to Twitter that egg-mode doesn't","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":200824,"byte_end":200923,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"! currently use. These functions also allow you to have more power in how you process the data","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":200924,"byte_end":201020,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"! returned by Twitter. In return, much more knowledge of the Twitter API is required to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201021,"byte_end":201110,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"! effectively use these functions.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201111,"byte_end":201147,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201148,"byte_end":201151,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! The functions in this module can be divided into two categories: assembling a request, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201152,"byte_end":201246,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"! executing it to get a response. Some wrapper types in egg-mode operate directly on requests, or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201247,"byte_end":201346,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"! create their own, so constructors for those types are also exposed here.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201347,"byte_end":201423,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201424,"byte_end":201427,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! To start using the functions in this module, you'll need a [`Token`] from the authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201428,"byte_end":201524,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"! flow. The parameters to an endpoint are represented by the [`ParamList`] type. They're","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201525,"byte_end":201615,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"! separated out so that they can be included as part of the OAuth signature given to Twitter as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201616,"byte_end":201713,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! part of the API call. This also means that the URL you give to the request functions should be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201714,"byte_end":201812,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"! the base URL, with no parameters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201813,"byte_end":201850,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201851,"byte_end":201854,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! [`Token`]: ../auth/enum.Token.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201855,"byte_end":201893,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"! [`ParamList`]: struct.ParamList.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201894,"byte_end":201934,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201935,"byte_end":201938,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! There are three basic request functions, based on how the endpoint expects to be called:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":201939,"byte_end":202031,"line_start":26,"line_end":26,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202032,"byte_end":202035,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! * `request_get` assembles a GET request, with the given parameters appended to the URL as a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202036,"byte_end":202131,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"!   query string. All GET endpoints that egg-mode currently wraps use this function to encode and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202132,"byte_end":202231,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"!   sign the request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202232,"byte_end":202255,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"! * `request_post` assembles a POST request, with the given parameters included in the POST body","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202256,"byte_end":202354,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"!   formatted as `x-www-form-urlencoded` data. Most POST endpoints in the Twitter API are","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202355,"byte_end":202446,"line_start":32,"line_end":32,"column_start":1,"column_end":92}},{"value":"!   formatted using this function.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202447,"byte_end":202483,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"! * `request_post_json` also assembles a POST request, but instead of taking a `ParamList`, it","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202484,"byte_end":202580,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"!   takes arbitrary data and formats it in the POST body as JSON. The provided data is *not* used","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202581,"byte_end":202680,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"!   as part of the OAuth signature. At time of writing (between releases 0.14 and 0.15) the only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202681,"byte_end":202779,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"!   egg-mode endpoint that uses this function is [`media::set_metadata`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202780,"byte_end":202855,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202856,"byte_end":202859,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [`media::set_metadata`]: ../media/fn.set_metadata.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202860,"byte_end":202918,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202919,"byte_end":202922,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! Once you have a `Request`, you can hand it to the `response_*` functions in this module to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":202923,"byte_end":203017,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"! process it. Which one you select depends on how much processing you want egg-mode to do with","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203018,"byte_end":203114,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"! the response:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203115,"byte_end":203132,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203133,"byte_end":203136,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! * At the most hands-off end, there's [`response_future`,] which is a small wrapper that just","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203137,"byte_end":203233,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"!   starts the request and hands off the `ResponseFuture` from `hyper` to give you the most power","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203234,"byte_end":203333,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"!   over handling the response data.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203334,"byte_end":203372,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"! * In the middle, there's [`response_raw_bytes`], which wraps the `ResponseFuture` to return the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203373,"byte_end":203472,"line_start":48,"line_end":48,"column_start":1,"column_end":100}},{"value":"!   headers and response body after inspecting the rate-limit headers and response code, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203473,"byte_end":203567,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"!   after inspecting the response to see whether it returned error data from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203568,"byte_end":203655,"line_start":50,"line_end":50,"column_start":1,"column_end":88}},{"value":"! * Finally there's [`response_json`], which picks up from `response_raw_bytes` to parse the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203656,"byte_end":203750,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"!   response as JSON and deserialize it into the target type, alongside the rate-limit","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203751,"byte_end":203839,"line_start":52,"line_end":52,"column_start":1,"column_end":89}},{"value":"!   information from the response headers.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203840,"byte_end":203884,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203885,"byte_end":203888,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! [`response_future`]: fn.response_future.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203889,"byte_end":203937,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"! [`response_raw_bytes`]: fn.response_raw_bytes.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203938,"byte_end":203992,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"! [`response_json`]: fn.response_json.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":203993,"byte_end":204037,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204038,"byte_end":204041,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! In addition, there are `request_as_*` and `response_as_*` functions available to format a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204042,"byte_end":204135,"line_start":59,"line_end":59,"column_start":1,"column_end":94}},{"value":"! request using one of the wrappers used in egg-mode. If the endpoint you're using is one that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204136,"byte_end":204232,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"! currently uses one of these wrapper types or returns and accepts data the same way as one of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204233,"byte_end":204329,"line_start":61,"line_end":61,"column_start":1,"column_end":97}},{"value":"! these endpoints, you can use these functions to get the same experience as the existing","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204330,"byte_end":204421,"line_start":62,"line_end":62,"column_start":1,"column_end":92}},{"value":"! wrappers in egg-mode. See the documentation for these functions to see their assumptions and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204422,"byte_end":204518,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"! requirements.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204519,"byte_end":204536,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204537,"byte_end":204540,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! If you need the ability to assemble a request in a way that `request_get`, `request_post`, or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204541,"byte_end":204638,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"! `request_post_json` don't allow, the `RequestBuilder` type available in the `auth` submodule","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204639,"byte_end":204735,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"! provides the lowest-level control over how a request is built and signed. For more information,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204736,"byte_end":204835,"line_start":68,"line_end":68,"column_start":1,"column_end":100}},{"value":"! see the [`auth`] module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204836,"byte_end":204864,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204865,"byte_end":204868,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! [`auth`]: auth/index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":204869,"byte_end":204898,"line_start":71,"line_end":71,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206294,"byte_end":206319,"line_start":103,"line_end":103,"column_start":8,"column_end":33},"name":"request_as_tweet_timeline","qualname":"::raw::request_as_tweet_timeline","value":"fn (url: &'static str, token: &Token, params: Option<ParamList>) -> TweetTimeline","parent":null,"children":[],"decl_id":null,"docs":" Assemble a GET request and convert it to a `Timeline` of tweets.","sig":null,"attributes":[{"value":"/ Assemble a GET request and convert it to a `Timeline` of tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205273,"byte_end":205341,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205342,"byte_end":205345,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ An endpoint wrapped by `tweet::Timeline` returns data as an array of Tweets. In addition, they","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205346,"byte_end":205444,"line_start":90,"line_end":90,"column_start":1,"column_end":99}},{"value":"/ also take parameters `since_id` and `max_id` to filter the earliest and latest Tweet returned","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205445,"byte_end":205542,"line_start":91,"line_end":91,"column_start":1,"column_end":98}},{"value":"/ (respectively), as well as a `count` parameter to limit the number of Tweets returned at once.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205543,"byte_end":205641,"line_start":92,"line_end":92,"column_start":1,"column_end":99}},{"value":"/ The `Timeline` struct sets these parameters itself; you should not need to hand them to this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205642,"byte_end":205738,"line_start":93,"line_end":93,"column_start":1,"column_end":97}},{"value":"/ function. These parameters are manipulated through the `older()` and `newer()` functions, as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205739,"byte_end":205835,"line_start":94,"line_end":94,"column_start":1,"column_end":97}},{"value":"/ well as the `with_page_size()` function.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205836,"byte_end":205880,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205881,"byte_end":205884,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ In addition, the `Timeline` struct also adds `tweet_mode=extended` and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205885,"byte_end":205959,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/ `include_ext_alt_text=true` when sending a request, to fill in the data from extended Tweets","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":205960,"byte_end":206056,"line_start":98,"line_end":98,"column_start":1,"column_end":97}},{"value":"/ and media alt-text when returned from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206057,"byte_end":206107,"line_start":99,"line_end":99,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206108,"byte_end":206111,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ If you do not need to send additional parameters other than these mentioned, you can pass","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206112,"byte_end":206205,"line_start":101,"line_end":101,"column_start":1,"column_end":94}},{"value":"/ `None` for the `params` to make the `Timeline` manage the parameters itself.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206206,"byte_end":206286,"line_start":102,"line_end":102,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207931,"byte_end":207953,"line_start":142,"line_end":142,"column_start":8,"column_end":30},"name":"request_as_cursor_iter","qualname":"::raw::request_as_cursor_iter","value":"fn <T> (url: &'static str, token: &Token, params: Option<ParamList>, page_size: Option<i32>) -> cursor::CursorIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Assemble a GET request and convert it to a `CursorIter`.","sig":null,"attributes":[{"value":"/ Assemble a GET request and convert it to a `CursorIter`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206460,"byte_end":206520,"line_start":111,"line_end":111,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206521,"byte_end":206524,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ A `CursorIter` is a wrapper around an endpoint that returns data in the following structure:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206525,"byte_end":206621,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206622,"byte_end":206625,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```json","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206626,"byte_end":206637,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206638,"byte_end":206643,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/   \"previous_cursor\": int,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206644,"byte_end":206673,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"/   \"previous_cursor_str\": \"string\",","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206674,"byte_end":206712,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/   \"next_cursor\": int,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206713,"byte_end":206738,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/   \"next_cursor_str\": \"string\",","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206739,"byte_end":206773,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"/   \"<data>\": [ ... ]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206774,"byte_end":206797,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206798,"byte_end":206803,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206804,"byte_end":206811,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206812,"byte_end":206815,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Where `<data>` is named something relevant to the endpoint, and contains an array of objects.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206816,"byte_end":206913,"line_start":125,"line_end":125,"column_start":1,"column_end":98}},{"value":"/ `CursorIter` expects to be able to deserialize this response into a type that implements the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":206914,"byte_end":207010,"line_start":126,"line_end":126,"column_start":1,"column_end":97}},{"value":"/ [`Cursor`] trait to expose these fields. (The cursor struct is the type parameter of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207011,"byte_end":207099,"line_start":127,"line_end":127,"column_start":1,"column_end":89}},{"value":"/ `CursorIter` itself.) It uses these fields to set the `cursor` parameter to the given endpoint.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207100,"byte_end":207199,"line_start":128,"line_end":128,"column_start":1,"column_end":100}},{"value":"/ It also sets the `count` parameter with the given `page_size`, if present. (Some cursor","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207200,"byte_end":207291,"line_start":129,"line_end":129,"column_start":1,"column_end":92}},{"value":"/ endpoints do not support setting a page size; an example of such an endpoint is `GET","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207292,"byte_end":207380,"line_start":130,"line_end":130,"column_start":1,"column_end":89}},{"value":"/ friendships/incoming`.)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207381,"byte_end":207408,"line_start":131,"line_end":131,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207409,"byte_end":207412,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`Cursor`]: ../cursor/trait.Cursor.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207413,"byte_end":207456,"line_start":133,"line_end":133,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207457,"byte_end":207460,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ An example of a Twitter API endpoint that exposes a cursor interface is [`GET friends/list`].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207461,"byte_end":207558,"line_start":135,"line_end":135,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207559,"byte_end":207562,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ [`GET friends/list`]: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friends-list","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207563,"byte_end":207700,"line_start":137,"line_end":137,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207701,"byte_end":207704,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ If you can supply a Cursor type (or use one of the ones in the `cursor` module), `CursorIter`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207705,"byte_end":207802,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ will wrap the responses into a `Stream` interface that automatically fetches the next page of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207803,"byte_end":207900,"line_start":140,"line_end":140,"column_start":1,"column_end":98}},{"value":"/ results on-demand.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":207901,"byte_end":207923,"line_start":141,"line_end":141,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208960,"byte_end":208978,"line_start":164,"line_end":164,"column_start":8,"column_end":26},"name":"response_as_stream","qualname":"::raw::response_as_stream","value":"fn (req: Request<Body>) -> TwitterStream","parent":null,"children":[],"decl_id":null,"docs":" Converts the given request into a `TwitterStream`.","sig":null,"attributes":[{"value":"/ Converts the given request into a `TwitterStream`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208378,"byte_end":208432,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208433,"byte_end":208436,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This function can be used for endpoints that open a persistent stream, like `GET","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208437,"byte_end":208521,"line_start":157,"line_end":157,"column_start":1,"column_end":85}},{"value":"/ statuses/sample`. If you know that the messages returned by the stream you're using will look","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208522,"byte_end":208619,"line_start":158,"line_end":158,"column_start":1,"column_end":98}},{"value":"/ the same as `StreamMessage`, this can be a convenient way to customize a stream if you need to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208620,"byte_end":208718,"line_start":159,"line_end":159,"column_start":1,"column_end":99}},{"value":"/ use other endpoints or options not available to `StreamBuilder`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208719,"byte_end":208787,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208788,"byte_end":208791,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Since the `TwitterStream` type doesn't need to provide additional parameters to the request, it","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208792,"byte_end":208891,"line_start":162,"line_end":162,"column_start":1,"column_end":100}},{"value":"/ can take a signed, completed request as its constructor.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":208892,"byte_end":208952,"line_start":163,"line_end":163,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211934,"byte_end":211938,"line_start":219,"line_end":219,"column_start":9,"column_end":13},"name":"auth","qualname":"::raw::auth","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"decl_id":null,"docs":" Facilities to manually assemble signed requests.","sig":null,"attributes":[{"value":"/ Facilities to manually assemble signed requests.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209049,"byte_end":209101,"line_start":168,"line_end":168,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209102,"byte_end":209105,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In case you need to do things that aren't available in the `raw` module, the `RequestBuilder`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209106,"byte_end":209203,"line_start":170,"line_end":170,"column_start":1,"column_end":98}},{"value":"/ included here allows you to go deeper into the internals of egg-mode. All of the authentication","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209204,"byte_end":209303,"line_start":171,"line_end":171,"column_start":1,"column_end":100}},{"value":"/ internals are implemented in terms of `RequestBuilder`, meaning you can fully recreate them","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209304,"byte_end":209399,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ using your own parsing logic for the output.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209400,"byte_end":209448,"line_start":173,"line_end":173,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209449,"byte_end":209452,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ `RequestBuilder` is designed to allow for easily creating an OAuth signature from the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209453,"byte_end":209542,"line_start":175,"line_end":175,"column_start":1,"column_end":90}},{"value":"/ parameters to an API endpoint, and so they collect `ParamList` instances just like the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209543,"byte_end":209633,"line_start":176,"line_end":176,"column_start":1,"column_end":91}},{"value":"/ functions in the `raw` module. However, there is also a way to manually set the request body","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209634,"byte_end":209730,"line_start":177,"line_end":177,"column_start":1,"column_end":97}},{"value":"/ outside of the `ParamList` struct, for endpoints like `POST media/metadata/create` or `POST","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209731,"byte_end":209826,"line_start":178,"line_end":178,"column_start":1,"column_end":96}},{"value":"/ oauth2/token` which require specific body formats.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209827,"byte_end":209881,"line_start":179,"line_end":179,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209882,"byte_end":209885,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ True to its name, all the methods on `RequestBuilder` are meant to be used in a builder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209886,"byte_end":209977,"line_start":181,"line_end":181,"column_start":1,"column_end":92}},{"value":"/ pattern. To begin, you need to have the URL you wish to access and the HTTP Method you would","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":209978,"byte_end":210074,"line_start":182,"line_end":182,"column_start":1,"column_end":97}},{"value":"/ like to use. Then you can build up the query string and request body, and accumulate the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210075,"byte_end":210167,"line_start":183,"line_end":183,"column_start":1,"column_end":93}},{"value":"/ parameters used in the OAuth signature. Finally, to finish building the request, you need to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210168,"byte_end":210264,"line_start":184,"line_end":184,"column_start":1,"column_end":97}},{"value":"/ provide what kind of authorization you would like to use. Since there are several ways to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210265,"byte_end":210358,"line_start":185,"line_end":185,"column_start":1,"column_end":94}},{"value":"/ authorize a call to Twitter, there are several options available:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210359,"byte_end":210428,"line_start":186,"line_end":186,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210429,"byte_end":210432,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * For [OAuth 1.0a], you can specify the keys individually in `request_keys`, or provide a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210433,"byte_end":210526,"line_start":188,"line_end":188,"column_start":1,"column_end":94}},{"value":"/   complete `Token` using `request_token`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210527,"byte_end":210572,"line_start":189,"line_end":189,"column_start":1,"column_end":46}},{"value":"/ * For [OAuth 2.0 Bearer Token][bearer], you can provide the Bearer token using `request_token`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210573,"byte_end":210672,"line_start":190,"line_end":190,"column_start":1,"column_end":100}},{"value":"/ * For [Basic authentication][basic] used with Enterprise APIs and when requesting a Bearer","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210673,"byte_end":210767,"line_start":191,"line_end":191,"column_start":1,"column_end":95}},{"value":"/   token, you can provide the credentials as a `KeyPair` in `request_consumer_bearer`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210768,"byte_end":210857,"line_start":192,"line_end":192,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210858,"byte_end":210861,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ [OAuth 1.0a]: https://developer.twitter.com/en/docs/basics/authentication/oauth-1-0a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210862,"byte_end":210950,"line_start":194,"line_end":194,"column_start":1,"column_end":89}},{"value":"/ [bearer]: https://developer.twitter.com/en/docs/basics/authentication/oauth-2-0","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":210951,"byte_end":211034,"line_start":195,"line_end":195,"column_start":1,"column_end":84}},{"value":"/ [basic]: https://developer.twitter.com/en/docs/basics/authentication/basic-auth","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211035,"byte_end":211118,"line_start":196,"line_end":196,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211119,"byte_end":211122,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ For example, if you were using this type to request a specific Tweet:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211123,"byte_end":211196,"line_start":198,"line_end":198,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211197,"byte_end":211200,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211201,"byte_end":211219,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/ use egg_mode::raw::auth::{RequestBuilder, Method};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211220,"byte_end":211274,"line_start":201,"line_end":201,"column_start":1,"column_end":55}},{"value":"/ use egg_mode::raw::{ParamList, response_json};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211275,"byte_end":211325,"line_start":202,"line_end":202,"column_start":1,"column_end":51}},{"value":"/ use egg_mode::Response;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211326,"byte_end":211353,"line_start":203,"line_end":203,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211354,"byte_end":211357,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211358,"byte_end":211378,"line_start":205,"line_end":205,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211379,"byte_end":211402,"line_start":206,"line_end":206,"column_start":1,"column_end":24}},{"value":"/ # let token: egg_mode::Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211403,"byte_end":211455,"line_start":207,"line_end":207,"column_start":1,"column_end":53}},{"value":"/ let params = ParamList::new()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211456,"byte_end":211489,"line_start":208,"line_end":208,"column_start":1,"column_end":34}},{"value":"/     .extended_tweets()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211490,"byte_end":211516,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"/     .add_param(\"id\", 1261253754969640960u64.to_string());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211517,"byte_end":211578,"line_start":210,"line_end":210,"column_start":1,"column_end":62}},{"value":"/ let request = RequestBuilder::new(Method::GET, \"https://api.twitter.com/1.1/statuses/show.json\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211579,"byte_end":211679,"line_start":211,"line_end":211,"column_start":1,"column_end":101}},{"value":"/     .with_query_params(&params)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211680,"byte_end":211715,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/     .request_token(&token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211716,"byte_end":211747,"line_start":213,"line_end":213,"column_start":1,"column_end":32}},{"value":"/ let json: Response<serde_json::Value> = response_json(request).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211748,"byte_end":211830,"line_start":214,"line_end":214,"column_start":1,"column_end":83}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211831,"byte_end":211838,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211839,"byte_end":211846,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211847,"byte_end":211850,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ For more information, see the functions available on `RequestBuilder`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\raw.rs","byte_start":211851,"byte_end":211925,"line_start":218,"line_end":218,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"search","qualname":"::search","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":852},{"krate":0,"index":3357},{"krate":0,"index":3367},{"krate":0,"index":3366},{"krate":0,"index":3364},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":863},{"krate":0,"index":872},{"krate":0,"index":3369},{"krate":0,"index":3415},{"krate":0,"index":3372},{"krate":0,"index":3417},{"krate":0,"index":3478},{"krate":0,"index":3425},{"krate":0,"index":886},{"krate":0,"index":3480},{"krate":0,"index":3486},{"krate":0,"index":890}],"decl_id":null,"docs":" Structs and methods for searching for tweets.","sig":null,"attributes":[{"value":"! Structs and methods for searching for tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212243,"byte_end":212292,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212293,"byte_end":212296,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Since there are several optional parameters for searches, egg-mode handles it with a builder","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212297,"byte_end":212393,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"! pattern. To begin, call `search` with your requested search term. Additional parameters can be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212394,"byte_end":212492,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"! added onto the `SearchBuilder` struct that is returned. When you're ready to load the first","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212493,"byte_end":212588,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"! page of results, hand your tokens to `call`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212589,"byte_end":212637,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212638,"byte_end":212641,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212642,"byte_end":212660,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"! # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212661,"byte_end":212687,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"! # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212688,"byte_end":212708,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"! # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212709,"byte_end":212732,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"! # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212733,"byte_end":212775,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"! use egg_mode::search::{self, ResultType};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212776,"byte_end":212821,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212822,"byte_end":212825,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! let search = search::search(\"rustlang\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212826,"byte_end":212869,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"!     .result_type(ResultType::Recent)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212870,"byte_end":212910,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"!     .call(&token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212911,"byte_end":212932,"line_start":21,"line_end":21,"column_start":1,"column_end":22}},{"value":"!     .await","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212933,"byte_end":212947,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"!     .unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212948,"byte_end":212966,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212967,"byte_end":212970,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! for tweet in &search.statuses {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":212971,"byte_end":213006,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"!     println!(\"(@{}) {}\", tweet.user.as_ref().unwrap().screen_name, tweet.text);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213007,"byte_end":213090,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"! }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213091,"byte_end":213096,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213097,"byte_end":213104,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213105,"byte_end":213112,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213113,"byte_end":213116,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Once you have your `SearchResult`, you can navigate the search results by calling `older` and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213117,"byte_end":213214,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"! `newer` to get the next and previous pages, respsectively. In addition, you can see your","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213215,"byte_end":213307,"line_start":32,"line_end":32,"column_start":1,"column_end":93}},{"value":"! original query in the search result struct as well, so you can categorize multiple searches by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213308,"byte_end":213406,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"! their query. While this is given as a regular field, note that modifying `query` will not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213407,"byte_end":213500,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"! change what is searched for when you call `older` or `newer`; the `SearchResult` keeps its","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213501,"byte_end":213595,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"! search arguments in a separate private field.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213596,"byte_end":213645,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213646,"byte_end":213649,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! The search parameter given in the initial call to `search` has several options itself. A full","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213650,"byte_end":213747,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"! reference is available in [Twitter's Search API documentation][search-doc]. This listing by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213748,"byte_end":213843,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"! itself does not include the search by Place ID, as mentioned on [a separate Tweets by Place","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213844,"byte_end":213939,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"! page][search-place]. A future version of egg-mode might break these options into further","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":213940,"byte_end":214032,"line_start":41,"line_end":41,"column_start":1,"column_end":93}},{"value":"! methods on `SearchBuilder`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214033,"byte_end":214064,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214065,"byte_end":214068,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! [search-doc]: https://dev.twitter.com/rest/public/search","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214069,"byte_end":214129,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"! [search-place]: https://dev.twitter.com/rest/public/search-by-place","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214130,"byte_end":214201,"line_start":45,"line_end":45,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214404,"byte_end":214410,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"search","qualname":"::search::search","value":"fn <S> (query: S) -> SearchBuilder","parent":null,"children":[],"decl_id":null,"docs":"Begin setting up a tweet search with the given query.\n","sig":null,"attributes":[{"value":"/Begin setting up a tweet search with the given query.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214340,"byte_end":214396,"line_start":55,"line_end":55,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214860,"byte_end":214866,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"Recent","qualname":"::search::ResultType::Recent","value":"ResultType::Recent","parent":{"krate":0,"index":3357},"children":[],"decl_id":null,"docs":"Return only the most recent tweets in the response.\n","sig":null,"attributes":[{"value":"/Return only the most recent tweets in the response.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214801,"byte_end":214855,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214932,"byte_end":214939,"line_start":75,"line_end":75,"column_start":5,"column_end":12},"name":"Popular","qualname":"::search::ResultType::Popular","value":"ResultType::Popular","parent":{"krate":0,"index":3357},"children":[],"decl_id":null,"docs":"Return only the most popular tweets in the response.\n","sig":null,"attributes":[{"value":"/Return only the most popular tweets in the response.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214872,"byte_end":214927,"line_start":74,"line_end":74,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215012,"byte_end":215017,"line_start":77,"line_end":77,"column_start":5,"column_end":10},"name":"Mixed","qualname":"::search::ResultType::Mixed","value":"ResultType::Mixed","parent":{"krate":0,"index":3357},"children":[],"decl_id":null,"docs":"Include both popular and real-time results in the response.\n","sig":null,"attributes":[{"value":"/Include both popular and real-time results in the response.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214945,"byte_end":215007,"line_start":76,"line_end":76,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214784,"byte_end":214794,"line_start":71,"line_end":71,"column_start":10,"column_end":20},"name":"ResultType","qualname":"::search::ResultType","value":"ResultType::{Recent, Popular, Mixed}","parent":null,"children":[{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3362}],"decl_id":null,"docs":"Represents what kind of tweets should be included in search results.\n","sig":null,"attributes":[{"value":"/Represents what kind of tweets should be included in search results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":214673,"byte_end":214744,"line_start":69,"line_end":69,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215547,"byte_end":215552,"line_start":94,"line_end":94,"column_start":5,"column_end":10},"name":"Miles","qualname":"::search::Distance::Miles","value":"Distance::Miles(f32)","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"A radius given in miles.\n","sig":null,"attributes":[{"value":"/A radius given in miles.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215515,"byte_end":215542,"line_start":93,"line_end":93,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215600,"byte_end":215610,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"name":"Kilometers","qualname":"::search::Distance::Kilometers","value":"Distance::Kilometers(f32)","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"A radius given in kilometers.\n","sig":null,"attributes":[{"value":"/A radius given in kilometers.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215563,"byte_end":215595,"line_start":95,"line_end":95,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215500,"byte_end":215508,"line_start":92,"line_end":92,"column_start":10,"column_end":18},"name":"Distance","qualname":"::search::Distance","value":"Distance::{Miles, Kilometers}","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":860}],"decl_id":null,"docs":"Represents a radius around a given location to return search results for.\n","sig":null,"attributes":[{"value":"/Represents a radius around a given location to return search results for.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215414,"byte_end":215490,"line_start":91,"line_end":91,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215761,"byte_end":215774,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"SearchBuilder","qualname":"::search::SearchBuilder","value":"SearchBuilder {  }","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"decl_id":null,"docs":"Represents a tweet search query before being sent.\n","sig":null,"attributes":[{"value":"/Represents a tweet search query before being sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215620,"byte_end":215673,"line_start":99,"line_end":99,"column_start":1,"column_end":54}},{"value":"must_use = \"SearchBuilder is lazy and won't do anything unless `call`ed\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215674,"byte_end":215749,"line_start":100,"line_end":100,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216196,"byte_end":216200,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"lang","qualname":"<SearchBuilder>::lang","value":"fn <S> (self, lang: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restrict search results to those that have been machine-parsed as the given two-letter\nlanguage code.\n","sig":null,"attributes":[{"value":"/Restrict search results to those that have been machine-parsed as the given two-letter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216073,"byte_end":216162,"line_start":114,"line_end":114,"column_start":5,"column_end":94}},{"value":"/language code.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216167,"byte_end":216184,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216430,"byte_end":216441,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"result_type","qualname":"<SearchBuilder>::result_type","value":"fn (self, result_type: ResultType) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Specify the type of search results to include. The default is `Recent`.\n","sig":null,"attributes":[{"value":"/Specify the type of search results to include. The default is `Recent`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216344,"byte_end":216418,"line_start":123,"line_end":123,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216693,"byte_end":216698,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"count","qualname":"<SearchBuilder>::count","value":"fn (self, count: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Set the number of tweets to return per-page, up to a maximum of 100. The default is 15.\n","sig":null,"attributes":[{"value":"/Set the number of tweets to return per-page, up to a maximum of 100. The default is 15.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216591,"byte_end":216681,"line_start":131,"line_end":131,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217035,"byte_end":217040,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"until","qualname":"<SearchBuilder>::until","value":"fn (self, year: u32, month: u32, day: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Returns tweets created before the given date. Keep in mind that search is limited to the\nlast 7 days of results, so giving a date here that's older than a week will return no\nresults.\n","sig":null,"attributes":[{"value":"/Returns tweets created before the given date. Keep in mind that search is limited to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216823,"byte_end":216914,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/last 7 days of results, so giving a date here that's older than a week will return no","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216919,"byte_end":217007,"line_start":140,"line_end":140,"column_start":5,"column_end":93}},{"value":"/results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217012,"byte_end":217023,"line_start":141,"line_end":141,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217429,"byte_end":217436,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"geocode","qualname":"<SearchBuilder>::geocode","value":"fn (self, latitude: f32, longitude: f32, radius: Distance) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restricts results to users located within the given radius of the given coordinate. This is\npreferably populated from location-tagged tweets, but can be filled in from the user's\nprofile as a fallback.\n","sig":null,"attributes":[{"value":"/Restricts results to users located within the given radius of the given coordinate. This is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217199,"byte_end":217293,"line_start":149,"line_end":149,"column_start":5,"column_end":99}},{"value":"/preferably populated from location-tagged tweets, but can be filled in from the user's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217298,"byte_end":217387,"line_start":150,"line_end":150,"column_start":5,"column_end":94}},{"value":"/profile as a fallback.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217392,"byte_end":217417,"line_start":151,"line_end":151,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217743,"byte_end":217754,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"since_tweet","qualname":"<SearchBuilder>::since_tweet","value":"fn (self, since_id: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restricts results to those with higher IDs than (i.e. that were posted after) the given\ntweet ID.\n","sig":null,"attributes":[{"value":"/Restricts results to those with higher IDs than (i.e. that were posted after) the given","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217624,"byte_end":217714,"line_start":159,"line_end":159,"column_start":5,"column_end":95}},{"value":"/tweet ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217719,"byte_end":217731,"line_start":160,"line_end":160,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":218060,"byte_end":218069,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"max_tweet","qualname":"<SearchBuilder>::max_tweet","value":"fn (self, max_id: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Restricts results to those with IDs no higher than (i.e. were posted earlier than) the given\ntweet ID. Will include the given tweet in search results.\n","sig":null,"attributes":[{"value":"/Restricts results to those with IDs no higher than (i.e. were posted earlier than) the given","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217888,"byte_end":217983,"line_start":168,"line_end":168,"column_start":5,"column_end":100}},{"value":"/tweet ID. Will include the given tweet in search results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":217988,"byte_end":218048,"line_start":169,"line_end":169,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":218283,"byte_end":218287,"line_start":178,"line_end":178,"column_start":18,"column_end":22},"name":"call","qualname":"<SearchBuilder>::call","value":"fn (self, token: &auth::Token) -> Result<Response<SearchResult>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Finalize the search terms and return the first page of responses.\n","sig":null,"attributes":[{"value":"/Finalize the search terms and return the first page of responses.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":218197,"byte_end":218265,"line_start":177,"line_end":177,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220527,"byte_end":220539,"line_start":245,"line_end":245,"column_start":12,"column_end":24},"name":"SearchResult","qualname":"::search::SearchResult","value":"SearchResult { statuses, query, max_id, since_id }","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485}],"decl_id":null,"docs":"Represents a page of search results, along with metadata to request the next or previous page.\n","sig":null,"attributes":[{"value":"/Represents a page of search results, along with metadata to request the next or previous page.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220401,"byte_end":220498,"line_start":243,"line_end":243,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220603,"byte_end":220611,"line_start":247,"line_end":247,"column_start":9,"column_end":17},"name":"statuses","qualname":"::search::SearchResult::statuses","value":"std::vec::Vec<tweet::Tweet>","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":"The list of statuses in this page of results.\n","sig":null,"attributes":[{"value":"/The list of statuses in this page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220546,"byte_end":220594,"line_start":246,"line_end":246,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220760,"byte_end":220765,"line_start":250,"line_end":250,"column_start":9,"column_end":14},"name":"query","qualname":"::search::SearchResult::query","value":"std::string::String","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":"The query used to generate this page of results. Note that changing this will not affect the\n`next_page` method.\n","sig":null,"attributes":[{"value":"/The query used to generate this page of results. Note that changing this will not affect the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220629,"byte_end":220724,"line_start":248,"line_end":248,"column_start":5,"column_end":100}},{"value":"/`next_page` method.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220729,"byte_end":220751,"line_start":249,"line_end":249,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220881,"byte_end":220887,"line_start":252,"line_end":252,"column_start":9,"column_end":15},"name":"max_id","qualname":"::search::SearchResult::max_id","value":"u64","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":"Last tweet id in this page of results. This id can be used in `SearchBuilder::since_tweet`\n","sig":null,"attributes":[{"value":"/Last tweet id in this page of results. This id can be used in `SearchBuilder::since_tweet`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220779,"byte_end":220872,"line_start":251,"line_end":251,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":221001,"byte_end":221009,"line_start":254,"line_end":254,"column_start":9,"column_end":17},"name":"since_id","qualname":"::search::SearchResult::since_id","value":"u64","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":"First tweet id in this page of results. This id can be used in `SearchBuilder::since_tweet`\n","sig":null,"attributes":[{"value":"/First tweet id in this page of results. This id can be used in `SearchBuilder::since_tweet`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":220898,"byte_end":220992,"line_start":253,"line_end":253,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":221151,"byte_end":221156,"line_start":260,"line_end":260,"column_start":18,"column_end":23},"name":"older","qualname":"<SearchResult>::older","value":"fn (&self, token: &auth::Token) -> Result<Response<SearchResult>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Load the next page of search results for the same query.\n","sig":null,"attributes":[{"value":"/Load the next page of search results for the same query.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":221074,"byte_end":221133,"line_start":259,"line_end":259,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":221907,"byte_end":221912,"line_start":280,"line_end":280,"column_start":18,"column_end":23},"name":"newer","qualname":"<SearchResult>::newer","value":"fn (&self, token: &auth::Token) -> Result<Response<SearchResult>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":"Load the previous page of search results for the same query.\n","sig":null,"attributes":[{"value":"/Load the previous page of search results for the same query.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":221826,"byte_end":221889,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":914},{"krate":0,"index":918},{"krate":0,"index":924},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":3488},{"krate":0,"index":3543},{"krate":0,"index":3494},{"krate":0,"index":3545},{"krate":0,"index":3553},{"krate":0,"index":939},{"krate":0,"index":947},{"krate":0,"index":969},{"krate":0,"index":3555},{"krate":0,"index":3571},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3562},{"krate":0,"index":3573},{"krate":0,"index":3589},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3580},{"krate":0,"index":3591},{"krate":0,"index":3603},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3594},{"krate":0,"index":3605},{"krate":0,"index":3625},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3616},{"krate":0,"index":3627},{"krate":0,"index":3655},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3646},{"krate":0,"index":3657},{"krate":0,"index":3701},{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3692},{"krate":0,"index":3703},{"krate":0,"index":3733},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3724}],"decl_id":null,"docs":" Methods to inquire about the Twitter service itself.","sig":null,"attributes":[{"value":"! Methods to inquire about the Twitter service itself.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":222778,"byte_end":222834,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":222835,"byte_end":222838,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! The functions included in this module are supplementary queries that are less about specific","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":222839,"byte_end":222935,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"! actions, and more about your interaction with the Twitter service as a whole. For example, this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":222936,"byte_end":223035,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"! module includes methods to load the [Terms of Service][terms] or [Privacy Policy][privacy], or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223036,"byte_end":223134,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"! to ask about many methods' [rate-limit status][] or receive information about [various","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223135,"byte_end":223225,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"! configuration elements][config] for broad service-level values. All the structs and enums","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223226,"byte_end":223319,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"! contained in this module are connected to one of these methods.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223320,"byte_end":223387,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223388,"byte_end":223391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! [terms]: fn.terms.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223392,"byte_end":223418,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"! [privacy]: fn.privacy.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223419,"byte_end":223449,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"! [rate-limit status]: fn.rate_limit_status.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223450,"byte_end":223500,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"! [config]: fn.config.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223501,"byte_end":223529,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":224106,"byte_end":224111,"line_start":38,"line_end":38,"column_start":14,"column_end":19},"name":"terms","qualname":"::service::terms","value":"fn (token: &auth::Token) -> Result<Response<String>>","parent":null,"children":[],"decl_id":null,"docs":"Returns a future that resolves to the current Twitter Terms of Service as plain text.","sig":null,"attributes":[{"value":"/Returns a future that resolves to the current Twitter Terms of Service as plain text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223841,"byte_end":223929,"line_start":34,"line_end":34,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223930,"byte_end":223933,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/While the official home of Twitter's TOS is <https://twitter.com/tos>, this allows you to obtain a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":223934,"byte_end":224035,"line_start":36,"line_end":36,"column_start":1,"column_end":102}},{"value":"/plain-text copy of it to display in your application.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":224036,"byte_end":224092,"line_start":37,"line_end":37,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":224803,"byte_end":224810,"line_start":56,"line_end":56,"column_start":14,"column_end":21},"name":"privacy","qualname":"::service::privacy","value":"fn (token: &auth::Token) -> Result<Response<String>>","parent":null,"children":[],"decl_id":null,"docs":"Returns a future that resolves to the current Twitter Privacy Policy as plain text.","sig":null,"attributes":[{"value":"/Returns a future that resolves to the current Twitter Privacy Policy as plain text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":224525,"byte_end":224611,"line_start":52,"line_end":52,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":224612,"byte_end":224615,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/While the official home of Twitter's Privacy Policy is <https://twitter.com/privacy>, this allows","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":224616,"byte_end":224716,"line_start":54,"line_end":54,"column_start":1,"column_end":101}},{"value":"/you to obtain a plain-text copy of it to display in your application.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":224717,"byte_end":224789,"line_start":55,"line_end":55,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225756,"byte_end":225762,"line_start":80,"line_end":80,"column_start":14,"column_end":20},"name":"config","qualname":"::service::config","value":"fn (token: &auth::Token) -> Result<Response<Configuration>>","parent":null,"children":[],"decl_id":null,"docs":"Returns a future that resolves to the current configuration from Twitter, including the maximum\nlength of a t.co URL and maximum photo resolutions per size, among others.","sig":null,"attributes":[{"value":"/Returns a future that resolves to the current configuration from Twitter, including the maximum","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225242,"byte_end":225340,"line_start":70,"line_end":70,"column_start":1,"column_end":99}},{"value":"/length of a t.co URL and maximum photo resolutions per size, among others.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225341,"byte_end":225418,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225419,"byte_end":225422,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/From Twitter: \"It is recommended applications request this endpoint when they are loaded, but no","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225423,"byte_end":225522,"line_start":73,"line_end":73,"column_start":1,"column_end":100}},{"value":"/more than once a day.\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225523,"byte_end":225548,"line_start":74,"line_end":74,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225549,"byte_end":225552,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/See the documentation for the [`Configuration`][] struct for a discussion of what individual","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225553,"byte_end":225648,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/fields returned by this function mean.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225649,"byte_end":225690,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225691,"byte_end":225694,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/[`Configuration`]: struct.Configuration.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225695,"byte_end":225742,"line_start":79,"line_end":79,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226366,"byte_end":226383,"line_start":92,"line_end":92,"column_start":14,"column_end":31},"name":"rate_limit_status","qualname":"::service::rate_limit_status","value":"fn (token: &auth::Token) -> Result<Response<RateLimitStatus>>","parent":null,"children":[],"decl_id":null,"docs":"Return the current rate-limit status for all available methods from the authenticated user.","sig":null,"attributes":[{"value":"/Return the current rate-limit status for all available methods from the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":225922,"byte_end":226016,"line_start":85,"line_end":85,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226017,"byte_end":226020,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/The struct returned by this method is organized by what module in egg-mode a given method","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226021,"byte_end":226113,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"/appears in. Note that not every method's status is available through this method; see the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226114,"byte_end":226206,"line_start":88,"line_end":88,"column_start":1,"column_end":93}},{"value":"/documentation for [`RateLimitStatus`][] and its associated enums for more information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226207,"byte_end":226296,"line_start":89,"line_end":89,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226297,"byte_end":226300,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/[`RateLimitStatus`]: struct.RateLimitStatus.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226301,"byte_end":226352,"line_start":91,"line_end":91,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226790,"byte_end":226811,"line_start":101,"line_end":101,"column_start":14,"column_end":35},"name":"rate_limit_status_raw","qualname":"::service::rate_limit_status_raw","value":"fn (token: &auth::Token) -> Result<Response<serde_json::Value>>","parent":null,"children":[],"decl_id":null,"docs":"Like `rate_limit_status`, but returns the raw JSON without processing it. Only intended to\nreturn the full structure so that new methods can be added to `RateLimitStatus` and its\nassociated enums.\n","sig":null,"attributes":[{"value":"/Like `rate_limit_status`, but returns the raw JSON without processing it. Only intended to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226556,"byte_end":226649,"line_start":97,"line_end":97,"column_start":1,"column_end":94}},{"value":"/return the full structure so that new methods can be added to `RateLimitStatus` and its","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226650,"byte_end":226740,"line_start":98,"line_end":98,"column_start":1,"column_end":91}},{"value":"/associated enums.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226741,"byte_end":226761,"line_start":99,"line_end":99,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228753,"byte_end":228766,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"Configuration","qualname":"::service::Configuration","value":"Configuration { dm_text_character_limit, photo_sizes, short_url_length, short_url_length_https, non_username_paths }","parent":null,"children":[{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493}],"decl_id":null,"docs":"Represents a service configuration from Twitter.","sig":null,"attributes":[{"value":"/Represents a service configuration from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":226986,"byte_end":227037,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227038,"byte_end":227041,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/The values returned in this struct are various pieces of information that, while they don't","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227042,"byte_end":227136,"line_start":108,"line_end":108,"column_start":1,"column_end":95}},{"value":"/change often, have the opportunity to change over time and affect things like character counting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227137,"byte_end":227236,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/or whether to route a twitter.com URL to a user lookup or a browser.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227237,"byte_end":227308,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227309,"byte_end":227312,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/While tweets themselves still have a fixed 280-character limit, direct messages have had their","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227313,"byte_end":227410,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"/text limit expanded to 10,000 characters, and that length is communicated here, in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227411,"byte_end":227496,"line_start":113,"line_end":113,"column_start":1,"column_end":86}},{"value":"/`dm_text_character_limit`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227497,"byte_end":227526,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227527,"byte_end":227530,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/For `photo_sizes`, note that if your image is smaller than the dimensions given for a particular","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227531,"byte_end":227630,"line_start":116,"line_end":116,"column_start":1,"column_end":100}},{"value":"/size, that size variant will simply return your source image as-is. If either dimension is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227631,"byte_end":227724,"line_start":117,"line_end":117,"column_start":1,"column_end":94}},{"value":"/larger than its corresponding dimension here, it will be scaled according to the included","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227725,"byte_end":227817,"line_start":118,"line_end":118,"column_start":1,"column_end":93}},{"value":"/`resize` property. In practice this usually means `thumb` will crop to its dimensions, and each","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227818,"byte_end":227916,"line_start":119,"line_end":119,"column_start":1,"column_end":99}},{"value":"/other variant will resize down, keeping its aspect ratio.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227917,"byte_end":227977,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227978,"byte_end":227981,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/For best ways to handle the `short_url_length` fields, see Twitter's documentation on [t.co","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":227982,"byte_end":228076,"line_start":122,"line_end":122,"column_start":1,"column_end":95}},{"value":"/URLs][]. In short, every URL Twitter detects in a new tweet or direct message gets a new t.co","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228077,"byte_end":228173,"line_start":123,"line_end":123,"column_start":1,"column_end":97}},{"value":"/URL created for it, which replaces the original URL in the given text. This affects character","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228174,"byte_end":228270,"line_start":124,"line_end":124,"column_start":1,"column_end":97}},{"value":"/counts for these fields, so if your app is counting characters and detects a URL for these","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228271,"byte_end":228364,"line_start":125,"line_end":125,"column_start":1,"column_end":94}},{"value":"/fields, treat the whole URL as if it were as long as the number of characters given in this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228365,"byte_end":228459,"line_start":126,"line_end":126,"column_start":1,"column_end":95}},{"value":"/struct.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228460,"byte_end":228470,"line_start":127,"line_end":127,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228471,"byte_end":228474,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/[t.co URLs]: https://dev.twitter.com/overview/t.co","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228475,"byte_end":228528,"line_start":129,"line_end":129,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228529,"byte_end":228532,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/Finally, loading `non_username_paths` allows you to handle `twitter.com/[name]` links as if they","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228533,"byte_end":228632,"line_start":131,"line_end":131,"column_start":1,"column_end":100}},{"value":"/were a user mention, while still keeping site-level links working properly.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228633,"byte_end":228711,"line_start":132,"line_end":132,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228824,"byte_end":228847,"line_start":136,"line_end":136,"column_start":9,"column_end":32},"name":"dm_text_character_limit","qualname":"::service::Configuration::dm_text_character_limit","value":"i32","parent":{"krate":0,"index":3488},"children":[],"decl_id":null,"docs":"The character limit in direct messages.\n","sig":null,"attributes":[{"value":"/The character limit in direct messages.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228773,"byte_end":228815,"line_start":135,"line_end":135,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228921,"byte_end":228932,"line_start":138,"line_end":138,"column_start":9,"column_end":20},"name":"photo_sizes","qualname":"::service::Configuration::photo_sizes","value":"entities::MediaSizes","parent":{"krate":0,"index":3488},"children":[],"decl_id":null,"docs":"The maximum dimensions for each photo size variant.\n","sig":null,"attributes":[{"value":"/The maximum dimensions for each photo size variant.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228858,"byte_end":228912,"line_start":137,"line_end":137,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229044,"byte_end":229060,"line_start":140,"line_end":140,"column_start":9,"column_end":25},"name":"short_url_length","qualname":"::service::Configuration::short_url_length","value":"i32","parent":{"krate":0,"index":3488},"children":[],"decl_id":null,"docs":"The maximum length for a t.co URL when given a URL with protocol `http`.\n","sig":null,"attributes":[{"value":"/The maximum length for a t.co URL when given a URL with protocol `http`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":228960,"byte_end":229035,"line_start":139,"line_end":139,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229156,"byte_end":229178,"line_start":142,"line_end":142,"column_start":9,"column_end":31},"name":"short_url_length_https","qualname":"::service::Configuration::short_url_length_https","value":"i32","parent":{"krate":0,"index":3488},"children":[],"decl_id":null,"docs":"The maximum length for a t.co URL when given a URL with protocol `https`.\n","sig":null,"attributes":[{"value":"/The maximum length for a t.co URL when given a URL with protocol `https`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229071,"byte_end":229147,"line_start":141,"line_end":141,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":3493},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229290,"byte_end":229308,"line_start":144,"line_end":144,"column_start":9,"column_end":27},"name":"non_username_paths","qualname":"::service::Configuration::non_username_paths","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":3488},"children":[],"decl_id":null,"docs":"A list of URL slugs that are not valid usernames when in a URL like `twitter.com/[slug]`.\n","sig":null,"attributes":[{"value":"/A list of URL slugs that are not valid usernames when in a URL like `twitter.com/[slug]`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229189,"byte_end":229281,"line_start":143,"line_end":143,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230405,"byte_end":230420,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"RateLimitStatus","qualname":"::service::RateLimitStatus","value":"RateLimitStatus { direct, place, search, service, tweet, user, list }","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552}],"decl_id":null,"docs":" Represents the current rate-limit status of many Twitter API calls.","sig":null,"attributes":[{"value":"/ Represents the current rate-limit status of many Twitter API calls.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229326,"byte_end":229397,"line_start":147,"line_end":147,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229398,"byte_end":229401,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This is organized by module, so for example, if you wanted to see your rate-limit status for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229402,"byte_end":229498,"line_start":149,"line_end":149,"column_start":1,"column_end":97}},{"value":"/ `tweet::home_timeline`, you could access it like this:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229499,"byte_end":229557,"line_start":150,"line_end":150,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229558,"byte_end":229561,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229562,"byte_end":229580,"line_start":152,"line_end":152,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229581,"byte_end":229607,"line_start":153,"line_end":153,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229608,"byte_end":229628,"line_start":154,"line_end":154,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229629,"byte_end":229652,"line_start":155,"line_end":155,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229653,"byte_end":229695,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # let status = egg_mode::service::rate_limit_status(&token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229696,"byte_end":229775,"line_start":157,"line_end":157,"column_start":1,"column_end":80}},{"value":"/ use egg_mode::service::TweetMethod;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229776,"byte_end":229815,"line_start":158,"line_end":158,"column_start":1,"column_end":40}},{"value":"/ println!(\"home_timeline calls remaining: {}\",","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229816,"byte_end":229865,"line_start":159,"line_end":159,"column_start":1,"column_end":50}},{"value":"/          status.tweet[&TweetMethod::HomeTimeline].rate_limit_status.remaining);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229866,"byte_end":229949,"line_start":160,"line_end":160,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229950,"byte_end":229957,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229958,"byte_end":229965,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229966,"byte_end":229969,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It's important to note that not every API method is available through this call. Namely, most","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":229970,"byte_end":230067,"line_start":164,"line_end":164,"column_start":1,"column_end":98}},{"value":"/ calls that require a POST under-the-hood (those that add or modify data with the Twitter","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230068,"byte_end":230160,"line_start":165,"line_end":165,"column_start":1,"column_end":93}},{"value":"/ service) are not shown through this method. For a listing of methods available for rate-limit","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230161,"byte_end":230258,"line_start":166,"line_end":166,"column_start":1,"column_end":98}},{"value":"/ querying, see the `*Method` enums available in [`egg_mode::service`][].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230259,"byte_end":230334,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230335,"byte_end":230338,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`egg_mode::service`]: index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230339,"byte_end":230376,"line_start":169,"line_end":169,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230496,"byte_end":230502,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"name":"direct","qualname":"::service::RateLimitStatus::direct","value":"std::collections::HashMap<service::DirectMethod, common::response::Response<()>>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"The rate-limit status for methods in the `direct` module.\n","sig":null,"attributes":[{"value":"/The rate-limit status for methods in the `direct` module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230427,"byte_end":230487,"line_start":172,"line_end":172,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230613,"byte_end":230618,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"name":"place","qualname":"::service::RateLimitStatus::place","value":"std::collections::HashMap<service::PlaceMethod, common::response::Response<()>>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"The rate-limit status for methods in the `place` module.\n","sig":null,"attributes":[{"value":"/The rate-limit status for methods in the `place` module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230545,"byte_end":230604,"line_start":174,"line_end":174,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230729,"byte_end":230735,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"name":"search","qualname":"::service::RateLimitStatus::search","value":"std::collections::HashMap<service::SearchMethod, common::response::Response<()>>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"The rate-limit status for methods in the `search` module.\n","sig":null,"attributes":[{"value":"/The rate-limit status for methods in the `search` module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230660,"byte_end":230720,"line_start":176,"line_end":176,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230848,"byte_end":230855,"line_start":179,"line_end":179,"column_start":9,"column_end":16},"name":"service","qualname":"::service::RateLimitStatus::service","value":"std::collections::HashMap<service::ServiceMethod, common::response::Response<()>>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"The rate-limit status for methods in the `service` module.\n","sig":null,"attributes":[{"value":"/The rate-limit status for methods in the `service` module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230778,"byte_end":230839,"line_start":178,"line_end":178,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230967,"byte_end":230972,"line_start":181,"line_end":181,"column_start":9,"column_end":14},"name":"tweet","qualname":"::service::RateLimitStatus::tweet","value":"std::collections::HashMap<service::TweetMethod, common::response::Response<()>>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"The rate-limit status for methods in the `tweet` module.\n","sig":null,"attributes":[{"value":"/The rate-limit status for methods in the `tweet` module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":230899,"byte_end":230958,"line_start":180,"line_end":180,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":231081,"byte_end":231085,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"name":"user","qualname":"::service::RateLimitStatus::user","value":"std::collections::HashMap<service::UserMethod, common::response::Response<()>>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"The rate-limit status for methods in the `user` module.\n","sig":null,"attributes":[{"value":"/The rate-limit status for methods in the `user` module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":231014,"byte_end":231072,"line_start":182,"line_end":182,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":231193,"byte_end":231197,"line_start":185,"line_end":185,"column_start":9,"column_end":13},"name":"list","qualname":"::service::RateLimitStatus::list","value":"std::collections::HashMap<service::ListMethod, common::response::Response<()>>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"The rate-limit status for methods in the `list` module.\n","sig":null,"attributes":[{"value":"/The rate-limit status for methods in the `list` module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":231126,"byte_end":231184,"line_start":184,"line_end":184,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3556},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238467,"byte_end":238471,"line_start":347,"line_end":347,"column_start":5,"column_end":9},"name":"Show","qualname":"::service::DirectMethod::Show","value":"DirectMethod::Show","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":"`direct::show`\n","sig":null,"attributes":[{"value":"/`direct::show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238445,"byte_end":238462,"line_start":346,"line_end":346,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3558},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238499,"byte_end":238503,"line_start":349,"line_end":349,"column_start":5,"column_end":9},"name":"Sent","qualname":"::service::DirectMethod::Sent","value":"DirectMethod::Sent","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":"`direct::sent`\n","sig":null,"attributes":[{"value":"/`direct::sent`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238477,"byte_end":238494,"line_start":348,"line_end":348,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238535,"byte_end":238543,"line_start":351,"line_end":351,"column_start":5,"column_end":13},"name":"Received","qualname":"::service::DirectMethod::Received","value":"DirectMethod::Received","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":"`direct::received`\n","sig":null,"attributes":[{"value":"/`direct::received`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238509,"byte_end":238530,"line_start":350,"line_end":350,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238426,"byte_end":238438,"line_start":345,"line_end":345,"column_start":10,"column_end":22},"name":"DirectMethod","qualname":"::service::DirectMethod","value":"DirectMethod::{Show, Sent, Received}","parent":null,"children":[{"krate":0,"index":3556},{"krate":0,"index":3558},{"krate":0,"index":3560}],"decl_id":null,"docs":"Method identifiers from the `direct` module, for use by `rate_limit_status`.\n","sig":null,"attributes":[{"value":"/Method identifiers from the `direct` module, for use by `rate_limit_status`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238299,"byte_end":238378,"line_start":343,"line_end":343,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238713,"byte_end":238717,"line_start":358,"line_end":358,"column_start":5,"column_end":9},"name":"Show","qualname":"::service::PlaceMethod::Show","value":"PlaceMethod::Show","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":"`place::show`\n","sig":null,"attributes":[{"value":"/`place::show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238692,"byte_end":238708,"line_start":357,"line_end":357,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238819,"byte_end":238825,"line_start":360,"line_end":360,"column_start":5,"column_end":11},"name":"Search","qualname":"::service::PlaceMethod::Search","value":"PlaceMethod::Search","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":"`place::search_point`, `place::search_query`, `place::search_ip` and `place::search_url`\n","sig":null,"attributes":[{"value":"/`place::search_point`, `place::search_query`, `place::search_ip` and `place::search_url`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238723,"byte_end":238814,"line_start":359,"line_end":359,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238896,"byte_end":238910,"line_start":362,"line_end":362,"column_start":5,"column_end":19},"name":"ReverseGeocode","qualname":"::service::PlaceMethod::ReverseGeocode","value":"PlaceMethod::ReverseGeocode","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":"`place::reverse_geocode` and `place::reverse_geocode_url`\n","sig":null,"attributes":[{"value":"/`place::reverse_geocode` and `place::reverse_geocode_url`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238831,"byte_end":238891,"line_start":361,"line_end":361,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238674,"byte_end":238685,"line_start":356,"line_end":356,"column_start":10,"column_end":21},"name":"PlaceMethod","qualname":"::service::PlaceMethod","value":"PlaceMethod::{Show, Search, ReverseGeocode}","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3578}],"decl_id":null,"docs":"Method identifiers from the `place` module, for use by `rate_limit_status`.\n","sig":null,"attributes":[{"value":"/Method identifiers from the `place` module, for use by `rate_limit_status`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238548,"byte_end":238626,"line_start":354,"line_end":354,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239085,"byte_end":239091,"line_start":369,"line_end":369,"column_start":5,"column_end":11},"name":"Search","qualname":"::service::SearchMethod::Search","value":"SearchMethod::Search","parent":{"krate":0,"index":3591},"children":[],"decl_id":null,"docs":"`search::search`\n","sig":null,"attributes":[{"value":"/`search::search`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239061,"byte_end":239080,"line_start":368,"line_end":368,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239042,"byte_end":239054,"line_start":367,"line_end":367,"column_start":10,"column_end":22},"name":"SearchMethod","qualname":"::service::SearchMethod","value":"SearchMethod::{Search}","parent":null,"children":[{"krate":0,"index":3592}],"decl_id":null,"docs":"Method identifiers from the `search` module, for use by `rate_limit_status`.\n","sig":null,"attributes":[{"value":"/Method identifiers from the `search` module, for use by `rate_limit_status`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":238915,"byte_end":238994,"line_start":365,"line_end":365,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239338,"byte_end":239343,"line_start":377,"line_end":377,"column_start":5,"column_end":10},"name":"Terms","qualname":"::service::ServiceMethod::Terms","value":"ServiceMethod::Terms","parent":{"krate":0,"index":3605},"children":[],"decl_id":null,"docs":"`service::terms`\n","sig":null,"attributes":[{"value":"/`service::terms`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239314,"byte_end":239333,"line_start":376,"line_end":376,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3608},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239375,"byte_end":239382,"line_start":379,"line_end":379,"column_start":5,"column_end":12},"name":"Privacy","qualname":"::service::ServiceMethod::Privacy","value":"ServiceMethod::Privacy","parent":{"krate":0,"index":3605},"children":[],"decl_id":null,"docs":"`service::privacy`\n","sig":null,"attributes":[{"value":"/`service::privacy`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239349,"byte_end":239370,"line_start":378,"line_end":378,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3610},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239413,"byte_end":239419,"line_start":381,"line_end":381,"column_start":5,"column_end":11},"name":"Config","qualname":"::service::ServiceMethod::Config","value":"ServiceMethod::Config","parent":{"krate":0,"index":3605},"children":[],"decl_id":null,"docs":"`service::config`\n","sig":null,"attributes":[{"value":"/`service::config`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239388,"byte_end":239408,"line_start":380,"line_end":380,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239461,"byte_end":239476,"line_start":383,"line_end":383,"column_start":5,"column_end":20},"name":"RateLimitStatus","qualname":"::service::ServiceMethod::RateLimitStatus","value":"ServiceMethod::RateLimitStatus","parent":{"krate":0,"index":3605},"children":[],"decl_id":null,"docs":"`service::rate_limit_status`\n","sig":null,"attributes":[{"value":"/`service::rate_limit_status`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239425,"byte_end":239456,"line_start":382,"line_end":382,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3614},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239505,"byte_end":239517,"line_start":385,"line_end":385,"column_start":5,"column_end":17},"name":"VerifyTokens","qualname":"::service::ServiceMethod::VerifyTokens","value":"ServiceMethod::VerifyTokens","parent":{"krate":0,"index":3605},"children":[],"decl_id":null,"docs":"`verify_tokens`\n","sig":null,"attributes":[{"value":"/`verify_tokens`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239482,"byte_end":239500,"line_start":384,"line_end":384,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239294,"byte_end":239307,"line_start":375,"line_end":375,"column_start":10,"column_end":23},"name":"ServiceMethod","qualname":"::service::ServiceMethod","value":"ServiceMethod::{Terms, Privacy, Config, RateLimitStatus, VerifyTokens}","parent":null,"children":[{"krate":0,"index":3606},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3614}],"decl_id":null,"docs":"Method identifiers from the `service` module, for use by `rate_limit_status`. Also includes\n`verify_tokens` from the egg-mode top-level methods.\n","sig":null,"attributes":[{"value":"/Method identifiers from the `service` module, for use by `rate_limit_status`. Also includes","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239096,"byte_end":239190,"line_start":372,"line_end":372,"column_start":1,"column_end":95}},{"value":"/`verify_tokens` from the egg-mode top-level methods.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239191,"byte_end":239246,"line_start":373,"line_end":373,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239687,"byte_end":239691,"line_start":392,"line_end":392,"column_start":5,"column_end":9},"name":"Show","qualname":"::service::TweetMethod::Show","value":"TweetMethod::Show","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::show`\n","sig":null,"attributes":[{"value":"/`tweet::show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239666,"byte_end":239682,"line_start":391,"line_end":391,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239720,"byte_end":239726,"line_start":394,"line_end":394,"column_start":5,"column_end":11},"name":"Lookup","qualname":"::service::TweetMethod::Lookup","value":"TweetMethod::Lookup","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::lookup`\n","sig":null,"attributes":[{"value":"/`tweet::lookup`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239697,"byte_end":239715,"line_start":393,"line_end":393,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239762,"byte_end":239774,"line_start":396,"line_end":396,"column_start":5,"column_end":17},"name":"RetweetersOf","qualname":"::service::TweetMethod::RetweetersOf","value":"TweetMethod::RetweetersOf","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::retweeters_of`\n","sig":null,"attributes":[{"value":"/`tweet::retweeters_of`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239732,"byte_end":239757,"line_start":395,"line_end":395,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239808,"byte_end":239818,"line_start":398,"line_end":398,"column_start":5,"column_end":15},"name":"RetweetsOf","qualname":"::service::TweetMethod::RetweetsOf","value":"TweetMethod::RetweetsOf","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::retweets_of`\n","sig":null,"attributes":[{"value":"/`tweet::retweets_of`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239780,"byte_end":239803,"line_start":397,"line_end":397,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239854,"byte_end":239866,"line_start":400,"line_end":400,"column_start":5,"column_end":17},"name":"HomeTimeline","qualname":"::service::TweetMethod::HomeTimeline","value":"TweetMethod::HomeTimeline","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::home_timeline`\n","sig":null,"attributes":[{"value":"/`tweet::home_timeline`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239824,"byte_end":239849,"line_start":399,"line_end":399,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239906,"byte_end":239922,"line_start":402,"line_end":402,"column_start":5,"column_end":21},"name":"MentionsTimeline","qualname":"::service::TweetMethod::MentionsTimeline","value":"TweetMethod::MentionsTimeline","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::mentions_timeline`\n","sig":null,"attributes":[{"value":"/`tweet::mentions_timeline`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239872,"byte_end":239901,"line_start":401,"line_end":401,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239958,"byte_end":239970,"line_start":404,"line_end":404,"column_start":5,"column_end":17},"name":"UserTimeline","qualname":"::service::TweetMethod::UserTimeline","value":"TweetMethod::UserTimeline","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::user_timeline`\n","sig":null,"attributes":[{"value":"/`tweet::user_timeline`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239928,"byte_end":239953,"line_start":403,"line_end":403,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240007,"byte_end":240019,"line_start":406,"line_end":406,"column_start":5,"column_end":17},"name":"RetweetsOfMe","qualname":"::service::TweetMethod::RetweetsOfMe","value":"TweetMethod::RetweetsOfMe","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::retweets_of_me`\n","sig":null,"attributes":[{"value":"/`tweet::retweets_of_me`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239976,"byte_end":240002,"line_start":405,"line_end":405,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240050,"byte_end":240057,"line_start":408,"line_end":408,"column_start":5,"column_end":12},"name":"LikedBy","qualname":"::service::TweetMethod::LikedBy","value":"TweetMethod::LikedBy","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"`tweet::liked_by`\n","sig":null,"attributes":[{"value":"/`tweet::liked_by`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240025,"byte_end":240045,"line_start":407,"line_end":407,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239648,"byte_end":239659,"line_start":390,"line_end":390,"column_start":10,"column_end":21},"name":"TweetMethod","qualname":"::service::TweetMethod","value":"TweetMethod::{Show, Lookup, RetweetersOf, RetweetsOf, HomeTimeline, MentionsTimeline, UserTimeline, RetweetsOfMe, LikedBy}","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3638},{"krate":0,"index":3640},{"krate":0,"index":3642},{"krate":0,"index":3644}],"decl_id":null,"docs":"Method identifiers from the `tweet` module, for use by `rate_limit_status`.\n","sig":null,"attributes":[{"value":"/Method identifiers from the `tweet` module, for use by `rate_limit_status`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":239522,"byte_end":239600,"line_start":388,"line_end":388,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240224,"byte_end":240228,"line_start":415,"line_end":415,"column_start":5,"column_end":9},"name":"Show","qualname":"::service::UserMethod::Show","value":"UserMethod::Show","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::show`\n","sig":null,"attributes":[{"value":"/`user::show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240204,"byte_end":240219,"line_start":414,"line_end":414,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240256,"byte_end":240262,"line_start":417,"line_end":417,"column_start":5,"column_end":11},"name":"Lookup","qualname":"::service::UserMethod::Lookup","value":"UserMethod::Lookup","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::lookup`\n","sig":null,"attributes":[{"value":"/`user::lookup`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240234,"byte_end":240251,"line_start":416,"line_end":416,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240303,"byte_end":240320,"line_start":419,"line_end":419,"column_start":5,"column_end":22},"name":"FriendsNoRetweets","qualname":"::service::UserMethod::FriendsNoRetweets","value":"UserMethod::FriendsNoRetweets","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::friends_no_retweets`\n","sig":null,"attributes":[{"value":"/`user::friends_no_retweets`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240268,"byte_end":240298,"line_start":418,"line_end":418,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240350,"byte_end":240358,"line_start":421,"line_end":421,"column_start":5,"column_end":13},"name":"Relation","qualname":"::service::UserMethod::Relation","value":"UserMethod::Relation","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::relation`\n","sig":null,"attributes":[{"value":"/`user::relation`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240326,"byte_end":240345,"line_start":420,"line_end":420,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3666},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240395,"byte_end":240409,"line_start":423,"line_end":423,"column_start":5,"column_end":19},"name":"RelationLookup","qualname":"::service::UserMethod::RelationLookup","value":"UserMethod::RelationLookup","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::relation_lookup`\n","sig":null,"attributes":[{"value":"/`user::relation_lookup`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240364,"byte_end":240390,"line_start":422,"line_end":422,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240437,"byte_end":240443,"line_start":425,"line_end":425,"column_start":5,"column_end":11},"name":"Search","qualname":"::service::UserMethod::Search","value":"UserMethod::Search","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::search`\n","sig":null,"attributes":[{"value":"/`user::search`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240415,"byte_end":240432,"line_start":424,"line_end":424,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240475,"byte_end":240484,"line_start":427,"line_end":427,"column_start":5,"column_end":14},"name":"FriendsOf","qualname":"::service::UserMethod::FriendsOf","value":"UserMethod::FriendsOf","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::friends_of`\n","sig":null,"attributes":[{"value":"/`user::friends_of`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240449,"byte_end":240470,"line_start":426,"line_end":426,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240517,"byte_end":240527,"line_start":429,"line_end":429,"column_start":5,"column_end":15},"name":"FriendsIds","qualname":"::service::UserMethod::FriendsIds","value":"UserMethod::FriendsIds","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::friends_ids`\n","sig":null,"attributes":[{"value":"/`user::friends_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240490,"byte_end":240512,"line_start":428,"line_end":428,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3674},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240561,"byte_end":240572,"line_start":431,"line_end":431,"column_start":5,"column_end":16},"name":"FollowersOf","qualname":"::service::UserMethod::FollowersOf","value":"UserMethod::FollowersOf","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::followers_of`\n","sig":null,"attributes":[{"value":"/`user::followers_of`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240533,"byte_end":240556,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240607,"byte_end":240619,"line_start":433,"line_end":433,"column_start":5,"column_end":17},"name":"FollowersIds","qualname":"::service::UserMethod::FollowersIds","value":"UserMethod::FollowersIds","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::followers_ids`\n","sig":null,"attributes":[{"value":"/`user::followers_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240578,"byte_end":240602,"line_start":432,"line_end":432,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240647,"byte_end":240653,"line_start":435,"line_end":435,"column_start":5,"column_end":11},"name":"Blocks","qualname":"::service::UserMethod::Blocks","value":"UserMethod::Blocks","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::blocks`\n","sig":null,"attributes":[{"value":"/`user::blocks`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240625,"byte_end":240642,"line_start":434,"line_end":434,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240685,"byte_end":240694,"line_start":437,"line_end":437,"column_start":5,"column_end":14},"name":"BlocksIds","qualname":"::service::UserMethod::BlocksIds","value":"UserMethod::BlocksIds","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::blocks_ids`\n","sig":null,"attributes":[{"value":"/`user::blocks_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240659,"byte_end":240680,"line_start":436,"line_end":436,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240721,"byte_end":240726,"line_start":439,"line_end":439,"column_start":5,"column_end":10},"name":"Mutes","qualname":"::service::UserMethod::Mutes","value":"UserMethod::Mutes","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::mutes`\n","sig":null,"attributes":[{"value":"/`user::mutes`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240700,"byte_end":240716,"line_start":438,"line_end":438,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240757,"byte_end":240765,"line_start":441,"line_end":441,"column_start":5,"column_end":13},"name":"MutesIds","qualname":"::service::UserMethod::MutesIds","value":"UserMethod::MutesIds","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::mutes_ids`\n","sig":null,"attributes":[{"value":"/`user::mutes_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240732,"byte_end":240752,"line_start":440,"line_end":440,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240804,"byte_end":240820,"line_start":443,"line_end":443,"column_start":5,"column_end":21},"name":"IncomingRequests","qualname":"::service::UserMethod::IncomingRequests","value":"UserMethod::IncomingRequests","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::incoming_requests`\n","sig":null,"attributes":[{"value":"/`user::incoming_requests`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240771,"byte_end":240799,"line_start":442,"line_end":442,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240859,"byte_end":240875,"line_start":445,"line_end":445,"column_start":5,"column_end":21},"name":"OutgoingRequests","qualname":"::service::UserMethod::OutgoingRequests","value":"UserMethod::OutgoingRequests","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::outgoing_requests`\n","sig":null,"attributes":[{"value":"/`user::outgoing_requests`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240826,"byte_end":240854,"line_start":444,"line_end":444,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240908,"byte_end":240918,"line_start":447,"line_end":447,"column_start":5,"column_end":15},"name":"ReportSpam","qualname":"::service::UserMethod::ReportSpam","value":"UserMethod::ReportSpam","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":"`user::report_spam`\n","sig":null,"attributes":[{"value":"/`user::report_spam`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240881,"byte_end":240903,"line_start":446,"line_end":446,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240187,"byte_end":240197,"line_start":413,"line_end":413,"column_start":10,"column_end":20},"name":"UserMethod","qualname":"::service::UserMethod","value":"UserMethod::{Show, Lookup, FriendsNoRetweets, Relation, RelationLookup, Search, FriendsOf, FriendsIds, FollowersOf, FollowersIds, Blocks, BlocksIds, Mutes, MutesIds, IncomingRequests, OutgoingRequests, ReportSpam}","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3678},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3684},{"krate":0,"index":3686},{"krate":0,"index":3688},{"krate":0,"index":3690}],"decl_id":null,"docs":"Method identifiers from the `user` module, for use by `rate_limit_status`.\n","sig":null,"attributes":[{"value":"/Method identifiers from the `user` module, for use by `rate_limit_status`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240062,"byte_end":240139,"line_start":411,"line_end":411,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3704},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241085,"byte_end":241089,"line_start":454,"line_end":454,"column_start":5,"column_end":9},"name":"Show","qualname":"::service::ListMethod::Show","value":"ListMethod::Show","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::show`\n","sig":null,"attributes":[{"value":"/`list::show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241065,"byte_end":241080,"line_start":453,"line_end":453,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3706},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241121,"byte_end":241131,"line_start":456,"line_end":456,"column_start":5,"column_end":15},"name":"Ownerships","qualname":"::service::ListMethod::Ownerships","value":"ListMethod::Ownerships","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::ownerships`\n","sig":null,"attributes":[{"value":"/`list::ownerships`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241095,"byte_end":241116,"line_start":455,"line_end":455,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3708},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241166,"byte_end":241179,"line_start":458,"line_end":458,"column_start":5,"column_end":18},"name":"Subscriptions","qualname":"::service::ListMethod::Subscriptions","value":"ListMethod::Subscriptions","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::subscriptions`\n","sig":null,"attributes":[{"value":"/`list::subscriptions`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241137,"byte_end":241161,"line_start":457,"line_end":457,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241205,"byte_end":241209,"line_start":460,"line_end":460,"column_start":5,"column_end":9},"name":"List","qualname":"::service::ListMethod::List","value":"ListMethod::List","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::list`\n","sig":null,"attributes":[{"value":"/`list::list`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241185,"byte_end":241200,"line_start":459,"line_end":459,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241238,"byte_end":241245,"line_start":462,"line_end":462,"column_start":5,"column_end":12},"name":"Members","qualname":"::service::ListMethod::Members","value":"ListMethod::Members","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::members`\n","sig":null,"attributes":[{"value":"/`list::members`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241215,"byte_end":241233,"line_start":461,"line_end":461,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3714},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241278,"byte_end":241289,"line_start":464,"line_end":464,"column_start":5,"column_end":16},"name":"Memberships","qualname":"::service::ListMethod::Memberships","value":"ListMethod::Memberships","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::memberships`\n","sig":null,"attributes":[{"value":"/`list::memberships`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241251,"byte_end":241273,"line_start":463,"line_end":463,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241320,"byte_end":241328,"line_start":466,"line_end":466,"column_start":5,"column_end":13},"name":"IsMember","qualname":"::service::ListMethod::IsMember","value":"ListMethod::IsMember","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::is_member`\n","sig":null,"attributes":[{"value":"/`list::is_member`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241295,"byte_end":241315,"line_start":465,"line_end":465,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241361,"byte_end":241372,"line_start":468,"line_end":468,"column_start":5,"column_end":16},"name":"Subscribers","qualname":"::service::ListMethod::Subscribers","value":"ListMethod::Subscribers","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::subscribers`\n","sig":null,"attributes":[{"value":"/`list::subscribers`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241334,"byte_end":241356,"line_start":467,"line_end":467,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241407,"byte_end":241419,"line_start":470,"line_end":470,"column_start":5,"column_end":17},"name":"IsSubscribed","qualname":"::service::ListMethod::IsSubscribed","value":"ListMethod::IsSubscribed","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::is_subscribed`\n","sig":null,"attributes":[{"value":"/`list::is_subscribed`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241378,"byte_end":241402,"line_start":469,"line_end":469,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241449,"byte_end":241457,"line_start":472,"line_end":472,"column_start":5,"column_end":13},"name":"Statuses","qualname":"::service::ListMethod::Statuses","value":"ListMethod::Statuses","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":"`list::statuses`\n","sig":null,"attributes":[{"value":"/`list::statuses`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241425,"byte_end":241444,"line_start":471,"line_end":471,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":241048,"byte_end":241058,"line_start":452,"line_end":452,"column_start":10,"column_end":20},"name":"ListMethod","qualname":"::service::ListMethod","value":"ListMethod::{Show, Ownerships, Subscriptions, List, Members, Memberships, IsMember, Subscribers, IsSubscribed, Statuses}","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3722}],"decl_id":null,"docs":"Method identifiers from the `list` module, for use by `rate_limit_status`.\n","sig":null,"attributes":[{"value":"/Method identifiers from the `list` module, for use by `rate_limit_status`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":240923,"byte_end":241000,"line_start":450,"line_end":450,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":3735},{"krate":0,"index":3764},{"krate":0,"index":998},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":3788},{"krate":0,"index":3840},{"krate":0,"index":3838},{"krate":0,"index":3836},{"krate":0,"index":3795},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1028},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":3841},{"krate":0,"index":3861},{"krate":0,"index":3859},{"krate":0,"index":3858},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3844},{"krate":0,"index":1046},{"krate":0,"index":1048}],"decl_id":null,"docs":" Access to the Streaming API.","sig":null,"attributes":[{"value":"! Access to the Streaming API.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":241942,"byte_end":241974,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":241975,"byte_end":241978,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! The Streaming API gives real-time access to tweets, narrowed by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":241979,"byte_end":242046,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"! search phrases, user id or location. A standard user is able to filter by up to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242047,"byte_end":242130,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"! 400 keywords, 5,000 user ids and 25 locations.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242131,"byte_end":242181,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"! See the [official documentation](https://developer.twitter.com/en/docs/tweets/filter-realtime/overview) for more details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242182,"byte_end":242307,"line_start":10,"line_end":10,"column_start":1,"column_end":126}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242308,"byte_end":242311,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! ### Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242312,"byte_end":242327,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"! ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242328,"byte_end":242346,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"! # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242347,"byte_end":242367,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"! # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242368,"byte_end":242391,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"! # let token: egg_mode::Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242392,"byte_end":242444,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"! use egg_mode::stream::{filter, StreamMessage};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242445,"byte_end":242495,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"! use futures::{Stream, TryStreamExt};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242496,"byte_end":242536,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242537,"byte_end":242540,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! let stream = filter()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242541,"byte_end":242566,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"!     // find tweets mentioning any of the following:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242567,"byte_end":242622,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     .track(&[\"rustlang\", \"python\", \"java\", \"javascript\"])","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242623,"byte_end":242684,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"!     .start(&token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242685,"byte_end":242708,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242709,"byte_end":242712,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! stream.try_for_each(|m| {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242713,"byte_end":242742,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"!     // Check the message type and print tweet to console","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242743,"byte_end":242803,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"!     if let StreamMessage::Tweet(tweet) = m {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242804,"byte_end":242852,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"!         println!(\"Received tweet from {}:\\n{}\\n\", tweet.user.unwrap().name, tweet.text);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242853,"byte_end":242945,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"!     }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242946,"byte_end":242955,"line_start":29,"line_end":29,"column_start":1,"column_end":10}},{"value":"!     futures::future::ok(())","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242956,"byte_end":242987,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"! }).await.expect(\"Stream error\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":242988,"byte_end":243024,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"! # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243025,"byte_end":243032,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243033,"byte_end":243040,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ### Connection notes","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243041,"byte_end":243065,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"! To maintain a stable streaming connection requires a certain amount of effort to take","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243066,"byte_end":243155,"line_start":35,"line_end":35,"column_start":1,"column_end":90}},{"value":"! account of random disconnects, networks resets and stalls. The key points are:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243156,"byte_end":243238,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243239,"byte_end":243242,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! * The Twitter API sends a Ping message every 30 seconds of message inactivity. So set a timeout","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243243,"byte_end":243342,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"! such that after (say) 1 minute of inactivity, the client bounces the connection. This will protect","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243343,"byte_end":243445,"line_start":39,"line_end":39,"column_start":1,"column_end":103}},{"value":"! against network stalls","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243446,"byte_end":243472,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"! * Twitter will rate-limit reconnect attempts. So attempt conenctions with a linear or exponential","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243473,"byte_end":243574,"line_start":41,"line_end":41,"column_start":1,"column_end":102}},{"value":"! backoff strategy","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243575,"byte_end":243595,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"! * In the case of an unreliable connection (e.g. mobile network), fall back to the polling API","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243596,"byte_end":243693,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243694,"byte_end":243697,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! The [official guide](https://developer.twitter.com/en/docs/tweets/filter-realtime/guides/connecting) has more information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":243698,"byte_end":243824,"line_start":45,"line_end":45,"column_start":1,"column_end":127}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244524,"byte_end":244528,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"Ping","qualname":"::stream::StreamMessage::Ping","value":"StreamMessage::Ping","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" A blank line, sent periodically to keep the connection alive.\n","sig":null,"attributes":[{"value":"/ A blank line, sent periodically to keep the connection alive.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244454,"byte_end":244519,"line_start":69,"line_end":69,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244656,"byte_end":244666,"line_start":73,"line_end":73,"column_start":5,"column_end":15},"name":"FriendList","qualname":"::stream::StreamMessage::FriendList","value":"StreamMessage::FriendList(Vec<u64>)","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" A list of accounts the authenticated user follows, sent at the beginning of the session for\n user streams.\n","sig":null,"attributes":[{"value":"/ A list of accounts the authenticated user follows, sent at the beginning of the session for","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244534,"byte_end":244629,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ user streams.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244634,"byte_end":244651,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244833,"byte_end":244838,"line_start":78,"line_end":78,"column_start":5,"column_end":10},"name":"Tweet","qualname":"::stream::StreamMessage::Tweet","value":"StreamMessage::Tweet(Tweet)","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" A new tweet.","sig":null,"attributes":[{"value":"/ A new tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244682,"byte_end":244698,"line_start":74,"line_end":74,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244703,"byte_end":244706,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that the `entities` inside the `user` field will be empty for tweets received via the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244711,"byte_end":244805,"line_start":76,"line_end":76,"column_start":5,"column_end":99}},{"value":"/ Streaming API.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244810,"byte_end":244828,"line_start":77,"line_end":77,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245154,"byte_end":245160,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"Delete","qualname":"::stream::StreamMessage::Delete","value":"StreamMessage::Delete { status_id, user_id }","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" Notice given when a user deletes a post.","sig":null,"attributes":[{"value":"/ Notice given when a user deletes a post.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244851,"byte_end":244895,"line_start":79,"line_end":79,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244900,"byte_end":244903,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Clients are expected to comply with these notices by removing the status \"from memory and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244908,"byte_end":245001,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ any storage or archive, even in the rare case where a deletion message arrives earlier in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245006,"byte_end":245099,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ the stream than the Tweet it references.\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245104,"byte_end":245149,"line_start":83,"line_end":83,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":3747},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245740,"byte_end":245748,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"ScrubGeo","qualname":"::stream::StreamMessage::ScrubGeo","value":"StreamMessage::ScrubGeo { user_id, up_to_status_id }","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" Notice given when a user removes geolocation information from their profile.","sig":null,"attributes":[{"value":"/ Notice given when a user removes geolocation information from their profile.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245307,"byte_end":245387,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245392,"byte_end":245395,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Clients are expected to comply by deleting cached geolocation information from tweets by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245400,"byte_end":245492,"line_start":92,"line_end":92,"column_start":5,"column_end":97}},{"value":"/ the given user, for any tweets up to and including the given status ID. According to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245497,"byte_end":245585,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ Twitter's documentation, \"These messages may also arrive before a Tweet which falls into","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245590,"byte_end":245682,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/ the specified range, although this is rare.\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245687,"byte_end":245735,"line_start":95,"line_end":95,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246060,"byte_end":246074,"line_start":104,"line_end":104,"column_start":5,"column_end":19},"name":"StatusWithheld","qualname":"::stream::StreamMessage::StatusWithheld","value":"StreamMessage::StatusWithheld { status_id, user_id, withheld_in_countries }","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" Placeholder message used to indicate that a specific tweet has been withheld in certain\n countries.\n","sig":null,"attributes":[{"value":"/ Placeholder message used to indicate that a specific tweet has been withheld in certain","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":245945,"byte_end":246036,"line_start":102,"line_end":102,"column_start":5,"column_end":96}},{"value":"/ countries.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246041,"byte_end":246055,"line_start":103,"line_end":103,"column_start":5,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246513,"byte_end":246525,"line_start":115,"line_end":115,"column_start":5,"column_end":17},"name":"UserWithheld","qualname":"::stream::StreamMessage::UserWithheld","value":"StreamMessage::UserWithheld { user_id, withheld_in_countries }","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" Placeholder message used to indicate that a specific user's content has been withheld in\n certain countries.\n","sig":null,"attributes":[{"value":"/ Placeholder message used to indicate that a specific user's content has been withheld in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246389,"byte_end":246481,"line_start":113,"line_end":113,"column_start":5,"column_end":97}},{"value":"/ certain countries.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246486,"byte_end":246508,"line_start":114,"line_end":114,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3757},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247457,"byte_end":247467,"line_start":133,"line_end":133,"column_start":5,"column_end":15},"name":"Disconnect","qualname":"::stream::StreamMessage::Disconnect","value":"StreamMessage::Disconnect(u64, String)","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" An error message that may be delivered immediately prior to Twitter disconnecting the\n stream.","sig":null,"attributes":[{"value":"/ An error message that may be delivered immediately prior to Twitter disconnecting the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246780,"byte_end":246869,"line_start":122,"line_end":122,"column_start":5,"column_end":94}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246874,"byte_end":246885,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246890,"byte_end":246893,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Note that if the stream is disconnected due to network issues or the client reading","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246898,"byte_end":246985,"line_start":125,"line_end":125,"column_start":5,"column_end":92}},{"value":"/ messages too slowly, it's possible that this message may not be received.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":246990,"byte_end":247067,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247072,"byte_end":247075,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The enclosed values are an error code and error description. A non-exhaustive list of error","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247080,"byte_end":247175,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ codes and their associated reasons are available on [Twitter's stream","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247180,"byte_end":247253,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ docmentation][stream-doc], under \"Disconnect messages (disconnect)\".","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247258,"byte_end":247330,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247335,"byte_end":247338,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [stream-doc]: https://developer.twitter.com/en/docs/tweets/filter-realtime/guides/streaming-message-types","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247343,"byte_end":247452,"line_start":132,"line_end":132,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3761},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247701,"byte_end":247708,"line_start":138,"line_end":138,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::stream::StreamMessage::Unknown","value":"StreamMessage::Unknown(serde_json::Value)","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" An unhandled message payload.","sig":null,"attributes":[{"value":"/ An unhandled message payload.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247486,"byte_end":247519,"line_start":134,"line_end":134,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247524,"byte_end":247527,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Twitter can add new streaming messages to the API, and egg-mode includes them here so that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247532,"byte_end":247626,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ they can be used before egg-mode has a chance to handle them.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247631,"byte_end":247696,"line_start":137,"line_end":137,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":3735},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244434,"byte_end":244447,"line_start":68,"line_end":68,"column_start":10,"column_end":23},"name":"StreamMessage","qualname":"::stream::StreamMessage","value":"StreamMessage::{Ping, FriendList, Tweet, Delete, ScrubGeo, StatusWithheld, UserWithheld, Disconnect, Unknown}","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3741},{"krate":0,"index":3744},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3761}],"decl_id":null,"docs":" Represents the kinds of messages that can be sent over Twitter's Streaming API.\n","sig":null,"attributes":[{"value":"/ Represents the kinds of messages that can be sent over Twitter's Streaming API.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":244324,"byte_end":244407,"line_start":66,"line_end":66,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250436,"byte_end":250449,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"TwitterStream","qualname":"::stream::TwitterStream","value":"TwitterStream {  }","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012}],"decl_id":null,"docs":" A `Stream` that represents a connection to the Twitter Streaming API.\n","sig":null,"attributes":[{"value":"/ A `Stream` that represents a connection to the Twitter Streaming API.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250289,"byte_end":250362,"line_start":207,"line_end":207,"column_start":1,"column_end":74}},{"value":"must_use = \"Streams are lazy and do nothing unless polled\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250363,"byte_end":250424,"line_start":208,"line_end":208,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253974,"byte_end":253978,"line_start":305,"line_end":305,"column_start":5,"column_end":9},"name":"None","qualname":"::stream::FilterLevel::None","value":"FilterLevel::None","parent":{"krate":0,"index":3788},"children":[],"decl_id":null,"docs":" No filtering.\n","sig":null,"attributes":[{"value":"/ No filtering.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253922,"byte_end":253939,"line_start":303,"line_end":303,"column_start":5,"column_end":22}},{"value":"serde(rename = \"none\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253944,"byte_end":253969,"line_start":304,"line_end":304,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3791},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254050,"byte_end":254053,"line_start":308,"line_end":308,"column_start":5,"column_end":8},"name":"Low","qualname":"::stream::FilterLevel::Low","value":"FilterLevel::Low","parent":{"krate":0,"index":3788},"children":[],"decl_id":null,"docs":" A light amount of filtering.\n","sig":null,"attributes":[{"value":"/ A light amount of filtering.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253984,"byte_end":254016,"line_start":306,"line_end":306,"column_start":5,"column_end":37}},{"value":"serde(rename = \"low\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254021,"byte_end":254045,"line_start":307,"line_end":307,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254129,"byte_end":254135,"line_start":311,"line_end":311,"column_start":5,"column_end":11},"name":"Medium","qualname":"::stream::FilterLevel::Medium","value":"FilterLevel::Medium","parent":{"krate":0,"index":3788},"children":[],"decl_id":null,"docs":" A medium amount of filtering.\n","sig":null,"attributes":[{"value":"/ A medium amount of filtering.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254059,"byte_end":254092,"line_start":309,"line_end":309,"column_start":5,"column_end":38}},{"value":"serde(rename = \"medium\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254097,"byte_end":254124,"line_start":310,"line_end":310,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253904,"byte_end":253915,"line_start":302,"line_end":302,"column_start":10,"column_end":21},"name":"FilterLevel","qualname":"::stream::FilterLevel","value":"FilterLevel::{None, Low, Medium}","parent":null,"children":[{"krate":0,"index":3789},{"krate":0,"index":3791},{"krate":0,"index":3793}],"decl_id":null,"docs":" Represents the amount of filtering that can be done to streams on Twitter's side.","sig":null,"attributes":[{"value":"/ Represents the amount of filtering that can be done to streams on Twitter's side.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253539,"byte_end":253624,"line_start":296,"line_end":296,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253625,"byte_end":253628,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ According to Twitter's documentation, \"When displaying a stream of Tweets to end users","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253629,"byte_end":253719,"line_start":298,"line_end":298,"column_start":1,"column_end":91}},{"value":"/ (dashboards or live feeds at a presentation or conference, for example) it is suggested that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253720,"byte_end":253816,"line_start":299,"line_end":299,"column_start":1,"column_end":97}},{"value":"/ you set this value to medium.\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":253817,"byte_end":253851,"line_start":300,"line_end":300,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255346,"byte_end":255359,"line_start":337,"line_end":337,"column_start":12,"column_end":25},"name":"StreamBuilder","qualname":"::stream::StreamBuilder","value":"StreamBuilder {  }","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027}],"decl_id":null,"docs":" Represents a `TwitterStream` before it is started. Use the various methods to build\n up the filters on your stream.","sig":null,"attributes":[{"value":"/ Represents a `TwitterStream` before it is started. Use the various methods to build","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254646,"byte_end":254733,"line_start":327,"line_end":327,"column_start":1,"column_end":88}},{"value":"/ up the filters on your stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254734,"byte_end":254768,"line_start":328,"line_end":328,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254769,"byte_end":254772,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that the `track`, `follow` and `locations` filters are `OR`ed rather than `AND`ed","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254773,"byte_end":254871,"line_start":330,"line_end":330,"column_start":1,"column_end":99}},{"value":"/ together. E.g. if you specify a user id to follow and a phrase to track, you will receive","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254872,"byte_end":254965,"line_start":331,"line_end":331,"column_start":1,"column_end":94}},{"value":"/ all tweets that match (user id OR phrase), NOT (user id AND phrase).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254966,"byte_end":255038,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/ For more details see the [official docs](https://developer.twitter.com/en/docs/tweets/filter-realtime/guides/basic-stream-parameters)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255039,"byte_end":255176,"line_start":333,"line_end":333,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255177,"byte_end":255180,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ __Note__: The user __must__ specify at least one `track`, `follow` or `locations` filter or else","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255181,"byte_end":255281,"line_start":335,"line_end":335,"column_start":1,"column_end":101}},{"value":"/ the stream will __fail__ at point of connection.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255282,"byte_end":255334,"line_start":336,"line_end":336,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256279,"byte_end":256285,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"follow","qualname":"<StreamBuilder>::follow","value":"fn (mut self, to_follow: &[u64]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Filter stream to only return Tweets relating to given user IDs.\n ### Example\n ```rust,no_run\n # fn main() {\n # let token: egg_mode::Token = unimplemented!();\n use egg_mode::stream::filter;\n let stream = filter()\n     // View tweets related to BBC news, the Guardian and the New York Times\n     .follow(&[612473, 87818409, 807095])\n     .start(&token);\n # }\n ```\n","sig":null,"attributes":[{"value":"/ Filter stream to only return Tweets relating to given user IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255825,"byte_end":255892,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255897,"byte_end":255912,"line_start":359,"line_end":359,"column_start":5,"column_end":20}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255917,"byte_end":255935,"line_start":360,"line_end":360,"column_start":5,"column_end":23}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255940,"byte_end":255957,"line_start":361,"line_end":361,"column_start":5,"column_end":22}},{"value":"/ # let token: egg_mode::Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255962,"byte_end":256014,"line_start":362,"line_end":362,"column_start":5,"column_end":57}},{"value":"/ use egg_mode::stream::filter;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256019,"byte_end":256052,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/ let stream = filter()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256057,"byte_end":256082,"line_start":364,"line_end":364,"column_start":5,"column_end":30}},{"value":"/     // View tweets related to BBC news, the Guardian and the New York Times","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256087,"byte_end":256166,"line_start":365,"line_end":365,"column_start":5,"column_end":84}},{"value":"/     .follow(&[612473, 87818409, 807095])","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256171,"byte_end":256215,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/     .start(&token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256220,"byte_end":256243,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256248,"byte_end":256255,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256260,"byte_end":256267,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256679,"byte_end":256684,"line_start":379,"line_end":379,"column_start":12,"column_end":17},"name":"track","qualname":"<StreamBuilder>::track","value":"fn <I, S> (mut self, to_track: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Filter stream to only return Tweets containing given phrases.","sig":null,"attributes":[{"value":"/ Filter stream to only return Tweets containing given phrases.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256400,"byte_end":256465,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256470,"byte_end":256473,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ A phrase may be one or more terms separated by spaces, and a phrase will match if all","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256478,"byte_end":256567,"line_start":377,"line_end":377,"column_start":5,"column_end":94}},{"value":"/ of the terms in the phrase are present in the Tweet, regardless of order and ignoring case.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256572,"byte_end":256667,"line_start":378,"line_end":378,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257352,"byte_end":257360,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"language","qualname":"<StreamBuilder>::language","value":"fn <I, S> (mut self, languages: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Filter stream to only return Tweets that have been detected as being written\n in the specified languages.","sig":null,"attributes":[{"value":"/ Filter stream to only return Tweets that have been detected as being written","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256878,"byte_end":256958,"line_start":385,"line_end":385,"column_start":5,"column_end":85}},{"value":"/ in the specified languages.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256963,"byte_end":256994,"line_start":386,"line_end":386,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":256999,"byte_end":257002,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Languages are specified as a list of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257007,"byte_end":257047,"line_start":388,"line_end":388,"column_start":5,"column_end":45}},{"value":"/ [BCP 47](http://tools.ietf.org/html/bcp47) language identifiers","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257052,"byte_end":257119,"line_start":389,"line_end":389,"column_start":5,"column_end":72}},{"value":"/ corresponding to any of the languages listed on Twitter’s","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257124,"byte_end":257187,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/ [advanced search](https://twitter.com/search-advancedpage) page.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257192,"byte_end":257260,"line_start":391,"line_end":391,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257265,"byte_end":257268,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ __Note__ This library does __not__ validate the language codes.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257273,"byte_end":257340,"line_start":393,"line_end":393,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258012,"byte_end":258021,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"locations","qualname":"<StreamBuilder>::locations","value":"fn (mut self, locations: &[BoundingBox]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A list of bounding boxes by which to filter Tweets","sig":null,"attributes":[{"value":"/ A list of bounding boxes by which to filter Tweets","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257559,"byte_end":257613,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257618,"byte_end":257621,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257626,"byte_end":257641,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257646,"byte_end":257664,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257669,"byte_end":257686,"line_start":404,"line_end":404,"column_start":5,"column_end":22}},{"value":"/ # let token: egg_mode::Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257691,"byte_end":257743,"line_start":405,"line_end":405,"column_start":5,"column_end":57}},{"value":"/ use egg_mode::stream::{filter, BoundingBox};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257748,"byte_end":257796,"line_start":406,"line_end":406,"column_start":5,"column_end":53}},{"value":"/ let stream = filter()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257801,"byte_end":257826,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/     // Only show tweets sent from New York","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257831,"byte_end":257877,"line_start":408,"line_end":408,"column_start":5,"column_end":51}},{"value":"/     .locations(&[BoundingBox::new((-74.0,40.0),(-73.0,41.0))])","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257882,"byte_end":257948,"line_start":409,"line_end":409,"column_start":5,"column_end":71}},{"value":"/     .start(&token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257953,"byte_end":257976,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257981,"byte_end":257988,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":257993,"byte_end":258000,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258504,"byte_end":258516,"line_start":424,"line_end":424,"column_start":12,"column_end":24},"name":"filter_level","qualname":"<StreamBuilder>::filter_level","value":"fn (self, filter_level: FilterLevel) -> StreamBuilder","parent":null,"children":[],"decl_id":null,"docs":" Applies the given `FilterLevel` to the stream. Tweets with a `filter_level` below the given\n value will not be shown in the stream.","sig":null,"attributes":[{"value":"/ Applies the given `FilterLevel` to the stream. Tweets with a `filter_level` below the given","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258147,"byte_end":258242,"line_start":418,"line_end":418,"column_start":5,"column_end":100}},{"value":"/ value will not be shown in the stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258247,"byte_end":258289,"line_start":419,"line_end":419,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258294,"byte_end":258297,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ When displaying a stream of Tweets to end users","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258302,"byte_end":258353,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ (dashboards or live feeds at a presentation or conference, for example) it is suggested","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258358,"byte_end":258449,"line_start":422,"line_end":422,"column_start":5,"column_end":96}},{"value":"/ that you set this value to medium.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258454,"byte_end":258492,"line_start":423,"line_end":423,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258769,"byte_end":258774,"line_start":432,"line_end":432,"column_start":12,"column_end":17},"name":"start","qualname":"<StreamBuilder>::start","value":"fn (self, token: &Token) -> TwitterStream","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the stream parameters and returns the resulting `TwitterStream`.\n","sig":null,"attributes":[{"value":"/ Finalizes the stream parameters and returns the resulting `TwitterStream`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":258679,"byte_end":258757,"line_start":431,"line_end":431,"column_start":5,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260328,"byte_end":260334,"line_start":478,"line_end":478,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::filter","value":"fn () -> StreamBuilder","parent":null,"children":[],"decl_id":null,"docs":" Begins building a request to a filtered public stream.\n","sig":null,"attributes":[{"value":"/ Begins building a request to a filtered public stream.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260262,"byte_end":260320,"line_start":477,"line_end":477,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260897,"byte_end":260903,"line_start":491,"line_end":491,"column_start":8,"column_end":14},"name":"sample","qualname":"::stream::sample","value":"fn (token: &Token) -> TwitterStream","parent":null,"children":[],"decl_id":null,"docs":" Opens a `TwitterStream` returning \"a small random sample of all public statuses\".","sig":null,"attributes":[{"value":"/ Opens a `TwitterStream` returning \"a small random sample of all public statuses\".","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260405,"byte_end":260490,"line_start":482,"line_end":482,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260491,"byte_end":260494,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ As sample streams don't have the same configuration options as filter streams,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260495,"byte_end":260577,"line_start":484,"line_end":484,"column_start":1,"column_end":83}},{"value":"/ this directly returns a `TwitterStream`, rather than going through a [`StreamBuilder`]. To apply","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260578,"byte_end":260678,"line_start":485,"line_end":485,"column_start":1,"column_end":101}},{"value":"/ filter options on the public stream, start with [`filter`] and add parameters to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260679,"byte_end":260767,"line_start":486,"line_end":486,"column_start":1,"column_end":89}},{"value":"/ [`StreamBuilder`] returned there.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260768,"byte_end":260805,"line_start":487,"line_end":487,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260806,"byte_end":260809,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ [`StreamBuilder`]: struct.StreamBuilder.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260810,"byte_end":260858,"line_start":489,"line_end":489,"column_start":1,"column_end":49}},{"value":"/ [`filter`]: fn.filter.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":260859,"byte_end":260889,"line_start":490,"line_end":490,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261186,"byte_end":261197,"line_start":500,"line_end":500,"column_start":12,"column_end":23},"name":"BoundingBox","qualname":"::stream::BoundingBox","value":"BoundingBox {  }","parent":null,"children":[{"krate":0,"index":3842},{"krate":0,"index":3843}],"decl_id":null,"docs":" Represents a bounding box of (longitude, latitude) pairs.","sig":null,"attributes":[{"value":"/ Represents a bounding box of (longitude, latitude) pairs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261077,"byte_end":261138,"line_start":497,"line_end":497,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261139,"byte_end":261142,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ Guaranteed to be in-bounds.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261143,"byte_end":261174,"line_start":499,"line_end":499,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261735,"byte_end":261738,"line_start":518,"line_end":518,"column_start":12,"column_end":15},"name":"new","qualname":"<BoundingBox>::new","value":"fn (southwest: (f64, f64), northeast: (f64, f64)) -> BoundingBox","parent":null,"children":[],"decl_id":null,"docs":" New BoundingBox. Expects (logitude, latitude pairs) describing the southwest and\n northeast points of the bounding box. Checks the values are in-bounds.\n","sig":null,"attributes":[{"value":"/ New BoundingBox. Expects (logitude, latitude pairs) describing the southwest and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261560,"byte_end":261644,"line_start":516,"line_end":516,"column_start":5,"column_end":89}},{"value":"/ northeast points of the bounding box. Checks the values are in-bounds.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261649,"byte_end":261723,"line_start":517,"line_end":517,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tweet","qualname":"::tweet","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1080},{"krate":0,"index":1135},{"krate":0,"index":1149},{"krate":0,"index":4188},{"krate":0,"index":4219},{"krate":0,"index":4217},{"krate":0,"index":1150},{"krate":0,"index":4221},{"krate":0,"index":4269},{"krate":0,"index":4267},{"krate":0,"index":4224},{"krate":0,"index":1158},{"krate":0,"index":1166},{"krate":0,"index":4293},{"krate":0,"index":4350},{"krate":0,"index":4348},{"krate":0,"index":4299},{"krate":0,"index":4352},{"krate":0,"index":4397},{"krate":0,"index":4395},{"krate":0,"index":4354},{"krate":0,"index":1169},{"krate":0,"index":1176},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":4399},{"krate":0,"index":4412},{"krate":0,"index":4410},{"krate":0,"index":1199}],"decl_id":null,"docs":" Structs and functions for working with statuses and timelines.","sig":null,"attributes":[{"value":"! Structs and functions for working with statuses and timelines.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":262896,"byte_end":262962,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":262963,"byte_end":262966,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! In this module, you can find various structs and methods to load and interact with tweets and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":262967,"byte_end":263064,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"! their metadata. This also includes loading a user's timeline, posting a new tweet, or liking or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263065,"byte_end":263164,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"! retweeting another tweet. However, this does *not* include searching for tweets; that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263165,"byte_end":263254,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"! functionality is in the [`search`][] module.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263255,"byte_end":263303,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263304,"byte_end":263307,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! [`search`]: ../search/index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263308,"byte_end":263344,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263345,"byte_end":263348,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! ## Types","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263349,"byte_end":263361,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263362,"byte_end":263365,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! - `Tweet`/`TweetEntities`/`ExtendedTweetEntities`: At the bottom of it all, this is the struct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263366,"byte_end":263464,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"!   that represents a single tweet. The `*Entities` structs contain information about media,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263465,"byte_end":263559,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"!   links, and hashtags within their parent tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263560,"byte_end":263612,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"! - `DraftTweet`: This is what you use to post a new tweet. At present, not all available options","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263613,"byte_end":263712,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"!   are supported, but basics like marking the tweet as a reply and attaching a location","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263713,"byte_end":263803,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"!   coordinate are available.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263804,"byte_end":263835,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"! - `Timeline`: Returned by several functions in this module, this is how you cursor through a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263836,"byte_end":263932,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"!   collection of tweets. See the struct-level documentation for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":263933,"byte_end":264008,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264009,"byte_end":264012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264013,"byte_end":264029,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264030,"byte_end":264033,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ### User actions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264034,"byte_end":264054,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264055,"byte_end":264058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! These functions perform actions on their given tweets. They require write access to the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264059,"byte_end":264150,"line_start":29,"line_end":29,"column_start":1,"column_end":92}},{"value":"! authenticated user's account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264151,"byte_end":264184,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264185,"byte_end":264188,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! - `delete` (for creating a tweet, see `DraftTweet`)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264189,"byte_end":264244,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"! - `like`/`unlike`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264245,"byte_end":264266,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"! - `retweet`/`unretweet`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264267,"byte_end":264294,"line_start":34,"line_end":34,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264295,"byte_end":264298,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ### Metadata lookup","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264299,"byte_end":264322,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264323,"byte_end":264326,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! These functions either perform some direct lookup of specific tweets, or provide some metadata","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264327,"byte_end":264425,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"! about the given tweet in a direct (non-`Timeline`) fashion.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264426,"byte_end":264489,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264490,"byte_end":264493,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! - `show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264494,"byte_end":264506,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"! - `lookup`/`lookup_map` (for the differences between these functions, see their respective","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264507,"byte_end":264601,"line_start":42,"line_end":42,"column_start":1,"column_end":95}},{"value":"!   documentations.)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264602,"byte_end":264624,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"! - `retweeters_of`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264625,"byte_end":264646,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"! - `retweets_of`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264647,"byte_end":264666,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264667,"byte_end":264670,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ### `Timeline` cursors","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264671,"byte_end":264697,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264698,"byte_end":264701,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! These functions return `Timeline`s and can be cursored around in the same way. See the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264702,"byte_end":264792,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"! documentation for `Timeline` to learn how to navigate these return values. This correspond to a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264793,"byte_end":264892,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"! user's own view of Twitter, or with feeds you might see attached to a user's profile page.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264893,"byte_end":264987,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264988,"byte_end":264991,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! - `home_timeline`/`mentions_timeline`/`retweets_of_me`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":264992,"byte_end":265050,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"! - `user_timeline`/`liked_by`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265051,"byte_end":265083,"line_start":54,"line_end":54,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":303921,"byte_end":303925,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"name":"show","qualname":"::tweet::fun::show","value":"fn (id: u64, token: &auth::Token) -> Result<Response<Tweet>>","parent":null,"children":[],"decl_id":null,"docs":"Lookup a single tweet by numeric ID.\n","sig":null,"attributes":[{"value":"/Lookup a single tweet by numeric ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":303868,"byte_end":303907,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":304563,"byte_end":304574,"line_start":30,"line_end":30,"column_start":14,"column_end":25},"name":"retweets_of","qualname":"::tweet::fun::retweets_of","value":"fn (id: u64, count: u32, token: &auth::Token) -> Result<Response<Vec<Tweet>>>","parent":null,"children":[],"decl_id":null,"docs":"Lookup the most recent 100 (or fewer) retweets of the given tweet.","sig":null,"attributes":[{"value":"/Lookup the most recent 100 (or fewer) retweets of the given tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":304297,"byte_end":304366,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":304367,"byte_end":304370,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/Use the `count` parameter to indicate how many retweets you would like to retrieve. If `count`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":304371,"byte_end":304468,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/is 0 or greater than 100, it will be defaulted to 100 before making the call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":304469,"byte_end":304549,"line_start":29,"line_end":29,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305414,"byte_end":305427,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"retweeters_of","qualname":"::tweet::fun::retweeters_of","value":"fn (id: u64, token: &auth::Token) -> cursor::CursorIter<cursor::IDCursor>","parent":null,"children":[],"decl_id":null,"docs":"Lookup the user IDs that have retweeted the given tweet.","sig":null,"attributes":[{"value":"/Lookup the user IDs that have retweeted the given tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305029,"byte_end":305088,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305089,"byte_end":305092,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/Note that while loading the list of retweeters is a cursored search, it does not allow you to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305093,"byte_end":305189,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/set the page size. Calling `with_page_size` on the iterator returned by this function will not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305190,"byte_end":305287,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/change the page size used by the network call. Setting `page_size` manually may result in an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305288,"byte_end":305383,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/error from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305384,"byte_end":305406,"line_start":51,"line_end":51,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305926,"byte_end":305932,"line_start":61,"line_end":61,"column_start":14,"column_end":20},"name":"lookup","qualname":"::tweet::fun::lookup","value":"fn <I> (ids: I, token: &auth::Token) -> Result<Response<Vec<Tweet>>>","parent":null,"children":[],"decl_id":null,"docs":"Lookup tweet information for the given list of tweet IDs.","sig":null,"attributes":[{"value":"/Lookup tweet information for the given list of tweet IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305657,"byte_end":305717,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305718,"byte_end":305721,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/This function differs from `lookup_map` in how it handles protected or nonexistent tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305722,"byte_end":305815,"line_start":59,"line_end":59,"column_start":1,"column_end":94}},{"value":"/`lookup` gives a Vec of just the tweets it could load, leaving out any that it couldn't find.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":305816,"byte_end":305912,"line_start":60,"line_end":60,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306960,"byte_end":306970,"line_start":88,"line_end":88,"column_start":14,"column_end":24},"name":"lookup_map","qualname":"::tweet::fun::lookup_map","value":"fn <I> (ids: I, token: &auth::Token) -> Result<Response<HashMap<u64, Option<Tweet>>>>","parent":null,"children":[],"decl_id":null,"docs":"Lookup tweet information for the given list of tweet IDs, and return a map indicating which IDs\ncouldn't be found.","sig":null,"attributes":[{"value":"/Lookup tweet information for the given list of tweet IDs, and return a map indicating which IDs","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306491,"byte_end":306589,"line_start":81,"line_end":81,"column_start":1,"column_end":99}},{"value":"/couldn't be found.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306590,"byte_end":306611,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306612,"byte_end":306615,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/This function differs from `lookup` in how it handles protected or nonexistent tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306616,"byte_end":306705,"line_start":84,"line_end":84,"column_start":1,"column_end":90}},{"value":"/`lookup_map` gives a map containing every ID in the input slice; tweets that don't exist or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306706,"byte_end":306800,"line_start":85,"line_end":85,"column_start":1,"column_end":95}},{"value":"/can't be read by the authenticated user store `None` in the map, whereas tweets that could be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306801,"byte_end":306897,"line_start":86,"line_end":86,"column_start":1,"column_end":97}},{"value":"/loaded store `Some` and the requested status.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":306898,"byte_end":306946,"line_start":87,"line_end":87,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308628,"byte_end":308641,"line_start":141,"line_end":141,"column_start":8,"column_end":21},"name":"home_timeline","qualname":"::tweet::fun::home_timeline","value":"fn (token: &auth::Token) -> Timeline","parent":null,"children":[],"decl_id":null,"docs":"Make a `Timeline` struct for navigating the collection of tweets posted by the authenticated\nuser and the users they follow.","sig":null,"attributes":[{"value":"/Make a `Timeline` struct for navigating the collection of tweets posted by the authenticated","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308324,"byte_end":308419,"line_start":135,"line_end":135,"column_start":1,"column_end":96}},{"value":"/user and the users they follow.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308420,"byte_end":308454,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308455,"byte_end":308458,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/This method has a default page size of 20 tweets, with a maximum of 200.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308459,"byte_end":308534,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308535,"byte_end":308538,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/Twitter will only return the most recent 800 tweets by navigating this method.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308539,"byte_end":308620,"line_start":140,"line_end":140,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309038,"byte_end":309055,"line_start":151,"line_end":151,"column_start":8,"column_end":25},"name":"mentions_timeline","qualname":"::tweet::fun::mentions_timeline","value":"fn (token: &auth::Token) -> Timeline","parent":null,"children":[],"decl_id":null,"docs":"Make a `Timeline` struct for navigating the collection of tweets that mention the authenticated\nuser's screen name.","sig":null,"attributes":[{"value":"/Make a `Timeline` struct for navigating the collection of tweets that mention the authenticated","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308743,"byte_end":308841,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/user's screen name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308842,"byte_end":308864,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308865,"byte_end":308868,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/This method has a default page size of 20 tweets, with a maximum of 200.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308869,"byte_end":308944,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308945,"byte_end":308948,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/Twitter will only return the most recent 800 tweets by navigating this method.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":308949,"byte_end":309030,"line_start":150,"line_end":150,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309897,"byte_end":309910,"line_start":167,"line_end":167,"column_start":8,"column_end":21},"name":"user_timeline","qualname":"::tweet::fun::user_timeline","value":"fn <T> (acct: T, with_replies: bool, with_rts: bool, token: &auth::Token) -> Timeline","parent":null,"children":[],"decl_id":null,"docs":"Make a `Timeline` struct for navigating the collection of tweets posted by the given user,\noptionally including or excluding replies or retweets.","sig":null,"attributes":[{"value":"/Make a `Timeline` struct for navigating the collection of tweets posted by the given user,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309161,"byte_end":309254,"line_start":155,"line_end":155,"column_start":1,"column_end":94}},{"value":"/optionally including or excluding replies or retweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309255,"byte_end":309312,"line_start":156,"line_end":156,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309313,"byte_end":309316,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/Attempting to load the timeline of a protected account will only work if the account is the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309317,"byte_end":309411,"line_start":158,"line_end":158,"column_start":1,"column_end":95}},{"value":"/authenticated user's, or if the authenticated user is an approved follower of the account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309412,"byte_end":309505,"line_start":159,"line_end":159,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309506,"byte_end":309509,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/This method has a default page size of 20 tweets, with a maximum of 200. Note that asking to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309510,"byte_end":309605,"line_start":161,"line_end":161,"column_start":1,"column_end":96}},{"value":"/leave out replies or retweets will generate pages that may have fewer tweets than your requested","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309606,"byte_end":309705,"line_start":162,"line_end":162,"column_start":1,"column_end":100}},{"value":"/page size; Twitter will load the requested number of tweets before removing replies and/or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309706,"byte_end":309799,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/retweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309800,"byte_end":309812,"line_start":164,"line_end":164,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309813,"byte_end":309816,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/Twitter will only load the most recent 3,200 tweets with this method.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":309817,"byte_end":309889,"line_start":166,"line_end":166,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310551,"byte_end":310565,"line_start":186,"line_end":186,"column_start":8,"column_end":22},"name":"retweets_of_me","qualname":"::tweet::fun::retweets_of_me","value":"fn (token: &auth::Token) -> Timeline","parent":null,"children":[],"decl_id":null,"docs":"Make a `Timeline` struct for navigating the collection of tweets posted by the authenticated\nuser that have been retweeted by others.","sig":null,"attributes":[{"value":"/Make a `Timeline` struct for navigating the collection of tweets posted by the authenticated","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310324,"byte_end":310419,"line_start":182,"line_end":182,"column_start":1,"column_end":96}},{"value":"/user that have been retweeted by others.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310420,"byte_end":310463,"line_start":183,"line_end":183,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310464,"byte_end":310467,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/This method has a default page size of 20 tweets, with a maximum of 100.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310468,"byte_end":310543,"line_start":185,"line_end":185,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310848,"byte_end":310856,"line_start":193,"line_end":193,"column_start":8,"column_end":16},"name":"liked_by","qualname":"::tweet::fun::liked_by","value":"fn <T> (acct: T, token: &auth::Token) -> Timeline","parent":null,"children":[],"decl_id":null,"docs":"Make a `Timeline` struct for navigating the collection of tweets liked by the given user.","sig":null,"attributes":[{"value":"/Make a `Timeline` struct for navigating the collection of tweets liked by the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310668,"byte_end":310760,"line_start":190,"line_end":190,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310761,"byte_end":310764,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/This method has a default page size of 20 tweets, with a maximum of 200.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":310765,"byte_end":310840,"line_start":192,"line_end":192,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311291,"byte_end":311298,"line_start":204,"line_end":204,"column_start":14,"column_end":21},"name":"retweet","qualname":"::tweet::fun::retweet","value":"fn (id: u64, token: &auth::Token) -> Result<Response<Tweet>>","parent":null,"children":[],"decl_id":null,"docs":"Retweet the given status as the authenticated user.","sig":null,"attributes":[{"value":"/Retweet the given status as the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311086,"byte_end":311140,"line_start":200,"line_end":200,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311141,"byte_end":311144,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/On success, the future returned by this function yields the retweet, with the original status","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311145,"byte_end":311241,"line_start":202,"line_end":202,"column_start":1,"column_end":97}},{"value":"/contained in `retweeted_status`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311242,"byte_end":311277,"line_start":203,"line_end":203,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311840,"byte_end":311849,"line_start":217,"line_end":217,"column_start":14,"column_end":23},"name":"unretweet","qualname":"::tweet::fun::unretweet","value":"fn (id: u64, token: &auth::Token) -> Result<Response<Tweet>>","parent":null,"children":[],"decl_id":null,"docs":"Unretweet the given status as the authenticated user.","sig":null,"attributes":[{"value":"/Unretweet the given status as the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311576,"byte_end":311632,"line_start":211,"line_end":211,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311633,"byte_end":311636,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/The given ID may either be the original status, or the ID of the authenticated user's retweet of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311637,"byte_end":311736,"line_start":213,"line_end":213,"column_start":1,"column_end":100}},{"value":"/it.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311737,"byte_end":311743,"line_start":214,"line_end":214,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311744,"byte_end":311747,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/On success, the future returned by this function yields the original tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":311748,"byte_end":311826,"line_start":216,"line_end":216,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312274,"byte_end":312278,"line_start":227,"line_end":227,"column_start":14,"column_end":18},"name":"like","qualname":"::tweet::fun::like","value":"fn (id: u64, token: &auth::Token) -> Result<Response<Tweet>>","parent":null,"children":[],"decl_id":null,"docs":"Like the given status as the authenticated user.","sig":null,"attributes":[{"value":"/Like the given status as the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312129,"byte_end":312180,"line_start":224,"line_end":224,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312181,"byte_end":312184,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/On success, the future returned by this function yields the liked tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312185,"byte_end":312260,"line_start":226,"line_end":226,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312708,"byte_end":312714,"line_start":238,"line_end":238,"column_start":14,"column_end":20},"name":"unlike","qualname":"::tweet::fun::unlike","value":"fn (id: u64, token: &auth::Token) -> Result<Response<Tweet>>","parent":null,"children":[],"decl_id":null,"docs":"Clears a like of the given status as the authenticated user.","sig":null,"attributes":[{"value":"/Clears a like of the given status as the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312551,"byte_end":312614,"line_start":235,"line_end":235,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312615,"byte_end":312618,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/On success, the future returned by this function yields the given tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312619,"byte_end":312694,"line_start":237,"line_end":237,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":313177,"byte_end":313183,"line_start":249,"line_end":249,"column_start":14,"column_end":20},"name":"delete","qualname":"::tweet::fun::delete","value":"fn (id: u64, token: &auth::Token) -> Result<Response<Tweet>>","parent":null,"children":[],"decl_id":null,"docs":"Delete the given tweet. The authenticated user must be the user who posted the given tweet.","sig":null,"attributes":[{"value":"/Delete the given tweet. The authenticated user must be the user who posted the given tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":312989,"byte_end":313083,"line_start":246,"line_end":246,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":313084,"byte_end":313087,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/On success, the future returned by this function yields the given tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\fun.rs","byte_start":313088,"byte_end":313163,"line_start":248,"line_end":248,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4188},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268335,"byte_end":268340,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"Tweet","qualname":"::tweet::Tweet","value":"Tweet { coordinates, created_at, current_user_retweet, display_text_range, entities, extended_entities, favorite_count, favorited, filter_level, id, in_reply_to_user_id, in_reply_to_screen_name, in_reply_to_status_id, lang, place, possibly_sensitive, quoted_status_id, quoted_status, retweet_count, retweeted, retweeted_status, source, text, truncated, user, withheld_copyright, withheld_in_countries, withheld_scope }","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216}],"decl_id":null,"docs":"Represents a single status update.","sig":null,"attributes":[{"value":"/Represents a single status update.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265540,"byte_end":265577,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265578,"byte_end":265581,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/The fields present in this struct can be mainly split up based on the context they're present","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265582,"byte_end":265678,"line_start":80,"line_end":80,"column_start":1,"column_end":97}},{"value":"/for.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265679,"byte_end":265686,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265687,"byte_end":265690,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/## Base Tweet Info","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265691,"byte_end":265712,"line_start":83,"line_end":83,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265713,"byte_end":265716,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/This information is the basic information inherent to all tweets, regardless of context.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265717,"byte_end":265808,"line_start":85,"line_end":85,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265809,"byte_end":265812,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/* `text`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265813,"byte_end":265824,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/* `id`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265825,"byte_end":265834,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/* `created_at`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265835,"byte_end":265852,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/* `user`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265853,"byte_end":265864,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/* `source`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265865,"byte_end":265878,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/* `favorite_count`/`retweet_count`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265879,"byte_end":265916,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/* `lang`, though third-party clients usually don't surface this at a user-interface level.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":265917,"byte_end":266010,"line_start":93,"line_end":93,"column_start":1,"column_end":94}},{"value":"/  Twitter Web uses this to create machine-translations of the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266011,"byte_end":266082,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/* `coordinates`/`place`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266083,"byte_end":266109,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/* `display_text_range`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266110,"byte_end":266135,"line_start":96,"line_end":96,"column_start":1,"column_end":26}},{"value":"/* `truncated`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266136,"byte_end":266152,"line_start":97,"line_end":97,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266153,"byte_end":266156,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/## Perspective-based data","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266157,"byte_end":266185,"line_start":99,"line_end":99,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266186,"byte_end":266189,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/This information depends on the authenticated user who called the data. These are left as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266190,"byte_end":266282,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/Options because certain contexts where the information is pulled either don't have an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266283,"byte_end":266371,"line_start":102,"line_end":102,"column_start":1,"column_end":89}},{"value":"/authenticated user to compare with, or don't have to opportunity to poll the user's interactions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266372,"byte_end":266471,"line_start":103,"line_end":103,"column_start":1,"column_end":100}},{"value":"/with the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266472,"byte_end":266490,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266491,"byte_end":266494,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/* `favorited`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266495,"byte_end":266511,"line_start":106,"line_end":106,"column_start":1,"column_end":17}},{"value":"/* `retweeted`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266512,"byte_end":266528,"line_start":107,"line_end":107,"column_start":1,"column_end":17}},{"value":"/* `current_user_retweet`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266529,"byte_end":266556,"line_start":108,"line_end":108,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266557,"byte_end":266560,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/## Replies","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266561,"byte_end":266574,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266575,"byte_end":266578,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/This information is only present when the tweet in question is marked as being a reply to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266579,"byte_end":266671,"line_start":112,"line_end":112,"column_start":1,"column_end":93}},{"value":"/another tweet, or when it's threaded into a chain from the same user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266672,"byte_end":266744,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266745,"byte_end":266748,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/* `in_reply_to_user_id`/`in_reply_to_screen_name`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266749,"byte_end":266801,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/* `in_reply_to_status_id`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266802,"byte_end":266830,"line_start":116,"line_end":116,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266831,"byte_end":266834,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/## Retweets and Quote Tweets","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266835,"byte_end":266866,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266867,"byte_end":266870,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/This information is only present when the tweet in question is a native retweet or is a \"quote","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266871,"byte_end":266968,"line_start":120,"line_end":120,"column_start":1,"column_end":98}},{"value":"/tweet\" that references another tweet by linking to it. These fields allow you to reference the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":266969,"byte_end":267066,"line_start":121,"line_end":121,"column_start":1,"column_end":98}},{"value":"/parent tweet without having to make another call to `show`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267067,"byte_end":267129,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267130,"byte_end":267133,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/* `retweeted_status`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267134,"byte_end":267157,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/* `quoted_status`/`quoted_status_id`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267158,"byte_end":267197,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267198,"byte_end":267201,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/## Media","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267202,"byte_end":267213,"line_start":127,"line_end":127,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267214,"byte_end":267217,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/As a tweet can attach an image, GIF, or video, these fields allow you to access information","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267218,"byte_end":267312,"line_start":129,"line_end":129,"column_start":1,"column_end":95}},{"value":"/about the attached media. Note that polls are not surfaced to the Public API at the time of this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267313,"byte_end":267412,"line_start":130,"line_end":130,"column_start":1,"column_end":100}},{"value":"/writing (2016-09-01). For more information about how to use attached media, see the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267413,"byte_end":267499,"line_start":131,"line_end":131,"column_start":1,"column_end":87}},{"value":"/documentation for [`MediaEntity`][].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267500,"byte_end":267539,"line_start":132,"line_end":132,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267540,"byte_end":267543,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/[`MediaEntity`]: ../entities/struct.MediaEntity.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267544,"byte_end":267599,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267600,"byte_end":267603,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/* `entities` (note that this also contains information about hyperlinks, user mentions, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267604,"byte_end":267698,"line_start":136,"line_end":136,"column_start":1,"column_end":95}},{"value":"/  hashtags in addition to a picture/thumbnail)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267699,"byte_end":267748,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"/* `extended_entities`: This field is only present for tweets with attached media, and houses","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267749,"byte_end":267844,"line_start":138,"line_end":138,"column_start":1,"column_end":96}},{"value":"/  more complete media information, in the case of a photo set, video, or GIF. For videos and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267845,"byte_end":267940,"line_start":139,"line_end":139,"column_start":1,"column_end":96}},{"value":"/  GIFs, note that `entities` will only contain a thumbnail, and the actual video links will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":267941,"byte_end":268038,"line_start":140,"line_end":140,"column_start":1,"column_end":98}},{"value":"/  in this field. For tweets with more than one photo attached, `entities` will only contain the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268039,"byte_end":268137,"line_start":141,"line_end":141,"column_start":1,"column_end":99}},{"value":"/  first photo, and this field will contain all of them.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268138,"byte_end":268196,"line_start":142,"line_end":142,"column_start":1,"column_end":59}},{"value":"/* `possibly_sensitive`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268197,"byte_end":268222,"line_start":143,"line_end":143,"column_start":1,"column_end":26}},{"value":"/* `withheld_copyright`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268223,"byte_end":268248,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/* `withheld_in_countries`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268249,"byte_end":268277,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"/* `withheld_scope`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268278,"byte_end":268299,"line_start":146,"line_end":146,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":4189},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268603,"byte_end":268614,"line_start":153,"line_end":153,"column_start":9,"column_end":20},"name":"coordinates","qualname":"::tweet::Tweet::coordinates","value":"std::option::Option<(f64, f64)>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If present, the location coordinate attached to the tweet, as a (latitude, longitude) pair.\n","sig":null,"attributes":[{"value":"/If present, the location coordinate attached to the tweet, as a (latitude, longitude) pair.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268500,"byte_end":268594,"line_start":152,"line_end":152,"column_start":5,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268697,"byte_end":268707,"line_start":155,"line_end":155,"column_start":9,"column_end":19},"name":"created_at","qualname":"::tweet::Tweet::created_at","value":"chrono::datetime::DateTime<chrono::offset::utc::Utc>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"UTC timestamp from when the tweet was posted.\n","sig":null,"attributes":[{"value":"/UTC timestamp from when the tweet was posted.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268640,"byte_end":268688,"line_start":154,"line_end":154,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":4191},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268839,"byte_end":268859,"line_start":157,"line_end":157,"column_start":9,"column_end":29},"name":"current_user_retweet","qualname":"::tweet::Tweet::current_user_retweet","value":"std::option::Option<u64>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If the authenticated user has retweeted this tweet, contains the ID of the retweet.\n","sig":null,"attributes":[{"value":"/If the authenticated user has retweeted this tweet, contains the ID of the retweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268744,"byte_end":268830,"line_start":156,"line_end":156,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269041,"byte_end":269059,"line_start":160,"line_end":160,"column_start":9,"column_end":27},"name":"display_text_range","qualname":"::tweet::Tweet::display_text_range","value":"std::option::Option<(usize, usize)>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If this tweet is an extended tweet with \"hidden\" metadata and entities, contains the byte\noffsets between which the \"displayable\" tweet text is.\n","sig":null,"attributes":[{"value":"/If this tweet is an extended tweet with \"hidden\" metadata and entities, contains the byte","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268878,"byte_end":268970,"line_start":158,"line_end":158,"column_start":5,"column_end":97}},{"value":"/offsets between which the \"displayable\" tweet text is.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":268975,"byte_end":269032,"line_start":159,"line_end":159,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269175,"byte_end":269183,"line_start":162,"line_end":162,"column_start":9,"column_end":17},"name":"entities","qualname":"::tweet::Tweet::entities","value":"tweet::TweetEntities","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Link, hashtag, and user mention information extracted from the tweet text.\n","sig":null,"attributes":[{"value":"/Link, hashtag, and user mention information extracted from the tweet text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269089,"byte_end":269166,"line_start":161,"line_end":161,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":4194},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269599,"byte_end":269616,"line_start":169,"line_end":169,"column_start":9,"column_end":26},"name":"extended_entities","qualname":"::tweet::Tweet::extended_entities","value":"std::option::Option<tweet::ExtendedTweetEntities>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Extended media information attached to the tweet, if media is available.","sig":null,"attributes":[{"value":"/Extended media information attached to the tweet, if media is available.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269204,"byte_end":269279,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269284,"byte_end":269287,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/If a tweet has a photo, set of photos, gif, or video attached to it, this field will be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269292,"byte_end":269382,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/present and contain the real media information. The information available in the `media`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269387,"byte_end":269478,"line_start":166,"line_end":166,"column_start":5,"column_end":96}},{"value":"/field of `entities` will only contain the first photo of a set, or a thumbnail of a gif or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269483,"byte_end":269576,"line_start":167,"line_end":167,"column_start":5,"column_end":98}},{"value":"/video.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269581,"byte_end":269590,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269731,"byte_end":269745,"line_start":171,"line_end":171,"column_start":9,"column_end":23},"name":"favorite_count","qualname":"::tweet::Tweet::favorite_count","value":"i32","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"\"Approximately\" how many times this tweet has been liked by users.\n","sig":null,"attributes":[{"value":"/\"Approximately\" how many times this tweet has been liked by users.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269653,"byte_end":269722,"line_start":170,"line_end":170,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269830,"byte_end":269839,"line_start":173,"line_end":173,"column_start":9,"column_end":18},"name":"favorited","qualname":"::tweet::Tweet::favorited","value":"std::option::Option<bool>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Indicates whether the authenticated user has liked this tweet.\n","sig":null,"attributes":[{"value":"/Indicates whether the authenticated user has liked this tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269756,"byte_end":269821,"line_start":172,"line_end":172,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269982,"byte_end":269994,"line_start":176,"line_end":176,"column_start":9,"column_end":21},"name":"filter_level","qualname":"::tweet::Tweet::filter_level","value":"std::option::Option<stream::FilterLevel>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Indicates the maximum `FilterLevel` parameter that can be applied to a stream and still show\nthis tweet.\n","sig":null,"attributes":[{"value":"/Indicates the maximum `FilterLevel` parameter that can be applied to a stream and still show","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269859,"byte_end":269954,"line_start":174,"line_end":174,"column_start":5,"column_end":100}},{"value":"/this tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":269959,"byte_end":269973,"line_start":175,"line_end":175,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270059,"byte_end":270061,"line_start":178,"line_end":178,"column_start":9,"column_end":11},"name":"id","qualname":"::tweet::Tweet::id","value":"u64","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Numeric ID for this tweet.\n","sig":null,"attributes":[{"value":"/Numeric ID for this tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270021,"byte_end":270050,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270157,"byte_end":270176,"line_start":180,"line_end":180,"column_start":9,"column_end":28},"name":"in_reply_to_user_id","qualname":"::tweet::Tweet::in_reply_to_user_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If the tweet is a reply, contains the ID of the user that was replied to.\n","sig":null,"attributes":[{"value":"/If the tweet is a reply, contains the ID of the user that was replied to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270072,"byte_end":270148,"line_start":179,"line_end":179,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270289,"byte_end":270312,"line_start":182,"line_end":182,"column_start":9,"column_end":32},"name":"in_reply_to_screen_name","qualname":"::tweet::Tweet::in_reply_to_screen_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If the tweet is a reply, contains the screen name of the user that was replied to.\n","sig":null,"attributes":[{"value":"/If the tweet is a reply, contains the screen name of the user that was replied to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270195,"byte_end":270280,"line_start":181,"line_end":181,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270420,"byte_end":270441,"line_start":184,"line_end":184,"column_start":9,"column_end":30},"name":"in_reply_to_status_id","qualname":"::tweet::Tweet::in_reply_to_status_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If the tweet is a reply, contains the ID of the tweet that was replied to.\n","sig":null,"attributes":[{"value":"/If the tweet is a reply, contains the ID of the tweet that was replied to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270334,"byte_end":270411,"line_start":183,"line_end":183,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270601,"byte_end":270605,"line_start":187,"line_end":187,"column_start":9,"column_end":13},"name":"lang","qualname":"::tweet::Tweet::lang","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Can contain a language ID indicating the machine-detected language of the text, or \"und\" if\nno language could be detected.\n","sig":null,"attributes":[{"value":"/Can contain a language ID indicating the machine-detected language of the text, or \"und\" if","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270460,"byte_end":270554,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"/no language could be detected.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270559,"byte_end":270592,"line_start":186,"line_end":186,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270754,"byte_end":270759,"line_start":190,"line_end":190,"column_start":9,"column_end":14},"name":"place","qualname":"::tweet::Tweet::place","value":"std::option::Option<place::Place>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"When present, the `Place` that this tweet is associated with (but not necessarily where it\noriginated from).\n","sig":null,"attributes":[{"value":"/When present, the `Place` that this tweet is associated with (but not necessarily where it","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270627,"byte_end":270720,"line_start":188,"line_end":188,"column_start":5,"column_end":98}},{"value":"/originated from).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270725,"byte_end":270745,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270916,"byte_end":270934,"line_start":193,"line_end":193,"column_start":9,"column_end":27},"name":"possibly_sensitive","qualname":"::tweet::Tweet::possibly_sensitive","value":"std::option::Option<bool>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If the tweet has a link, indicates whether the link may contain content that could be\nidentified as sensitive.\n","sig":null,"attributes":[{"value":"/If the tweet has a link, indicates whether the link may contain content that could be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270787,"byte_end":270875,"line_start":191,"line_end":191,"column_start":5,"column_end":93}},{"value":"/identified as sensitive.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270880,"byte_end":270907,"line_start":192,"line_end":192,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271044,"byte_end":271060,"line_start":195,"line_end":195,"column_start":9,"column_end":25},"name":"quoted_status_id","qualname":"::tweet::Tweet::quoted_status_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If this tweet is quoting another by link, contains the ID of the quoted tweet.\n","sig":null,"attributes":[{"value":"/If this tweet is quoting another by link, contains the ID of the quoted tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":270954,"byte_end":271035,"line_start":194,"line_end":194,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":4206},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271159,"byte_end":271172,"line_start":197,"line_end":197,"column_start":9,"column_end":22},"name":"quoted_status","qualname":"::tweet::Tweet::quoted_status","value":"std::option::Option<std::boxed::Box<tweet::Tweet>>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If this tweet is quoting another by link, contains the quoted tweet.\n","sig":null,"attributes":[{"value":"/If this tweet is quoting another by link, contains the quoted tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271079,"byte_end":271150,"line_start":196,"line_end":196,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271474,"byte_end":271487,"line_start":202,"line_end":202,"column_start":9,"column_end":22},"name":"retweet_count","qualname":"::tweet::Tweet::retweet_count","value":"i32","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"The number of times this tweet has been retweeted (with native retweets).\n","sig":null,"attributes":[{"value":"/The number of times this tweet has been retweeted (with native retweets).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271389,"byte_end":271465,"line_start":201,"line_end":201,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271576,"byte_end":271585,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"name":"retweeted","qualname":"::tweet::Tweet::retweeted","value":"std::option::Option<bool>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Indicates whether the authenticated user has retweeted this tweet.\n","sig":null,"attributes":[{"value":"/Indicates whether the authenticated user has retweeted this tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271498,"byte_end":271567,"line_start":203,"line_end":203,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271973,"byte_end":271989,"line_start":210,"line_end":210,"column_start":9,"column_end":25},"name":"retweeted_status","qualname":"::tweet::Tweet::retweeted_status","value":"std::option::Option<std::boxed::Box<tweet::Tweet>>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If this tweet is a retweet, then this field contains the original status information.","sig":null,"attributes":[{"value":"/If this tweet is a retweet, then this field contains the original status information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271605,"byte_end":271693,"line_start":205,"line_end":205,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271698,"byte_end":271701,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/The separation between retweet and original is so that retweets can be recalled by deleting","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271706,"byte_end":271800,"line_start":207,"line_end":207,"column_start":5,"column_end":99}},{"value":"/the retweet, and so that liking a retweet results in an additional notification to the user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271805,"byte_end":271899,"line_start":208,"line_end":208,"column_start":5,"column_end":99}},{"value":"/who retweeted the status, as well as the original poster.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":271904,"byte_end":271964,"line_start":209,"line_end":209,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272066,"byte_end":272072,"line_start":212,"line_end":212,"column_start":9,"column_end":15},"name":"source","qualname":"::tweet::Tweet::source","value":"std::option::Option<tweet::TweetSource>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"The application used to post the tweet.\n","sig":null,"attributes":[{"value":"/The application used to post the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272015,"byte_end":272057,"line_start":211,"line_end":211,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4211},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272340,"byte_end":272344,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"text","qualname":"::tweet::Tweet::text","value":"std::string::String","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"The text of the tweet. For \"extended\" tweets, opening reply mentions and/or attached media\nor quoted tweet links do not count against character count, so this could be longer than 280\ncharacters in those situations.\n","sig":null,"attributes":[{"value":"/The text of the tweet. For \"extended\" tweets, opening reply mentions and/or attached media","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272099,"byte_end":272192,"line_start":213,"line_end":213,"column_start":5,"column_end":98}},{"value":"/or quoted tweet links do not count against character count, so this could be longer than 280","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272197,"byte_end":272292,"line_start":214,"line_end":214,"column_start":5,"column_end":100}},{"value":"/characters in those situations.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272297,"byte_end":272331,"line_start":215,"line_end":215,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4212},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272509,"byte_end":272518,"line_start":219,"line_end":219,"column_start":9,"column_end":18},"name":"truncated","qualname":"::tweet::Tweet::truncated","value":"bool","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"Indicates whether this tweet is a truncated \"compatibility\" form of an extended tweet whose\nfull text is longer than 280 characters.\n","sig":null,"attributes":[{"value":"/Indicates whether this tweet is a truncated \"compatibility\" form of an extended tweet whose","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272358,"byte_end":272452,"line_start":217,"line_end":217,"column_start":5,"column_end":99}},{"value":"/full text is longer than 280 characters.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272457,"byte_end":272500,"line_start":218,"line_end":218,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":4213},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272653,"byte_end":272657,"line_start":222,"line_end":222,"column_start":9,"column_end":13},"name":"user","qualname":"::tweet::Tweet::user","value":"std::option::Option<std::boxed::Box<user::TwitterUser>>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"The user who posted this tweet. This field will be absent on tweets included as part of a\n`TwitterUser`.\n","sig":null,"attributes":[{"value":"/The user who posted this tweet. This field will be absent on tweets included as part of a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272530,"byte_end":272622,"line_start":220,"line_end":220,"column_start":5,"column_end":97}},{"value":"/`TwitterUser`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272627,"byte_end":272644,"line_start":221,"line_end":221,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":4214},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272798,"byte_end":272816,"line_start":224,"line_end":224,"column_start":9,"column_end":27},"name":"withheld_copyright","qualname":"::tweet::Tweet::withheld_copyright","value":"bool","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If present and `true`, indicates that this tweet has been withheld due to a DMCA complaint.\n","sig":null,"attributes":[{"value":"/If present and `true`, indicates that this tweet has been withheld due to a DMCA complaint.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272695,"byte_end":272789,"line_start":223,"line_end":223,"column_start":5,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":4215},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":273078,"byte_end":273099,"line_start":231,"line_end":231,"column_start":9,"column_end":30},"name":"withheld_in_countries","qualname":"::tweet::Tweet::withheld_in_countries","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If present, contains two-letter country codes indicating where this tweet is being withheld.","sig":null,"attributes":[{"value":"/If present, contains two-letter country codes indicating where this tweet is being withheld.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272828,"byte_end":272923,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272928,"byte_end":272931,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/The following special codes exist:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272936,"byte_end":272973,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272978,"byte_end":272981,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/- `XX`: Withheld in all countries","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":272986,"byte_end":273022,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/- `XY`: Withheld due to DMCA complaint.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":273027,"byte_end":273069,"line_start":230,"line_end":230,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4216},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":273225,"byte_end":273239,"line_start":233,"line_end":233,"column_start":9,"column_end":23},"name":"withheld_scope","qualname":"::tweet::Tweet::withheld_scope","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4188},"children":[],"decl_id":null,"docs":"If present, indicates whether the content being withheld is the `status` or the `user`.\n","sig":null,"attributes":[{"value":"/If present, indicates whether the content being withheld is the `status` or the `user`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":273126,"byte_end":273216,"line_start":232,"line_end":232,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":4221},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276506,"byte_end":276517,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"TweetSource","qualname":"::tweet::TweetSource","value":"TweetSource { name, url }","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":4223}],"decl_id":null,"docs":"Represents the app from which a specific tweet was posted.","sig":null,"attributes":[{"value":"/Represents the app from which a specific tweet was posted.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276060,"byte_end":276121,"line_start":308,"line_end":308,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276122,"byte_end":276125,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/This struct is parsed out of the HTML anchor tag that Twitter returns as part of each tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276126,"byte_end":276221,"line_start":310,"line_end":310,"column_start":1,"column_end":96}},{"value":"/This way you can format the source link however you like without having to parse the values out","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276222,"byte_end":276320,"line_start":311,"line_end":311,"column_start":1,"column_end":99}},{"value":"/yourself.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276321,"byte_end":276333,"line_start":312,"line_end":312,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276334,"byte_end":276337,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/Note that if you're going to reconstruct a link from this, the source URL has `rel=\"nofollow\"`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276338,"byte_end":276435,"line_start":314,"line_end":314,"column_start":1,"column_end":98}},{"value":"/in the anchor tag.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276436,"byte_end":276457,"line_start":315,"line_end":315,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":4222},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276580,"byte_end":276584,"line_start":319,"line_end":319,"column_start":9,"column_end":13},"name":"name","qualname":"::tweet::TweetSource::name","value":"std::string::String","parent":{"krate":0,"index":4221},"children":[],"decl_id":null,"docs":"The name of the app, given by its developer.\n","sig":null,"attributes":[{"value":"/The name of the app, given by its developer.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276524,"byte_end":276571,"line_start":318,"line_end":318,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4223},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276654,"byte_end":276657,"line_start":321,"line_end":321,"column_start":9,"column_end":12},"name":"url","qualname":"::tweet::TweetSource::url","value":"std::string::String","parent":{"krate":0,"index":4221},"children":[],"decl_id":null,"docs":"The URL for the app, given by its developer.\n","sig":null,"attributes":[{"value":"/The URL for the app, given by its developer.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276598,"byte_end":276645,"line_start":320,"line_end":320,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278593,"byte_end":278606,"line_start":380,"line_end":380,"column_start":12,"column_end":25},"name":"TweetEntities","qualname":"::tweet::TweetEntities","value":"TweetEntities { hashtags, symbols, urls, user_mentions, media }","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298}],"decl_id":null,"docs":"Container for URL, hashtag, mention, and media information associated with a tweet.","sig":null,"attributes":[{"value":"/Container for URL, hashtag, mention, and media information associated with a tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278032,"byte_end":278118,"line_start":371,"line_end":371,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278119,"byte_end":278122,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/If a tweet has no hashtags, financial symbols (\"cashtags\"), links, or mentions, those respective","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278123,"byte_end":278222,"line_start":373,"line_end":373,"column_start":1,"column_end":100}},{"value":"/Vecs will be empty. If there is no media attached to the tweet, that field will be `None`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278223,"byte_end":278316,"line_start":374,"line_end":374,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278317,"byte_end":278320,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/Note that for media attached to a tweet, this struct will only contain the first image of a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278321,"byte_end":278415,"line_start":376,"line_end":376,"column_start":1,"column_end":95}},{"value":"/photo set, or a thumbnail of a video or GIF. Full media information is available in the tweet's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278416,"byte_end":278514,"line_start":377,"line_end":377,"column_start":1,"column_end":99}},{"value":"/`extended_entities` field.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278515,"byte_end":278544,"line_start":378,"line_end":378,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4294},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278670,"byte_end":278678,"line_start":382,"line_end":382,"column_start":9,"column_end":17},"name":"hashtags","qualname":"::tweet::TweetEntities::hashtags","value":"std::vec::Vec<entities::HashtagEntity>","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":"Collection of hashtags parsed from the tweet.\n","sig":null,"attributes":[{"value":"/Collection of hashtags parsed from the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278613,"byte_end":278661,"line_start":381,"line_end":381,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":4295},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278796,"byte_end":278803,"line_start":384,"line_end":384,"column_start":9,"column_end":16},"name":"symbols","qualname":"::tweet::TweetEntities::symbols","value":"std::vec::Vec<entities::HashtagEntity>","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":"Collection of financial symbols, or \"cashtags\", parsed from the tweet.\n","sig":null,"attributes":[{"value":"/Collection of financial symbols, or \"cashtags\", parsed from the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278714,"byte_end":278787,"line_start":383,"line_end":383,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":4296},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278892,"byte_end":278896,"line_start":386,"line_end":386,"column_start":9,"column_end":13},"name":"urls","qualname":"::tweet::TweetEntities::urls","value":"std::vec::Vec<entities::UrlEntity>","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":"Collection of URLs parsed from the tweet.\n","sig":null,"attributes":[{"value":"/Collection of URLs parsed from the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278839,"byte_end":278883,"line_start":385,"line_end":385,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278990,"byte_end":279003,"line_start":388,"line_end":388,"column_start":9,"column_end":22},"name":"user_mentions","qualname":"::tweet::TweetEntities::user_mentions","value":"std::vec::Vec<entities::MentionEntity>","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":"Collection of user mentions parsed from the tweet.\n","sig":null,"attributes":[{"value":"/Collection of user mentions parsed from the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":278928,"byte_end":278981,"line_start":387,"line_end":387,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279163,"byte_end":279168,"line_start":391,"line_end":391,"column_start":9,"column_end":14},"name":"media","qualname":"::tweet::TweetEntities::media","value":"std::option::Option<std::vec::Vec<entities::MediaEntity>>","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":"If the tweet contains any attached media, this contains a collection of media information\nfrom the tweet.\n","sig":null,"attributes":[{"value":"/If the tweet contains any attached media, this contains a collection of media information","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279039,"byte_end":279131,"line_start":389,"line_end":389,"column_start":5,"column_end":97}},{"value":"/from the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279136,"byte_end":279154,"line_start":390,"line_end":390,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4352},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279602,"byte_end":279623,"line_start":400,"line_end":400,"column_start":12,"column_end":33},"name":"ExtendedTweetEntities","qualname":"::tweet::ExtendedTweetEntities","value":"ExtendedTweetEntities { media }","parent":null,"children":[{"krate":0,"index":4353}],"decl_id":null,"docs":"Container for extended media information for a tweet.","sig":null,"attributes":[{"value":"/Container for extended media information for a tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279209,"byte_end":279265,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279266,"byte_end":279269,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/If a tweet has a photo, set of photos, gif, or video attached to it, this field will be present","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279270,"byte_end":279368,"line_start":396,"line_end":396,"column_start":1,"column_end":99}},{"value":"/and contain the real media information. The information available in the `media` field of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279369,"byte_end":279461,"line_start":397,"line_end":397,"column_start":1,"column_end":93}},{"value":"/`entities` will only contain the first photo of a set, or a thumbnail of a gif or video.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279462,"byte_end":279553,"line_start":398,"line_end":398,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279705,"byte_end":279710,"line_start":402,"line_end":402,"column_start":9,"column_end":14},"name":"media","qualname":"::tweet::ExtendedTweetEntities::media","value":"std::vec::Vec<entities::MediaEntity>","parent":{"krate":0,"index":4352},"children":[],"decl_id":null,"docs":"Collection of extended media information attached to the tweet.\n","sig":null,"attributes":[{"value":"/Collection of extended media information attached to the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279630,"byte_end":279696,"line_start":401,"line_end":401,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283295,"byte_end":283303,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"Timeline","qualname":"::tweet::Timeline","value":"Timeline { count, max_id, min_id }","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"decl_id":null,"docs":" Helper struct to navigate collections of tweets by requesting tweets older or newer than certain\n IDs.","sig":null,"attributes":[{"value":"/ Helper struct to navigate collections of tweets by requesting tweets older or newer than certain","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279743,"byte_end":279843,"line_start":405,"line_end":405,"column_start":1,"column_end":101}},{"value":"/ IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279844,"byte_end":279852,"line_start":406,"line_end":406,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279853,"byte_end":279856,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ Using a Timeline to navigate collections of tweets (like a user's timeline, their list of likes,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279857,"byte_end":279957,"line_start":408,"line_end":408,"column_start":1,"column_end":101}},{"value":"/ etc) allows you to efficiently cursor through a collection and only load in tweets you need.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":279958,"byte_end":280054,"line_start":409,"line_end":409,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280055,"byte_end":280058,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ To begin, call a method that returns a `Timeline`, optionally set the page size, and call","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280059,"byte_end":280152,"line_start":411,"line_end":411,"column_start":1,"column_end":94}},{"value":"/ `start` to load the first page of results:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280153,"byte_end":280199,"line_start":412,"line_end":412,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280200,"byte_end":280203,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280204,"byte_end":280222,"line_start":414,"line_end":414,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280223,"byte_end":280249,"line_start":415,"line_end":415,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280250,"byte_end":280270,"line_start":416,"line_end":416,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280271,"byte_end":280294,"line_start":417,"line_end":417,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280295,"byte_end":280337,"line_start":418,"line_end":418,"column_start":1,"column_end":43}},{"value":"/ let timeline = egg_mode::tweet::home_timeline(&token).with_page_size(10);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280338,"byte_end":280415,"line_start":419,"line_end":419,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280416,"byte_end":280419,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ let (timeline, feed) = timeline.start().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280420,"byte_end":280479,"line_start":421,"line_end":421,"column_start":1,"column_end":60}},{"value":"/ for tweet in &*feed {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280480,"byte_end":280505,"line_start":422,"line_end":422,"column_start":1,"column_end":26}},{"value":"/     println!(\"<@{}> {}\", tweet.user.as_ref().unwrap().screen_name, tweet.text);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280506,"byte_end":280589,"line_start":423,"line_end":423,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280590,"byte_end":280595,"line_start":424,"line_end":424,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280596,"byte_end":280603,"line_start":425,"line_end":425,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280604,"byte_end":280611,"line_start":426,"line_end":426,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280612,"byte_end":280615,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ If you need to load the next set of tweets, call `older`, which will automatically update the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280616,"byte_end":280713,"line_start":428,"line_end":428,"column_start":1,"column_end":98}},{"value":"/ tweet IDs it tracks:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280714,"byte_end":280738,"line_start":429,"line_end":429,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280739,"byte_end":280742,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280743,"byte_end":280761,"line_start":431,"line_end":431,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280762,"byte_end":280788,"line_start":432,"line_end":432,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280789,"byte_end":280809,"line_start":433,"line_end":433,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280810,"byte_end":280833,"line_start":434,"line_end":434,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280834,"byte_end":280876,"line_start":435,"line_end":435,"column_start":1,"column_end":43}},{"value":"/ # let timeline = egg_mode::tweet::home_timeline(&token);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280877,"byte_end":280937,"line_start":436,"line_end":436,"column_start":1,"column_end":61}},{"value":"/ # let (timeline, _) = timeline.start().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280938,"byte_end":280996,"line_start":437,"line_end":437,"column_start":1,"column_end":59}},{"value":"/ let (timeline, feed) = timeline.older(None).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":280997,"byte_end":281060,"line_start":438,"line_end":438,"column_start":1,"column_end":64}},{"value":"/ for tweet in &*feed {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281061,"byte_end":281086,"line_start":439,"line_end":439,"column_start":1,"column_end":26}},{"value":"/     println!(\"<@{}> {}\", tweet.user.as_ref().unwrap().screen_name, tweet.text);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281087,"byte_end":281170,"line_start":440,"line_end":440,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281171,"byte_end":281176,"line_start":441,"line_end":441,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281177,"byte_end":281184,"line_start":442,"line_end":442,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281185,"byte_end":281192,"line_start":443,"line_end":443,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281193,"byte_end":281196,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ ...and similarly for `newer`, which operates in a similar fashion.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281197,"byte_end":281267,"line_start":445,"line_end":445,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281268,"byte_end":281271,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ If you want to start afresh and reload the newest set of tweets again, you can call `start`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281272,"byte_end":281367,"line_start":447,"line_end":447,"column_start":1,"column_end":96}},{"value":"/ again, which will clear the tracked tweet IDs before loading the newest set of tweets. However,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281368,"byte_end":281467,"line_start":448,"line_end":448,"column_start":1,"column_end":100}},{"value":"/ if you've been storing these tweets as you go, and already know the newest tweet ID you have on","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281468,"byte_end":281567,"line_start":449,"line_end":449,"column_start":1,"column_end":100}},{"value":"/ hand, you can load only those tweets you need like this:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281568,"byte_end":281628,"line_start":450,"line_end":450,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281629,"byte_end":281632,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281633,"byte_end":281651,"line_start":452,"line_end":452,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281652,"byte_end":281678,"line_start":453,"line_end":453,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281679,"byte_end":281699,"line_start":454,"line_end":454,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281700,"byte_end":281723,"line_start":455,"line_end":455,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281724,"byte_end":281766,"line_start":456,"line_end":456,"column_start":1,"column_end":43}},{"value":"/ let timeline = egg_mode::tweet::home_timeline(&token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281767,"byte_end":281824,"line_start":457,"line_end":457,"column_start":1,"column_end":58}},{"value":"/                                .with_page_size(10);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281825,"byte_end":281880,"line_start":458,"line_end":458,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281881,"byte_end":281884,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ let (timeline, _feed) = timeline.start().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281885,"byte_end":281945,"line_start":460,"line_end":460,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281946,"byte_end":281949,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ //keep the max_id for later","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281950,"byte_end":281981,"line_start":462,"line_end":462,"column_start":1,"column_end":32}},{"value":"/ let reload_id = timeline.max_id.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":281982,"byte_end":282027,"line_start":463,"line_end":463,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282028,"byte_end":282031,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ //simulate scrolling down a little bit","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282032,"byte_end":282074,"line_start":465,"line_end":465,"column_start":1,"column_end":43}},{"value":"/ let (timeline, _feed) = timeline.older(None).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282075,"byte_end":282139,"line_start":466,"line_end":466,"column_start":1,"column_end":65}},{"value":"/ let (mut timeline, _feed) = timeline.older(None).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282140,"byte_end":282208,"line_start":467,"line_end":467,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282209,"byte_end":282212,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ //reload the timeline with only what's new","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282213,"byte_end":282259,"line_start":469,"line_end":469,"column_start":1,"column_end":47}},{"value":"/ timeline.reset();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282260,"byte_end":282281,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/ let (timeline, _new_posts) = timeline.older(Some(reload_id)).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282282,"byte_end":282362,"line_start":471,"line_end":471,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282363,"byte_end":282370,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282371,"byte_end":282378,"line_start":473,"line_end":473,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282379,"byte_end":282382,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ Here, the argument to `older` means \"older than what I just returned, but newer than the given","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282383,"byte_end":282481,"line_start":475,"line_end":475,"column_start":1,"column_end":99}},{"value":"/ ID\". Since we cleared the tracked IDs with `reset`, that turns into \"the newest tweets","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282482,"byte_end":282572,"line_start":476,"line_end":476,"column_start":1,"column_end":91}},{"value":"/ available that were posted after the given ID\". The earlier invocations of `older` with `None`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282573,"byte_end":282671,"line_start":477,"line_end":477,"column_start":1,"column_end":99}},{"value":"/ do not place a bound on the tweets it loads. `newer` operates in a similar fashion with its","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282672,"byte_end":282767,"line_start":478,"line_end":478,"column_start":1,"column_end":96}},{"value":"/ argument, saying \"newer than what I just returned, but not newer than this given ID\". When","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282768,"byte_end":282862,"line_start":479,"line_end":479,"column_start":1,"column_end":95}},{"value":"/ called like this, it's possible for these methods to return nothing, which will also clear the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282863,"byte_end":282961,"line_start":480,"line_end":480,"column_start":1,"column_end":99}},{"value":"/ `Timeline`'s tracked IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282962,"byte_end":282991,"line_start":481,"line_end":481,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282992,"byte_end":282995,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ If you want to manually pull tweets between certain IDs, the baseline `call` function can do","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":282996,"byte_end":283092,"line_start":483,"line_end":483,"column_start":1,"column_end":97}},{"value":"/ that for you. Keep in mind, though, that `call` doesn't update the `min_id` or `max_id` fields,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283093,"byte_end":283192,"line_start":484,"line_end":484,"column_start":1,"column_end":100}},{"value":"/ so you'll have to set those yourself if you want to follow up with `older` or `newer`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283193,"byte_end":283283,"line_start":485,"line_end":485,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283800,"byte_end":283805,"line_start":496,"line_end":496,"column_start":9,"column_end":14},"name":"count","qualname":"::tweet::Timeline::count","value":"i32","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"The maximum number of tweets to return in a single call. Twitter doesn't guarantee returning\nexactly this number, as suspended or deleted content is removed after retrieving the initial\ncollection of tweets.\n","sig":null,"attributes":[{"value":"/The maximum number of tweets to return in a single call. Twitter doesn't guarantee returning","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283567,"byte_end":283662,"line_start":493,"line_end":493,"column_start":5,"column_end":100}},{"value":"/exactly this number, as suspended or deleted content is removed after retrieving the initial","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283667,"byte_end":283762,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/collection of tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283767,"byte_end":283791,"line_start":495,"line_end":495,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283919,"byte_end":283925,"line_start":498,"line_end":498,"column_start":9,"column_end":15},"name":"max_id","qualname":"::tweet::Timeline::max_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"The largest/most recent tweet ID returned in the last call to `start`, `older`, or `newer`.\n","sig":null,"attributes":[{"value":"/The largest/most recent tweet ID returned in the last call to `start`, `older`, or `newer`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283816,"byte_end":283910,"line_start":497,"line_end":497,"column_start":5,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284043,"byte_end":284049,"line_start":500,"line_end":500,"column_start":9,"column_end":15},"name":"min_id","qualname":"::tweet::Timeline::min_id","value":"std::option::Option<u64>","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"The smallest/oldest tweet ID returned in the last call to `start`, `older`, or `newer`.\n","sig":null,"attributes":[{"value":"/The smallest/oldest tweet ID returned in the last call to `start`, `older`, or `newer`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":283944,"byte_end":284034,"line_start":499,"line_end":499,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284139,"byte_end":284144,"line_start":505,"line_end":505,"column_start":12,"column_end":17},"name":"reset","qualname":"<Timeline>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Clear the saved IDs on this timeline.\n","sig":null,"attributes":[{"value":"/Clear the saved IDs on this timeline.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284087,"byte_end":284127,"line_start":504,"line_end":504,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284319,"byte_end":284324,"line_start":511,"line_end":511,"column_start":12,"column_end":17},"name":"start","qualname":"<Timeline>::start","value":"fn (mut self) -> TimelineFuture","parent":null,"children":[],"decl_id":null,"docs":"Clear the saved IDs on this timeline, and return the most recent set of tweets.\n","sig":null,"attributes":[{"value":"/Clear the saved IDs on this timeline, and return the most recent set of tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284225,"byte_end":284307,"line_start":510,"line_end":510,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284545,"byte_end":284550,"line_start":519,"line_end":519,"column_start":12,"column_end":17},"name":"older","qualname":"<Timeline>::older","value":"fn (self, since_id: Option<u64>) -> TimelineFuture","parent":null,"children":[],"decl_id":null,"docs":"Return the set of tweets older than the last set pulled, optionally placing a minimum tweet\nID to bound with.\n","sig":null,"attributes":[{"value":"/Return the set of tweets older than the last set pulled, optionally placing a minimum tweet","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284414,"byte_end":284508,"line_start":517,"line_end":517,"column_start":5,"column_end":99}},{"value":"/ID to bound with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284513,"byte_end":284533,"line_start":518,"line_end":518,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284975,"byte_end":284980,"line_start":531,"line_end":531,"column_start":12,"column_end":17},"name":"newer","qualname":"<Timeline>::newer","value":"fn (self, max_id: Option<u64>) -> TimelineFuture","parent":null,"children":[],"decl_id":null,"docs":"Return the set of tweets newer than the last set pulled, optionall placing a maximum tweet\nID to bound with.\n","sig":null,"attributes":[{"value":"/Return the set of tweets newer than the last set pulled, optionall placing a maximum tweet","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284845,"byte_end":284938,"line_start":529,"line_end":529,"column_start":5,"column_end":98}},{"value":"/ID to bound with.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284943,"byte_end":284963,"line_start":530,"line_end":530,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285632,"byte_end":285636,"line_start":548,"line_end":548,"column_start":18,"column_end":22},"name":"call","qualname":"<Timeline>::call","value":"fn (&self, since_id: Option<u64>, max_id: Option<u64>) -> Result<Response<Vec<Tweet>>>","parent":null,"children":[],"decl_id":null,"docs":"Return the set of tweets between the IDs given.","sig":null,"attributes":[{"value":"/Return the set of tweets between the IDs given.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285254,"byte_end":285304,"line_start":541,"line_end":541,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285309,"byte_end":285312,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/Note that the range is not fully inclusive; the tweet ID given by `since_id` will not be","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285317,"byte_end":285408,"line_start":543,"line_end":543,"column_start":5,"column_end":96}},{"value":"/returned, but the tweet ID in `max_id` will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285413,"byte_end":285472,"line_start":544,"line_end":544,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285477,"byte_end":285480,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/If the range of tweets given by the IDs would return more than `self.count`, the newest set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285485,"byte_end":285579,"line_start":546,"line_end":546,"column_start":5,"column_end":99}},{"value":"/of tweets will be returned.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":285584,"byte_end":285614,"line_start":547,"line_end":547,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":286507,"byte_end":286521,"line_start":569,"line_end":569,"column_start":12,"column_end":26},"name":"with_page_size","qualname":"<Timeline>::with_page_size","value":"fn (self, page_size: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Helper builder function to set the page size.\n","sig":null,"attributes":[{"value":"/Helper builder function to set the page size.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":286447,"byte_end":286495,"line_start":568,"line_end":568,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287633,"byte_end":287647,"line_start":605,"line_end":605,"column_start":12,"column_end":26},"name":"TimelineFuture","qualname":"::tweet::TimelineFuture","value":"TimelineFuture {  }","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195}],"decl_id":null,"docs":" `Future` which represents loading from a `Timeline`.","sig":null,"attributes":[{"value":"/ `Future` which represents loading from a `Timeline`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287303,"byte_end":287359,"line_start":599,"line_end":599,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287360,"byte_end":287363,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ When this future completes, it will either return the tweets given by Twitter (after having","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287364,"byte_end":287459,"line_start":601,"line_end":601,"column_start":1,"column_end":96}},{"value":"/ updated the IDs in the parent `Timeline`) or the error encountered when loading or parsing the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287460,"byte_end":287558,"line_start":602,"line_end":602,"column_start":1,"column_end":99}},{"value":"/ response.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287559,"byte_end":287572,"line_start":603,"line_end":603,"column_start":1,"column_end":14}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287573,"byte_end":287621,"line_start":604,"line_end":604,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290061,"byte_end":290071,"line_start":678,"line_end":678,"column_start":12,"column_end":22},"name":"DraftTweet","qualname":"::tweet::DraftTweet","value":"DraftTweet { text, in_reply_to, auto_populate_reply_metadata, exclude_reply_user_ids, attachment_url, coordinates, display_coordinates, place_id, media_ids, possibly_sensitive }","parent":null,"children":[{"krate":0,"index":4400},{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409}],"decl_id":null,"docs":" Represents an in-progress tweet before it is sent.","sig":null,"attributes":[{"value":"/ Represents an in-progress tweet before it is sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288416,"byte_end":288470,"line_start":629,"line_end":629,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288471,"byte_end":288474,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ This is your entry point to posting new tweets to Twitter. To begin, make a new `DraftTweet` by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288475,"byte_end":288574,"line_start":631,"line_end":631,"column_start":1,"column_end":100}},{"value":"/ calling `new` with your desired status text:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288575,"byte_end":288623,"line_start":632,"line_end":632,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288624,"byte_end":288627,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288628,"byte_end":288646,"line_start":634,"line_end":634,"column_start":1,"column_end":19}},{"value":"/ use egg_mode::tweet::DraftTweet;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288647,"byte_end":288683,"line_start":635,"line_end":635,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288684,"byte_end":288687,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ let draft = DraftTweet::new(\"This is an example status!\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288688,"byte_end":288750,"line_start":637,"line_end":637,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288751,"byte_end":288758,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288759,"byte_end":288762,"line_start":639,"line_end":639,"column_start":1,"column_end":4}},{"value":"/ As-is, the draft won't do anything until you call `send` to post it:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288763,"byte_end":288835,"line_start":640,"line_end":640,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288836,"byte_end":288839,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288840,"byte_end":288858,"line_start":642,"line_end":642,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288859,"byte_end":288885,"line_start":643,"line_end":643,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288886,"byte_end":288906,"line_start":644,"line_end":644,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288907,"byte_end":288930,"line_start":645,"line_end":645,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288931,"byte_end":288973,"line_start":646,"line_end":646,"column_start":1,"column_end":43}},{"value":"/ # use egg_mode::tweet::DraftTweet;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":288974,"byte_end":289012,"line_start":647,"line_end":647,"column_start":1,"column_end":39}},{"value":"/ # let draft = DraftTweet::new(\"This is an example status!\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289013,"byte_end":289077,"line_start":648,"line_end":648,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289078,"byte_end":289081,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ draft.send(&token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289082,"byte_end":289120,"line_start":650,"line_end":650,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289121,"byte_end":289128,"line_start":651,"line_end":651,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289129,"byte_end":289136,"line_start":652,"line_end":652,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289137,"byte_end":289140,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ Right now, the options for adding metadata to a post are pretty sparse. See the adaptor","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289141,"byte_end":289232,"line_start":654,"line_end":654,"column_start":1,"column_end":92}},{"value":"/ functions below to see what metadata can be set. For example, you can use `in_reply_to` to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289233,"byte_end":289327,"line_start":655,"line_end":655,"column_start":1,"column_end":95}},{"value":"/ create a reply-chain like this:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289328,"byte_end":289363,"line_start":656,"line_end":656,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289364,"byte_end":289367,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289368,"byte_end":289386,"line_start":658,"line_end":658,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289387,"byte_end":289413,"line_start":659,"line_end":659,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289414,"byte_end":289434,"line_start":660,"line_end":660,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289435,"byte_end":289458,"line_start":661,"line_end":661,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289459,"byte_end":289501,"line_start":662,"line_end":662,"column_start":1,"column_end":43}},{"value":"/ use egg_mode::tweet::DraftTweet;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289502,"byte_end":289538,"line_start":663,"line_end":663,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289539,"byte_end":289542,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"/ let draft = DraftTweet::new(\"I'd like to start a thread here.\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289543,"byte_end":289611,"line_start":665,"line_end":665,"column_start":1,"column_end":69}},{"value":"/ let tweet = draft.send(&token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289612,"byte_end":289662,"line_start":666,"line_end":666,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289663,"byte_end":289666,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ let draft = DraftTweet::new(\"You see, I have a lot of things to say.\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289667,"byte_end":289741,"line_start":668,"line_end":668,"column_start":1,"column_end":75}},{"value":"/                        .in_reply_to(tweet.id);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289742,"byte_end":289792,"line_start":669,"line_end":669,"column_start":1,"column_end":51}},{"value":"/ let tweet = draft.send(&token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289793,"byte_end":289843,"line_start":670,"line_end":670,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289844,"byte_end":289847,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ let draft = DraftTweet::new(\"Thank you for your time.\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289848,"byte_end":289907,"line_start":672,"line_end":672,"column_start":1,"column_end":60}},{"value":"/                        .in_reply_to(tweet.id);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289908,"byte_end":289958,"line_start":673,"line_end":673,"column_start":1,"column_end":51}},{"value":"/ let tweet = draft.send(&token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":289959,"byte_end":290009,"line_start":674,"line_end":674,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290010,"byte_end":290017,"line_start":675,"line_end":675,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290018,"byte_end":290025,"line_start":676,"line_end":676,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":4400},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290118,"byte_end":290122,"line_start":680,"line_end":680,"column_start":9,"column_end":13},"name":"text","qualname":"::tweet::DraftTweet::text","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"The text of the draft tweet.\n","sig":null,"attributes":[{"value":"/The text of the draft tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290078,"byte_end":290109,"line_start":679,"line_end":679,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4401},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290217,"byte_end":290228,"line_start":682,"line_end":682,"column_start":9,"column_end":20},"name":"in_reply_to","qualname":"::tweet::DraftTweet::in_reply_to","value":"std::option::Option<u64>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"If present, the ID of the tweet this draft is replying to.\n","sig":null,"attributes":[{"value":"/If present, the ID of the tweet this draft is replying to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290147,"byte_end":290208,"line_start":681,"line_end":681,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":4402},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290368,"byte_end":290396,"line_start":685,"line_end":685,"column_start":9,"column_end":37},"name":"auto_populate_reply_metadata","qualname":"::tweet::DraftTweet::auto_populate_reply_metadata","value":"std::option::Option<bool>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"If present, whether to automatically fill reply mentions from the metadata of the\n`in_reply_to` tweet.\n","sig":null,"attributes":[{"value":"/If present, whether to automatically fill reply mentions from the metadata of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290247,"byte_end":290331,"line_start":683,"line_end":683,"column_start":5,"column_end":89}},{"value":"/`in_reply_to` tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290336,"byte_end":290359,"line_start":684,"line_end":684,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4403},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290572,"byte_end":290594,"line_start":688,"line_end":688,"column_start":9,"column_end":31},"name":"exclude_reply_user_ids","qualname":"::tweet::DraftTweet::exclude_reply_user_ids","value":"std::option::Option<std::borrow::Cow<'static, [u64]>>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"If present, the list of user IDs to exclude from the automatically-populated metadata pulled\nwhen `auto_populate_reply_metadata` is true.\n","sig":null,"attributes":[{"value":"/If present, the list of user IDs to exclude from the automatically-populated metadata pulled","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290416,"byte_end":290511,"line_start":686,"line_end":686,"column_start":5,"column_end":100}},{"value":"/when `auto_populate_reply_metadata` is true.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290516,"byte_end":290563,"line_start":687,"line_end":687,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4404},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291031,"byte_end":291045,"line_start":696,"line_end":696,"column_start":9,"column_end":23},"name":"attachment_url","qualname":"::tweet::DraftTweet::attachment_url","value":"std::option::Option<std::borrow::Cow<'static, str>>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"If present, the tweet link to quote or a [DM deep link][] to include in the tweet's\nattachment metadata.","sig":null,"attributes":[{"value":"/If present, the tweet link to quote or a [DM deep link][] to include in the tweet's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290629,"byte_end":290715,"line_start":689,"line_end":689,"column_start":5,"column_end":91}},{"value":"/attachment metadata.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290720,"byte_end":290743,"line_start":690,"line_end":690,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290748,"byte_end":290751,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/Note that if this link is not a tweet link or a [DM deep link][], Twitter will return an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290756,"byte_end":290847,"line_start":692,"line_end":692,"column_start":5,"column_end":96}},{"value":"/error when the draft is sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290852,"byte_end":290884,"line_start":693,"line_end":693,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290889,"byte_end":290892,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/[DM deep link]: https://business.twitter.com/en/help/campaign-editing-and-optimization/public-to-private-conversation.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":290897,"byte_end":291022,"line_start":695,"line_end":695,"column_start":5,"column_end":130}}]},{"kind":"Field","id":{"krate":0,"index":4405},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291149,"byte_end":291160,"line_start":698,"line_end":698,"column_start":9,"column_end":20},"name":"coordinates","qualname":"::tweet::DraftTweet::coordinates","value":"std::option::Option<(f64, f64)>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"If present, the latitude/longitude coordinates to attach to the draft.\n","sig":null,"attributes":[{"value":"/If present, the latitude/longitude coordinates to attach to the draft.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291067,"byte_end":291140,"line_start":697,"line_end":697,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":4406},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291347,"byte_end":291366,"line_start":701,"line_end":701,"column_start":9,"column_end":28},"name":"display_coordinates","qualname":"::tweet::DraftTweet::display_coordinates","value":"std::option::Option<bool>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"If present (and if `coordinates` is present), indicates whether to display a pin on the\nexact coordinate when the eventual tweet is displayed.\n","sig":null,"attributes":[{"value":"/If present (and if `coordinates` is present), indicates whether to display a pin on the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291186,"byte_end":291276,"line_start":699,"line_end":699,"column_start":5,"column_end":95}},{"value":"/exact coordinate when the eventual tweet is displayed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291281,"byte_end":291338,"line_start":700,"line_end":700,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4407},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291443,"byte_end":291451,"line_start":703,"line_end":703,"column_start":9,"column_end":17},"name":"place_id","qualname":"::tweet::DraftTweet::place_id","value":"std::option::Option<std::borrow::Cow<'static, str>>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"If present the Place to attach to this draft.\n","sig":null,"attributes":[{"value":"/If present the Place to attach to this draft.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291386,"byte_end":291434,"line_start":702,"line_end":702,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291952,"byte_end":291961,"line_start":713,"line_end":713,"column_start":9,"column_end":18},"name":"media_ids","qualname":"::tweet::DraftTweet::media_ids","value":"std::vec::Vec<media::MediaId>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"List of media entities associated with tweet.","sig":null,"attributes":[{"value":"/List of media entities associated with tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291473,"byte_end":291521,"line_start":704,"line_end":704,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291526,"byte_end":291529,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/A tweet can have one video, one GIF, or up to four images attached to it. When attaching","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291534,"byte_end":291625,"line_start":706,"line_end":706,"column_start":5,"column_end":96}},{"value":"/them to a tweet, they're represented by a media ID, given through the upload process. (See","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291630,"byte_end":291723,"line_start":707,"line_end":707,"column_start":5,"column_end":98}},{"value":"/[the `media` module] for more information on how to upload media.)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291728,"byte_end":291797,"line_start":708,"line_end":708,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291802,"byte_end":291805,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/[the `media` module]: ../media/index.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291810,"byte_end":291854,"line_start":710,"line_end":710,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291859,"byte_end":291862,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/`DraftTweet` treats zeros in this array as if the media were not present.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291867,"byte_end":291943,"line_start":712,"line_end":712,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292130,"byte_end":292148,"line_start":716,"line_end":716,"column_start":9,"column_end":27},"name":"possibly_sensitive","qualname":"::tweet::DraftTweet::possibly_sensitive","value":"std::option::Option<bool>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":"States whether the media attached with `media_ids` should be labeled as \"possibly\nsensitive\", to mask the media by default.\n","sig":null,"attributes":[{"value":"/States whether the media attached with `media_ids` should be labeled as \"possibly","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":291988,"byte_end":292072,"line_start":714,"line_end":714,"column_start":5,"column_end":89}},{"value":"/sensitive\", to mask the media by default.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292077,"byte_end":292121,"line_start":715,"line_end":715,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292258,"byte_end":292261,"line_start":721,"line_end":721,"column_start":12,"column_end":15},"name":"new","qualname":"<DraftTweet>::new","value":"fn <S> (text: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Creates a new `DraftTweet` with the given status text.\n","sig":null,"attributes":[{"value":"/Creates a new `DraftTweet` with the given status text.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292189,"byte_end":292246,"line_start":720,"line_end":720,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292984,"byte_end":292995,"line_start":740,"line_end":740,"column_start":12,"column_end":23},"name":"in_reply_to","qualname":"<DraftTweet>::in_reply_to","value":"fn (self, in_reply_to: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Marks this draft tweet as replying to the given status ID.","sig":null,"attributes":[{"value":"/Marks this draft tweet as replying to the given status ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292708,"byte_end":292769,"line_start":736,"line_end":736,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292774,"byte_end":292777,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/Note that this will only properly take effect if the user who posted the given status is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292782,"byte_end":292873,"line_start":738,"line_end":738,"column_start":5,"column_end":96}},{"value":"/@mentioned in the status text, or if the given status was posted by the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292878,"byte_end":292972,"line_start":739,"line_end":739,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293623,"byte_end":293651,"line_start":755,"line_end":755,"column_start":12,"column_end":40},"name":"auto_populate_reply_metadata","qualname":"<DraftTweet>::auto_populate_reply_metadata","value":"fn (self, auto_populate: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Tells Twitter whether or not to automatically fill reply mentions from the tweet linked in\n`in_reply_to`.","sig":null,"attributes":[{"value":"/Tells Twitter whether or not to automatically fill reply mentions from the tweet linked in","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293135,"byte_end":293228,"line_start":747,"line_end":747,"column_start":5,"column_end":98}},{"value":"/`in_reply_to`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293233,"byte_end":293250,"line_start":748,"line_end":748,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293255,"byte_end":293258,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/This parameter will have no effect if `in_reply_to` is absent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293263,"byte_end":293328,"line_start":750,"line_end":750,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293333,"byte_end":293336,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/If you set this to true, you can strip out the mentions from the beginning of the tweet text","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293341,"byte_end":293436,"line_start":752,"line_end":752,"column_start":5,"column_end":100}},{"value":"/if they were also in the reply mentions of the parent tweet. To remove handles from the list","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293441,"byte_end":293536,"line_start":753,"line_end":753,"column_start":5,"column_end":100}},{"value":"/of reply mentions, hand their user IDs to `exclude_reply_user_ids`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293541,"byte_end":293611,"line_start":754,"line_end":754,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294226,"byte_end":294248,"line_start":769,"line_end":769,"column_start":12,"column_end":34},"name":"exclude_reply_user_ids","qualname":"<DraftTweet>::exclude_reply_user_ids","value":"fn <V> (self, user_ids: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Tells Twitter to exclude the given list of user IDs from the automatically-populated reply\nmentions.","sig":null,"attributes":[{"value":"/Tells Twitter to exclude the given list of user IDs from the automatically-populated reply","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293813,"byte_end":293906,"line_start":762,"line_end":762,"column_start":5,"column_end":98}},{"value":"/mentions.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293911,"byte_end":293923,"line_start":763,"line_end":763,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293928,"byte_end":293931,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/This parameter will have no effect if `auto_populate_reply_metadata` is absent or false.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":293936,"byte_end":294027,"line_start":765,"line_end":765,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294032,"byte_end":294035,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/Note that you cannot use this parameter to remove the author of the parent tweet from the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294040,"byte_end":294132,"line_start":767,"line_end":767,"column_start":5,"column_end":97}},{"value":"/reply list. Twitter will silently ignore the author's ID in that scenario.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294137,"byte_end":294214,"line_start":768,"line_end":768,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294858,"byte_end":294872,"line_start":783,"line_end":783,"column_start":12,"column_end":26},"name":"attachment_url","qualname":"<DraftTweet>::attachment_url","value":"fn <S> (self, url: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Attaches the given tweet URL or [DM deep link][] to the tweet draft, which lets it be used\noutside the 280 character text limit.","sig":null,"attributes":[{"value":"/Attaches the given tweet URL or [DM deep link][] to the tweet draft, which lets it be used","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294428,"byte_end":294521,"line_start":776,"line_end":776,"column_start":5,"column_end":98}},{"value":"/outside the 280 character text limit.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294526,"byte_end":294566,"line_start":777,"line_end":777,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294571,"byte_end":294574,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/Note that if this link is not a tweet URL or a DM deep link, then Twitter will return an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294579,"byte_end":294670,"line_start":779,"line_end":779,"column_start":5,"column_end":96}},{"value":"/error when this draft is sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294675,"byte_end":294708,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294713,"byte_end":294716,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/[DM deep link]: https://business.twitter.com/en/help/campaign-editing-and-optimization/public-to-private-conversation.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":294721,"byte_end":294846,"line_start":782,"line_end":782,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295527,"byte_end":295538,"line_start":798,"line_end":798,"column_start":12,"column_end":23},"name":"coordinates","qualname":"<DraftTweet>::coordinates","value":"fn (self, latitude: f64, longitude: f64, display: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Attach a lat/lon coordinate to this tweet, and mark whether a pin should be placed on the\nexact coordinate when the tweet is displayed.","sig":null,"attributes":[{"value":"/Attach a lat/lon coordinate to this tweet, and mark whether a pin should be placed on the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295032,"byte_end":295124,"line_start":790,"line_end":790,"column_start":5,"column_end":97}},{"value":"/exact coordinate when the tweet is displayed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295129,"byte_end":295177,"line_start":791,"line_end":791,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295182,"byte_end":295185,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/If coordinates are given through this method and no `place_id` is attached, Twitter will","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295190,"byte_end":295281,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/effectively call `place::reverse_geocode` with the given coordinate and attach that Place to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295286,"byte_end":295381,"line_start":794,"line_end":794,"column_start":5,"column_end":100}},{"value":"/the eventual tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295386,"byte_end":295408,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295413,"byte_end":295416,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/Location fields will be ignored unless the user has enabled geolocation from their profile.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295421,"byte_end":295515,"line_start":797,"line_end":797,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296028,"byte_end":296036,"line_start":810,"line_end":810,"column_start":12,"column_end":20},"name":"place_id","qualname":"<DraftTweet>::place_id","value":"fn <S> (self, place_id: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Attach a Place to this tweet. This field will take precedence over `coordinates` in terms of\nwhat location is displayed with the tweet.","sig":null,"attributes":[{"value":"/Attach a Place to this tweet. This field will take precedence over `coordinates` in terms of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295764,"byte_end":295859,"line_start":806,"line_end":806,"column_start":5,"column_end":100}},{"value":"/what location is displayed with the tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295864,"byte_end":295909,"line_start":807,"line_end":807,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295914,"byte_end":295917,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/Location fields will be ignored unless the user has enabled geolocation from their profile.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":295922,"byte_end":296016,"line_start":809,"line_end":809,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296548,"byte_end":296557,"line_start":822,"line_end":822,"column_start":12,"column_end":21},"name":"add_media","qualname":"<DraftTweet>::add_media","value":"fn (&mut self, media_id: media::MediaId) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Attaches the given media ID(s) to this tweet. If more than four IDs are in this slice, only\nthe first four will be attached. Note that Twitter will only allow one GIF, one video, or up\nto four images to be attached to a single tweet.","sig":null,"attributes":[{"value":"/Attaches the given media ID(s) to this tweet. If more than four IDs are in this slice, only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296189,"byte_end":296283,"line_start":817,"line_end":817,"column_start":5,"column_end":99}},{"value":"/the first four will be attached. Note that Twitter will only allow one GIF, one video, or up","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296288,"byte_end":296383,"line_start":818,"line_end":818,"column_start":5,"column_end":100}},{"value":"/to four images to be attached to a single tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296388,"byte_end":296439,"line_start":819,"line_end":819,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296444,"byte_end":296447,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ Note that if this is called multiple times, only the last four IDs will be kept.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296452,"byte_end":296536,"line_start":821,"line_end":821,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296849,"byte_end":296867,"line_start":831,"line_end":831,"column_start":12,"column_end":30},"name":"possibly_sensitive","qualname":"<DraftTweet>::possibly_sensitive","value":"fn (self, sensitive: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Marks the media attached with `media_ids` as being sensitive, so it can be hidden by\ndefault.\n","sig":null,"attributes":[{"value":"/Marks the media attached with `media_ids` as being sensitive, so it can be hidden by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296734,"byte_end":296821,"line_start":829,"line_end":829,"column_start":5,"column_end":92}},{"value":"/default.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":296826,"byte_end":296837,"line_start":830,"line_end":830,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":297083,"byte_end":297087,"line_start":839,"line_end":839,"column_start":18,"column_end":22},"name":"send","qualname":"<DraftTweet>::send","value":"fn (&self, token: &auth::Token) -> Result<Response<Tweet>>","parent":null,"children":[],"decl_id":null,"docs":"Send the assembled tweet as the authenticated user.\n","sig":null,"attributes":[{"value":"/Send the assembled tweet as the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":297011,"byte_end":297065,"line_start":838,"line_end":838,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"user","qualname":"::user","value":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1239},{"krate":0,"index":1319},{"krate":0,"index":1325},{"krate":0,"index":4597},{"krate":0,"index":4610},{"krate":0,"index":4608},{"krate":0,"index":4604},{"krate":0,"index":4606},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":4612},{"krate":0,"index":4655},{"krate":0,"index":4653},{"krate":0,"index":1331},{"krate":0,"index":4657},{"krate":0,"index":4707},{"krate":0,"index":4705},{"krate":0,"index":4703},{"krate":0,"index":4660},{"krate":0,"index":4709},{"krate":0,"index":4756},{"krate":0,"index":4754},{"krate":0,"index":4752},{"krate":0,"index":4711},{"krate":0,"index":1335},{"krate":0,"index":1342},{"krate":0,"index":1349},{"krate":0,"index":4758},{"krate":0,"index":4804},{"krate":0,"index":4761},{"krate":0,"index":4806},{"krate":0,"index":4858},{"krate":0,"index":4811},{"krate":0,"index":4860},{"krate":0,"index":4930},{"krate":0,"index":4871},{"krate":0,"index":4932},{"krate":0,"index":4984},{"krate":0,"index":4937},{"krate":0,"index":4986},{"krate":0,"index":5050},{"krate":0,"index":5001}],"decl_id":null,"docs":" Structs and methods for pulling user information from Twitter.","sig":null,"attributes":[{"value":"! Structs and methods for pulling user information from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":315781,"byte_end":315847,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":315848,"byte_end":315851,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Everything in here acts on users in some way, whether looking up user information, finding the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":315852,"byte_end":315950,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"! relations between two users, or actions like following or blocking a user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":315951,"byte_end":316029,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316030,"byte_end":316033,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ## Types","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316034,"byte_end":316046,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316047,"byte_end":316050,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! - `UserID`: used as a generic input to many functions, this enum allows you to refer to a user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316051,"byte_end":316149,"line_start":12,"line_end":12,"column_start":1,"column_end":99}},{"value":"!   by a numeric ID or by their screen name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316150,"byte_end":316196,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"! - `Relationship`/`RelationSource`/`RelationTarget`: returned by `relation`, these types","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316197,"byte_end":316288,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"!   (`Relationship` contains the other two) show the ways two accounts relate to each other.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316289,"byte_end":316383,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"! - `RelationLookup`/`Connection`: returned as part of a collection by `relation_lookup`, these","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316384,"byte_end":316481,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"!   types (`RelationLookup` contains a `Vec<Connection>`) shows the ways the authenticated user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316482,"byte_end":316579,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"!   relates to a specific account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316580,"byte_end":316616,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"! - `TwitterUser`/`UserEntities`/`UserEntityDetail`: returned by many functions in this module,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316617,"byte_end":316714,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"!   these types (`TwitterUser` contains the other two) describe the content of a user's profile,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316715,"byte_end":316813,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"!   and a handful of settings relating to how their profile is displayed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316814,"byte_end":316889,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"! - `UserSearch`: returned by `search`, this is a stream of search results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316890,"byte_end":316967,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316968,"byte_end":316971,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316972,"byte_end":316988,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316989,"byte_end":316992,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! ### User actions","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":316993,"byte_end":317013,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317014,"byte_end":317017,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! These functions perform actions to the user's account. Their use requires that your application","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317018,"byte_end":317117,"line_start":28,"line_end":28,"column_start":1,"column_end":100}},{"value":"! request write access to authenticated accounts.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317118,"byte_end":317169,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317170,"byte_end":317173,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! - `block`/`report_spam`/`unblock`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317174,"byte_end":317211,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"! - `follow`/`unfollow`/`update_follow`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317212,"byte_end":317253,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"! - `mute`/`unmute`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317254,"byte_end":317275,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317276,"byte_end":317279,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! ### Direct lookup","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317280,"byte_end":317301,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317302,"byte_end":317305,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! These functions return single users, or groups of users without having to iterate over the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317306,"byte_end":317400,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"! results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317401,"byte_end":317413,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317414,"byte_end":317417,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! - `show`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317418,"byte_end":317430,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"! - `lookup`/`lookup_ids`/`lookup_names`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317431,"byte_end":317473,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"! - `friends_no_retweets`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317474,"byte_end":317501,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"! - `relation`/`relation_lookup`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317502,"byte_end":317536,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317537,"byte_end":317540,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ### Cursored lookup","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317541,"byte_end":317564,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317565,"byte_end":317568,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! These functions imply that they can return more entries than Twitter is willing to return at","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317569,"byte_end":317665,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"! once, so they're delivered in pages. This library takes those paginated results and wraps a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317666,"byte_end":317761,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"! stream around them that loads the pages as-needed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317762,"byte_end":317816,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317817,"byte_end":317820,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! - `search`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317821,"byte_end":317835,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"! - `friends_of`/`friends_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317836,"byte_end":317868,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"! - `followers_of`/`followers_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317869,"byte_end":317905,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"! - `blocks`/`blocks_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317906,"byte_end":317933,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"! - `mutes`/`mutes_ids`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317934,"byte_end":317959,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"! - `incoming_requests`/`outgoing_requests`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":317960,"byte_end":318005,"line_start":56,"line_end":56,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346675,"byte_end":346681,"line_start":76,"line_end":76,"column_start":14,"column_end":20},"name":"lookup","qualname":"::user::fun::lookup","value":"fn <T, I> (accts: I, token: &auth::Token) -> Result<Response<Vec<TwitterUser>>>","parent":null,"children":[],"decl_id":null,"docs":" Look up profile information for several Twitter users.","sig":null,"attributes":[{"value":"/ Look up profile information for several Twitter users.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345007,"byte_end":345065,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345066,"byte_end":345069,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function is set up so it can be called with a few different Item types; whether just IDs","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345070,"byte_end":345167,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ with `u64`, just screen names with `&str` or `String`, or even a mix of both (by using `UserID`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345168,"byte_end":345267,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ directly).","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345268,"byte_end":345282,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345283,"byte_end":345286,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345287,"byte_end":345302,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345303,"byte_end":345306,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345307,"byte_end":345325,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345326,"byte_end":345352,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345353,"byte_end":345373,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345374,"byte_end":345397,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345398,"byte_end":345440,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/ let mut list: Vec<u64> = Vec::new();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345441,"byte_end":345481,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345482,"byte_end":345485,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ list.push(1234);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345486,"byte_end":345506,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ list.push(2345);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345507,"byte_end":345527,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345528,"byte_end":345531,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let users = egg_mode::user::lookup(list, &token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345532,"byte_end":345600,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345601,"byte_end":345608,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345609,"byte_end":345616,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345617,"byte_end":345620,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345621,"byte_end":345639,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345640,"byte_end":345666,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345667,"byte_end":345687,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345688,"byte_end":345711,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345712,"byte_end":345754,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/ let mut list: Vec<&str> = Vec::new();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345755,"byte_end":345796,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345797,"byte_end":345800,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ list.push(\"rustlang\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345801,"byte_end":345827,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ list.push(\"ThisWeekInRust\");","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345828,"byte_end":345860,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345861,"byte_end":345864,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let users = egg_mode::user::lookup(list, &token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345865,"byte_end":345933,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345934,"byte_end":345941,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345942,"byte_end":345949,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345950,"byte_end":345953,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345954,"byte_end":345972,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":345973,"byte_end":345999,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346000,"byte_end":346020,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346021,"byte_end":346044,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346045,"byte_end":346087,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"/ let mut list: Vec<String> = Vec::new();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346088,"byte_end":346131,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346132,"byte_end":346135,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ list.push(\"rustlang\".to_string());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346136,"byte_end":346174,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/ list.push(\"ThisWeekInRust\".to_string());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346175,"byte_end":346219,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346220,"byte_end":346223,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let users = egg_mode::user::lookup(list, &token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346224,"byte_end":346292,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346293,"byte_end":346300,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346301,"byte_end":346308,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346309,"byte_end":346312,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346313,"byte_end":346331,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346332,"byte_end":346358,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346359,"byte_end":346379,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346380,"byte_end":346403,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346404,"byte_end":346446,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/ let mut list: Vec<egg_mode::user::UserID> = Vec::new();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346447,"byte_end":346506,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346507,"byte_end":346510,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ list.push(1234.into());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346511,"byte_end":346538,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/ list.push(\"rustlang\".into());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346539,"byte_end":346572,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346573,"byte_end":346576,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let users = egg_mode::user::lookup(list, &token).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346577,"byte_end":346645,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346646,"byte_end":346653,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":346654,"byte_end":346661,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347199,"byte_end":347203,"line_start":94,"line_end":94,"column_start":14,"column_end":18},"name":"show","qualname":"::user::fun::show","value":"fn <T> (acct: T, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup user information for a single user.\n","sig":null,"attributes":[{"value":"/ Lookup user information for a single user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347139,"byte_end":347185,"line_start":93,"line_end":93,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347672,"byte_end":347691,"line_start":107,"line_end":107,"column_start":14,"column_end":33},"name":"friends_no_retweets","qualname":"::user::fun::friends_no_retweets","value":"fn (token: &auth::Token) -> Result<Response<Vec<u64>>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the user IDs that the authenticating user has disabled retweets from.","sig":null,"attributes":[{"value":"/ Lookup the user IDs that the authenticating user has disabled retweets from.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347493,"byte_end":347573,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347574,"byte_end":347577,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Use `update_follow` to enable/disable viewing retweets from a specific user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347578,"byte_end":347658,"line_start":106,"line_end":106,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347933,"byte_end":347941,"line_start":114,"line_end":114,"column_start":14,"column_end":22},"name":"relation","qualname":"::user::fun::relation","value":"fn <F, T> (from: F, to: T, token: &auth::Token) -> Result<Response<Relationship>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup relationship settings between two arbitrary users.\n","sig":null,"attributes":[{"value":"/ Lookup relationship settings between two arbitrary users.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":347858,"byte_end":347919,"line_start":113,"line_end":113,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":348696,"byte_end":348711,"line_start":134,"line_end":134,"column_start":14,"column_end":29},"name":"relation_lookup","qualname":"::user::fun::relation_lookup","value":"fn <T, I> (accts: I, token: &auth::Token) -> Result<Response<Vec<RelationLookup>>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the relations between the authenticated user and the given accounts.\n","sig":null,"attributes":[{"value":"/ Lookup the relations between the authenticated user and the given accounts.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":348603,"byte_end":348682,"line_start":133,"line_end":133,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349616,"byte_end":349622,"line_start":163,"line_end":163,"column_start":8,"column_end":14},"name":"search","qualname":"::user::fun::search","value":"fn <S> (query: S, token: &auth::Token) -> UserSearch","parent":null,"children":[],"decl_id":null,"docs":" Lookup users based on the given search term.","sig":null,"attributes":[{"value":"/ Lookup users based on the given search term.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349196,"byte_end":349244,"line_start":155,"line_end":155,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349245,"byte_end":349248,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This function returns a stream over the `TwitterUser` objects returned by Twitter. Due to a","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349249,"byte_end":349344,"line_start":157,"line_end":157,"column_start":1,"column_end":96}},{"value":"/ limitation in the API, you can only obtain the first 1000 search results. This method defaults","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349345,"byte_end":349443,"line_start":158,"line_end":158,"column_start":1,"column_end":99}},{"value":"/ to returning 10 users in a single network call; the maximum is 20. See the [`UserSearch`][]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349444,"byte_end":349539,"line_start":159,"line_end":159,"column_start":1,"column_end":96}},{"value":"/ page for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349540,"byte_end":349561,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349562,"byte_end":349565,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [`UserSearch`]: struct.UserSearch.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349566,"byte_end":349608,"line_start":162,"line_end":162,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350005,"byte_end":350015,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"friends_of","qualname":"::user::fun::friends_of","value":"fn <T> (acct: T, token: &auth::Token) -> cursor::CursorIter<cursor::UserCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users a given account follows, also called their \"friends\" within the API.","sig":null,"attributes":[{"value":"/ Lookup the users a given account follows, also called their \"friends\" within the API.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349724,"byte_end":349813,"line_start":167,"line_end":167,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349814,"byte_end":349817,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ This function returns a stream over the `TwitterUser` objects returned by Twitter. This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349818,"byte_end":349909,"line_start":169,"line_end":169,"column_start":1,"column_end":92}},{"value":"/ method defaults to returning 20 users in a single network call; the maximum is 200.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":349910,"byte_end":349997,"line_start":170,"line_end":170,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350839,"byte_end":350850,"line_start":188,"line_end":188,"column_start":8,"column_end":19},"name":"friends_ids","qualname":"::user::fun::friends_ids","value":"fn <T> (acct: T, token: &auth::Token) -> cursor::CursorIter<cursor::IDCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users a given account follows, also called their \"friends\" within the API, but only\n return their user IDs.","sig":null,"attributes":[{"value":"/ Lookup the users a given account follows, also called their \"friends\" within the API, but only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350271,"byte_end":350369,"line_start":179,"line_end":179,"column_start":1,"column_end":99}},{"value":"/ return their user IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350370,"byte_end":350396,"line_start":180,"line_end":180,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350397,"byte_end":350400,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This function returns a stream over the User IDs returned by Twitter. This method defaults to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350401,"byte_end":350498,"line_start":182,"line_end":182,"column_start":1,"column_end":98}},{"value":"/ returning 500 IDs in a single network call; the maximum is 5000.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350499,"byte_end":350567,"line_start":183,"line_end":183,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350568,"byte_end":350571,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Choosing only to load the user IDs instead of the full user information results in a call that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350572,"byte_end":350670,"line_start":185,"line_end":185,"column_start":1,"column_end":99}},{"value":"/ can return more accounts per-page, which can be useful if you anticipate having to page through","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350671,"byte_end":350770,"line_start":186,"line_end":186,"column_start":1,"column_end":100}},{"value":"/ several results and don't need all the user information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":350771,"byte_end":350831,"line_start":187,"line_end":187,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351345,"byte_end":351357,"line_start":200,"line_end":200,"column_start":8,"column_end":20},"name":"followers_of","qualname":"::user::fun::followers_of","value":"fn <T> (acct: T, token: &auth::Token) -> cursor::CursorIter<cursor::UserCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users that follow a given account.","sig":null,"attributes":[{"value":"/ Lookup the users that follow a given account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351104,"byte_end":351153,"line_start":196,"line_end":196,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351154,"byte_end":351157,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ This function returns a stream over the `TwitterUser` objects returned by Twitter. This","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351158,"byte_end":351249,"line_start":198,"line_end":198,"column_start":1,"column_end":92}},{"value":"/ method defaults to returning 20 users in a single network call; the maximum is 200.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351250,"byte_end":351337,"line_start":199,"line_end":199,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352175,"byte_end":352188,"line_start":218,"line_end":218,"column_start":8,"column_end":21},"name":"followers_ids","qualname":"::user::fun::followers_ids","value":"fn <T> (acct: T, token: &auth::Token) -> cursor::CursorIter<cursor::IDCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users that follow a given account, but only return their user IDs.","sig":null,"attributes":[{"value":"/ Lookup the users that follow a given account, but only return their user IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351651,"byte_end":351732,"line_start":210,"line_end":210,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351733,"byte_end":351736,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ This function returns a stream over the User IDs returned by Twitter. This method defaults to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351737,"byte_end":351834,"line_start":212,"line_end":212,"column_start":1,"column_end":98}},{"value":"/ returning 500 IDs in a single network call; the maximum is 5000.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351835,"byte_end":351903,"line_start":213,"line_end":213,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351904,"byte_end":351907,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Choosing only to load the user IDs instead of the full user information results in a call that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":351908,"byte_end":352006,"line_start":215,"line_end":215,"column_start":1,"column_end":99}},{"value":"/ can return more accounts per-page, which can be useful if you anticipate having to page through","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352007,"byte_end":352106,"line_start":216,"line_end":216,"column_start":1,"column_end":100}},{"value":"/ several results and don't need all the user information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352107,"byte_end":352167,"line_start":217,"line_end":217,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352838,"byte_end":352844,"line_start":232,"line_end":232,"column_start":8,"column_end":14},"name":"blocks","qualname":"::user::fun::blocks","value":"fn (token: &auth::Token) -> cursor::CursorIter<cursor::UserCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users that have been blocked by the authenticated user.","sig":null,"attributes":[{"value":"/ Lookup the users that have been blocked by the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352444,"byte_end":352514,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352515,"byte_end":352518,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Note that while loading a user's blocks list is a cursored search, it does not allow you to set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352519,"byte_end":352618,"line_start":228,"line_end":228,"column_start":1,"column_end":100}},{"value":"/ the page size. Calling `with_page_size` on a stream returned by this function will not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352619,"byte_end":352709,"line_start":229,"line_end":229,"column_start":1,"column_end":91}},{"value":"/ change the page size used by the network call. Setting `page_size` manually may result in an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352710,"byte_end":352806,"line_start":230,"line_end":230,"column_start":1,"column_end":97}},{"value":"/ error from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352807,"byte_end":352830,"line_start":231,"line_end":231,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353681,"byte_end":353691,"line_start":247,"line_end":247,"column_start":8,"column_end":18},"name":"blocks_ids","qualname":"::user::fun::blocks_ids","value":"fn (token: &auth::Token) -> cursor::CursorIter<cursor::IDCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users that have been blocked by the authenticated user, but only return their user\n IDs.","sig":null,"attributes":[{"value":"/ Lookup the users that have been blocked by the authenticated user, but only return their user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":352987,"byte_end":353084,"line_start":236,"line_end":236,"column_start":1,"column_end":98}},{"value":"/ IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353085,"byte_end":353093,"line_start":237,"line_end":237,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353094,"byte_end":353097,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ Choosing only to load the user IDs instead of the full user information results in a call that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353098,"byte_end":353196,"line_start":239,"line_end":239,"column_start":1,"column_end":99}},{"value":"/ can return more accounts per-page, which can be useful if you anticipate having to page through","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353197,"byte_end":353296,"line_start":240,"line_end":240,"column_start":1,"column_end":100}},{"value":"/ several results and don't need all the user information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353297,"byte_end":353357,"line_start":241,"line_end":241,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353358,"byte_end":353361,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Note that while loading a user's blocks list is a cursored search, it does not allow you to set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353362,"byte_end":353461,"line_start":243,"line_end":243,"column_start":1,"column_end":100}},{"value":"/ the page size. Calling `with_page_size` on a stream returned by this function will not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353462,"byte_end":353552,"line_start":244,"line_end":244,"column_start":1,"column_end":91}},{"value":"/ change the page size used by the network call. Setting `page_size` manually may result in an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353553,"byte_end":353649,"line_start":245,"line_end":245,"column_start":1,"column_end":97}},{"value":"/ error from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353650,"byte_end":353673,"line_start":246,"line_end":246,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354222,"byte_end":354227,"line_start":257,"line_end":257,"column_start":8,"column_end":13},"name":"mutes","qualname":"::user::fun::mutes","value":"fn (token: &auth::Token) -> cursor::CursorIter<cursor::UserCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users that have been muted by the authenticated user.","sig":null,"attributes":[{"value":"/ Lookup the users that have been muted by the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353831,"byte_end":353899,"line_start":251,"line_end":251,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353900,"byte_end":353903,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Note that while loading a user's mutes list is a cursored search, it does not allow you to set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":353904,"byte_end":354002,"line_start":253,"line_end":253,"column_start":1,"column_end":99}},{"value":"/ the page size. Calling `with_page_size` on a stream returned by this function will not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354003,"byte_end":354093,"line_start":254,"line_end":254,"column_start":1,"column_end":91}},{"value":"/ change the page size used by the network call. Setting `page_size` manually may result in an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354094,"byte_end":354190,"line_start":255,"line_end":255,"column_start":1,"column_end":97}},{"value":"/ error from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354191,"byte_end":354214,"line_start":256,"line_end":256,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355056,"byte_end":355065,"line_start":271,"line_end":271,"column_start":8,"column_end":17},"name":"mutes_ids","qualname":"::user::fun::mutes_ids","value":"fn (token: &auth::Token) -> cursor::CursorIter<cursor::IDCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the users that have been muted by the authenticated user, but only return their user IDs.","sig":null,"attributes":[{"value":"/ Lookup the users that have been muted by the authenticated user, but only return their user IDs.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354369,"byte_end":354469,"line_start":261,"line_end":261,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354470,"byte_end":354473,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ Choosing only to load the user IDs instead of the full user information results in a call that","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354474,"byte_end":354572,"line_start":263,"line_end":263,"column_start":1,"column_end":99}},{"value":"/ can return more accounts per-page, which can be useful if you anticipate having to page through","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354573,"byte_end":354672,"line_start":264,"line_end":264,"column_start":1,"column_end":100}},{"value":"/ several results and don't need all the user information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354673,"byte_end":354733,"line_start":265,"line_end":265,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354734,"byte_end":354737,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Note that while loading a user's mutes list is a cursored search, it does not allow you to set","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354738,"byte_end":354836,"line_start":267,"line_end":267,"column_start":1,"column_end":99}},{"value":"/ the page size. Calling `with_page_size` on a stream returned by this function will not","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354837,"byte_end":354927,"line_start":268,"line_end":268,"column_start":1,"column_end":91}},{"value":"/ change the page size used by the network call. Setting `page_size` manually may result in an","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":354928,"byte_end":355024,"line_start":269,"line_end":269,"column_start":1,"column_end":97}},{"value":"/ error from Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355025,"byte_end":355048,"line_start":270,"line_end":270,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355405,"byte_end":355422,"line_start":278,"line_end":278,"column_start":8,"column_end":25},"name":"incoming_requests","qualname":"::user::fun::incoming_requests","value":"fn (token: &auth::Token) -> cursor::CursorIter<cursor::IDCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the user IDs who have pending requests to follow the authenticated protected user.","sig":null,"attributes":[{"value":"/ Lookup the user IDs who have pending requests to follow the authenticated protected user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355204,"byte_end":355297,"line_start":275,"line_end":275,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355298,"byte_end":355301,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ If the authenticated user is not a protected account, this will return an empty collection.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355302,"byte_end":355397,"line_start":277,"line_end":277,"column_start":1,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355668,"byte_end":355685,"line_start":283,"line_end":283,"column_start":8,"column_end":25},"name":"outgoing_requests","qualname":"::user::fun::outgoing_requests","value":"fn (token: &auth::Token) -> cursor::CursorIter<cursor::IDCursor>","parent":null,"children":[],"decl_id":null,"docs":" Lookup the user IDs with which the authenticating user has a pending follow request.\n","sig":null,"attributes":[{"value":"/ Lookup the user IDs with which the authenticating user has a pending follow request.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355572,"byte_end":355660,"line_start":282,"line_end":282,"column_start":1,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356394,"byte_end":356400,"line_start":298,"line_end":298,"column_start":14,"column_end":20},"name":"follow","qualname":"::user::fun::follow","value":"fn <T> (acct: T, notifications: bool, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Follow the given account with the authenticated user, and set whether device notifications\n should be enabled.","sig":null,"attributes":[{"value":"/ Follow the given account with the authenticated user, and set whether device notifications","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355857,"byte_end":355951,"line_start":289,"line_end":289,"column_start":1,"column_end":95}},{"value":"/ should be enabled.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355952,"byte_end":355974,"line_start":290,"line_end":290,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355975,"byte_end":355978,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ Upon success, the future returned by this function yields the user that was just followed, even","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":355979,"byte_end":356078,"line_start":292,"line_end":292,"column_start":1,"column_end":100}},{"value":"/ when following a protected account. In the latter case, this indicates that the follow request","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356079,"byte_end":356177,"line_start":293,"line_end":293,"column_start":1,"column_end":99}},{"value":"/ was successfully sent.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356178,"byte_end":356204,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356205,"byte_end":356208,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ Calling this with an account the user already follows may return an error, or (\"for performance","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356209,"byte_end":356308,"line_start":296,"line_end":296,"column_start":1,"column_end":100}},{"value":"/ reasons\") may return success without changing any account settings.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356309,"byte_end":356380,"line_start":297,"line_end":297,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357087,"byte_end":357095,"line_start":317,"line_end":317,"column_start":14,"column_end":22},"name":"unfollow","qualname":"::user::fun::unfollow","value":"fn <T> (acct: T, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Unfollow the given account with the authenticated user.","sig":null,"attributes":[{"value":"/ Unfollow the given account with the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356783,"byte_end":356842,"line_start":311,"line_end":311,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356843,"byte_end":356846,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Upon success, the future returned by this function yields the user that was just unfollowed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356847,"byte_end":356943,"line_start":313,"line_end":313,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356944,"byte_end":356947,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ Calling this with an account the user doesn't follow will return success, even though it doesn't","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":356948,"byte_end":357048,"line_start":315,"line_end":315,"column_start":1,"column_end":101}},{"value":"/ change any settings.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357049,"byte_end":357073,"line_start":316,"line_end":316,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357872,"byte_end":357885,"line_start":334,"line_end":334,"column_start":14,"column_end":27},"name":"update_follow","qualname":"::user::fun::update_follow","value":"fn <T> (acct: T, notifications: Option<bool>, retweets: Option<bool>, token: &auth::Token) -> Result<Response<Relationship>>","parent":null,"children":[],"decl_id":null,"docs":" Update notification settings and reweet visibility for the given user.","sig":null,"attributes":[{"value":"/ Update notification settings and reweet visibility for the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357399,"byte_end":357473,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357474,"byte_end":357477,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Calling this for an account the authenticated user does not already follow will not cause them","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357478,"byte_end":357576,"line_start":330,"line_end":330,"column_start":1,"column_end":99}},{"value":"/ to follow that user. It will return an error if you pass `Some(true)` for `notifications` or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357577,"byte_end":357673,"line_start":331,"line_end":331,"column_start":1,"column_end":97}},{"value":"/ `Some(false)` for `retweets`. Any other combination of arguments will return a `Relationship` as","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357674,"byte_end":357774,"line_start":332,"line_end":332,"column_start":1,"column_end":101}},{"value":"/ if you had called `relation` between the authenticated user and the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":357775,"byte_end":357858,"line_start":333,"line_end":333,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":358537,"byte_end":358542,"line_start":354,"line_end":354,"column_start":14,"column_end":19},"name":"block","qualname":"::user::fun::block","value":"fn <T> (acct: T, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Block the given account with the authenticated user.","sig":null,"attributes":[{"value":"/ Block the given account with the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":358385,"byte_end":358441,"line_start":351,"line_end":351,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":358442,"byte_end":358445,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ Upon success, the future returned by this function yields the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":358446,"byte_end":358523,"line_start":353,"line_end":353,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359008,"byte_end":359019,"line_start":365,"line_end":365,"column_start":14,"column_end":25},"name":"report_spam","qualname":"::user::fun::report_spam","value":"fn <T> (acct: T, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Block the given account and report it for spam, with the authenticated user.","sig":null,"attributes":[{"value":"/ Block the given account and report it for spam, with the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":358832,"byte_end":358912,"line_start":362,"line_end":362,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":358913,"byte_end":358916,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Upon success, the future returned by this function yields the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":358917,"byte_end":358994,"line_start":364,"line_end":364,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359477,"byte_end":359484,"line_start":379,"line_end":379,"column_start":14,"column_end":21},"name":"unblock","qualname":"::user::fun::unblock","value":"fn <T> (acct: T, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Unblock the given user with the authenticated user.","sig":null,"attributes":[{"value":"/ Unblock the given user with the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359326,"byte_end":359381,"line_start":376,"line_end":376,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359382,"byte_end":359385,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ Upon success, the future returned by this function yields the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359386,"byte_end":359463,"line_start":378,"line_end":378,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359935,"byte_end":359939,"line_start":393,"line_end":393,"column_start":14,"column_end":18},"name":"mute","qualname":"::user::fun::mute","value":"fn <T> (acct: T, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Mute the given user with the authenticated user.","sig":null,"attributes":[{"value":"/ Mute the given user with the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359787,"byte_end":359839,"line_start":390,"line_end":390,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359840,"byte_end":359843,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ Upon success, the future returned by this function yields the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":359844,"byte_end":359921,"line_start":392,"line_end":392,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":360378,"byte_end":360384,"line_start":404,"line_end":404,"column_start":14,"column_end":20},"name":"unmute","qualname":"::user::fun::unmute","value":"fn <T> (acct: T, token: &auth::Token) -> Result<Response<TwitterUser>>","parent":null,"children":[],"decl_id":null,"docs":" Unmute the given user with the authenticated user.","sig":null,"attributes":[{"value":"/ Unmute the given user with the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":360228,"byte_end":360282,"line_start":401,"line_end":401,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":360283,"byte_end":360286,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ Upon success, the future returned by this function yields the given user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\fun.rs","byte_start":360287,"byte_end":360364,"line_start":403,"line_end":403,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319379,"byte_end":319381,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"ID","qualname":"::user::UserID::ID","value":"UserID::ID(u64)","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Referring via the account's numeric ID.\n","sig":null,"attributes":[{"value":"/ Referring via the account's numeric ID.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319331,"byte_end":319374,"line_start":94,"line_end":94,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319441,"byte_end":319451,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"name":"ScreenName","qualname":"::user::UserID::ScreenName","value":"UserID::ScreenName(CowStr)","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" Referring via the account's screen name.\n","sig":null,"attributes":[{"value":"/ Referring via the account's screen name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319392,"byte_end":319436,"line_start":96,"line_end":96,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319318,"byte_end":319324,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"UserID","qualname":"::user::UserID","value":"UserID::{ID, ScreenName}","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4601}],"decl_id":null,"docs":" Convenience enum to generalize between referring to an account by numeric ID or by screen name.","sig":null,"attributes":[{"value":"/ Convenience enum to generalize between referring to an account by numeric ID or by screen name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318308,"byte_end":318407,"line_start":75,"line_end":75,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318408,"byte_end":318411,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Many API calls ask for a user either by either screen name (e.g. `rustlang`) or by a numeric ID","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318412,"byte_end":318511,"line_start":77,"line_end":77,"column_start":1,"column_end":100}},{"value":"/ assigned to the account (e.g. `165262228`). In egg-mode, these calls are abstracted around this","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318512,"byte_end":318611,"line_start":78,"line_end":78,"column_start":1,"column_end":100}},{"value":"/ enum, and can take any type that converts into it. This enum has `From` implementations for the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318612,"byte_end":318711,"line_start":79,"line_end":79,"column_start":1,"column_end":100}},{"value":"/ following types:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318712,"byte_end":318732,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318733,"byte_end":318736,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ * `u64`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318737,"byte_end":318748,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ * `&u64` (convenient when used with iterators)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318749,"byte_end":318799,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ * `&str`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318800,"byte_end":318812,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ * `&&str` (convenient when used with iterators)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318813,"byte_end":318864,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ * `&String` (to counteract the fact that deref coercion doesn't work with generics)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318865,"byte_end":318952,"line_start":86,"line_end":86,"column_start":1,"column_end":88}},{"value":"/ * `&UserID` (convenient when used with iterators)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":318953,"byte_end":319006,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319007,"byte_end":319010,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This way, when a function in egg-mode has a paremeter of type `T: Into<UserID>`, you can","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319011,"byte_end":319103,"line_start":89,"line_end":89,"column_start":1,"column_end":93}},{"value":"/ call it with any of these types, and it will be converted automatically. egg-mode will then use","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319104,"byte_end":319203,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ the proper parameter when performing the call to Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319204,"byte_end":319265,"line_start":91,"line_end":91,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4612},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321456,"byte_end":321467,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"TwitterUser","qualname":"::user::TwitterUser","value":"TwitterUser { contributors_enabled, created_at, default_profile, default_profile_image, description, entities, favourites_count, follow_request_sent, followers_count, friends_count, geo_enabled, id, is_translator, lang, listed_count, location, name, profile_background_color, profile_background_image_url, profile_background_image_url_https, profile_background_tile, profile_banner_url, profile_image_url, profile_image_url_https, profile_link_color, profile_sidebar_border_color, profile_sidebar_fill_color, profile_text_color, profile_use_background_image, protected, screen_name, show_all_inline_media, status, statuses_count, time_zone, url, utc_offset, verified, withheld_in_countries, withheld_scope }","parent":null,"children":[{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4652}],"decl_id":null,"docs":" Represents a Twitter user.","sig":null,"attributes":[{"value":"/ Represents a Twitter user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319716,"byte_end":319746,"line_start":112,"line_end":112,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319747,"byte_end":319750,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Field-level documentation is mostly ripped wholesale from [Twitter's user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319751,"byte_end":319828,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ documentation][api-user].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319829,"byte_end":319858,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319859,"byte_end":319862,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [api-user]: https://dev.twitter.com/overview/api/users","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319863,"byte_end":319921,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319922,"byte_end":319925,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The fields present in this struct can be divided up into a few sections: Profile Information and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319926,"byte_end":320026,"line_start":119,"line_end":119,"column_start":1,"column_end":101}},{"value":"/ Settings.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320027,"byte_end":320040,"line_start":120,"line_end":120,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320041,"byte_end":320044,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ## Profile Information","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320045,"byte_end":320071,"line_start":122,"line_end":122,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320072,"byte_end":320075,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Information here can be considered part of the user's profile. These fields are the \"obvious\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320076,"byte_end":320173,"line_start":124,"line_end":124,"column_start":1,"column_end":98}},{"value":"/ visible portion of a profile view.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320174,"byte_end":320212,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320213,"byte_end":320216,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ * `id`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320217,"byte_end":320227,"line_start":127,"line_end":127,"column_start":1,"column_end":11}},{"value":"/ * `screen_name`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320228,"byte_end":320247,"line_start":128,"line_end":128,"column_start":1,"column_end":20}},{"value":"/ * `name`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320248,"byte_end":320260,"line_start":129,"line_end":129,"column_start":1,"column_end":13}},{"value":"/ * `verified`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320261,"byte_end":320277,"line_start":130,"line_end":130,"column_start":1,"column_end":17}},{"value":"/ * `protected`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320278,"byte_end":320295,"line_start":131,"line_end":131,"column_start":1,"column_end":18}},{"value":"/ * `description`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320296,"byte_end":320315,"line_start":132,"line_end":132,"column_start":1,"column_end":20}},{"value":"/ * `location`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320316,"byte_end":320332,"line_start":133,"line_end":133,"column_start":1,"column_end":17}},{"value":"/ * `url`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320333,"byte_end":320344,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/ * `statuses_count`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320345,"byte_end":320367,"line_start":135,"line_end":135,"column_start":1,"column_end":23}},{"value":"/ * `friends_count`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320368,"byte_end":320389,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/ * `followers_count`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320390,"byte_end":320413,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/ * `favourites_count`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320414,"byte_end":320438,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/ * `listed_count`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320439,"byte_end":320459,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/ * `profile_image_url`/`profile_image_url_https`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320460,"byte_end":320511,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/ * `profile_banner_url`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320512,"byte_end":320538,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320539,"byte_end":320542,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ## Settings Information","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320543,"byte_end":320570,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320571,"byte_end":320574,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Information here can be used to alter the UI around this user, or to provide further metadata","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320575,"byte_end":320672,"line_start":145,"line_end":145,"column_start":1,"column_end":98}},{"value":"/ that may not necessarily be user-facing.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320673,"byte_end":320717,"line_start":146,"line_end":146,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320718,"byte_end":320721,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ * `contributors_enabled`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320722,"byte_end":320750,"line_start":148,"line_end":148,"column_start":1,"column_end":29}},{"value":"/ * `created_at`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320751,"byte_end":320769,"line_start":149,"line_end":149,"column_start":1,"column_end":19}},{"value":"/ * `default_profile_image`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320770,"byte_end":320799,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ * `follow_request_sent`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320800,"byte_end":320827,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/ * `default_profile`, `profile_background_color`, `profile_background_image_url`,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320828,"byte_end":320912,"line_start":152,"line_end":152,"column_start":1,"column_end":85}},{"value":"/   `profile_background_image_url_https`, `profile_background_tile`, `profile_link_color`,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":320913,"byte_end":321005,"line_start":153,"line_end":153,"column_start":1,"column_end":93}},{"value":"/   `profile_sidebar_border_color`, `profile_sidebar_fill_color`, `profile_text_color`,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321006,"byte_end":321095,"line_start":154,"line_end":154,"column_start":1,"column_end":90}},{"value":"/   `profile_use_background_image`: These fields can be used to theme a user's profile page to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321096,"byte_end":321192,"line_start":155,"line_end":155,"column_start":1,"column_end":97}},{"value":"/   look like the settings they've set on the Twitter website.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321193,"byte_end":321257,"line_start":156,"line_end":156,"column_start":1,"column_end":65}},{"value":"/ * `geo_enabled`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321258,"byte_end":321277,"line_start":157,"line_end":157,"column_start":1,"column_end":20}},{"value":"/ * `is_translator`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321278,"byte_end":321299,"line_start":158,"line_end":158,"column_start":1,"column_end":22}},{"value":"/ * `lang`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321300,"byte_end":321312,"line_start":159,"line_end":159,"column_start":1,"column_end":13}},{"value":"/ * `show_all_inline_media`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321313,"byte_end":321342,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"/ * `time_zone`/`utc_offset`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321343,"byte_end":321373,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/ * `withheld_in_countries`/`withheld_scope`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321374,"byte_end":321420,"line_start":162,"line_end":162,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4613},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321654,"byte_end":321674,"line_start":167,"line_end":167,"column_start":9,"column_end":29},"name":"contributors_enabled","qualname":"::user::TwitterUser::contributors_enabled","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates this user has an account with \"contributor mode\" enabled, allowing\n for Tweets issued by the user to be co-authored by another account. Rarely `true`.\n","sig":null,"attributes":[{"value":"/ Indicates this user has an account with \"contributor mode\" enabled, allowing","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321474,"byte_end":321554,"line_start":165,"line_end":165,"column_start":5,"column_end":85}},{"value":"/ for Tweets issued by the user to be co-authored by another account. Rarely `true`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321559,"byte_end":321645,"line_start":166,"line_end":166,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":4614},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321767,"byte_end":321777,"line_start":169,"line_end":169,"column_start":9,"column_end":19},"name":"created_at","qualname":"::user::TwitterUser::created_at","value":"chrono::datetime::DateTime<chrono::offset::utc::Utc>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The UTC timestamp for when this user account was created on Twitter.\n","sig":null,"attributes":[{"value":"/ The UTC timestamp for when this user account was created on Twitter.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321686,"byte_end":321758,"line_start":168,"line_end":168,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":4615},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321933,"byte_end":321948,"line_start":172,"line_end":172,"column_start":9,"column_end":24},"name":"default_profile","qualname":"::user::TwitterUser::default_profile","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" When true, indicates that this user has not altered the theme or background of\n their user profile.\n","sig":null,"attributes":[{"value":"/ When true, indicates that this user has not altered the theme or background of","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321814,"byte_end":321896,"line_start":170,"line_end":170,"column_start":5,"column_end":87}},{"value":"/ their user profile.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321901,"byte_end":321924,"line_start":171,"line_end":171,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322091,"byte_end":322112,"line_start":175,"line_end":175,"column_start":9,"column_end":30},"name":"default_profile_image","qualname":"::user::TwitterUser::default_profile_image","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" When true, indicates that the user has not uploaded their own avatar and a default\n egg avatar is used instead.\n","sig":null,"attributes":[{"value":"/ When true, indicates that the user has not uploaded their own avatar and a default","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":321960,"byte_end":322046,"line_start":173,"line_end":173,"column_start":5,"column_end":91}},{"value":"/ egg avatar is used instead.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322051,"byte_end":322082,"line_start":174,"line_end":174,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4617},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322186,"byte_end":322197,"line_start":177,"line_end":177,"column_start":9,"column_end":20},"name":"description","qualname":"::user::TwitterUser::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The user-defined string describing their account.\n","sig":null,"attributes":[{"value":"/ The user-defined string describing their account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322124,"byte_end":322177,"line_start":176,"line_end":176,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4618},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322337,"byte_end":322345,"line_start":180,"line_end":180,"column_start":9,"column_end":17},"name":"entities","qualname":"::user::TwitterUser::entities","value":"user::UserEntities","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Link information that has been parsed out of the `url` or `description` fields given by the\n user.\n","sig":null,"attributes":[{"value":"/ Link information that has been parsed out of the `url` or `description` fields given by the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322219,"byte_end":322314,"line_start":178,"line_end":178,"column_start":5,"column_end":100}},{"value":"/ user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322319,"byte_end":322328,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":4619},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322546,"byte_end":322562,"line_start":183,"line_end":183,"column_start":9,"column_end":25},"name":"favourites_count","qualname":"::user::TwitterUser::favourites_count","value":"i32","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The number of tweets this user has favorited or liked in the account's lifetime.\n The term \"favourites\" and its British spelling are used for historical reasons.\n","sig":null,"attributes":[{"value":"/ The number of tweets this user has favorited or liked in the account's lifetime.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322365,"byte_end":322449,"line_start":181,"line_end":181,"column_start":5,"column_end":89}},{"value":"/ The term \"favourites\" and its British spelling are used for historical reasons.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322454,"byte_end":322537,"line_start":182,"line_end":182,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":4620},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322698,"byte_end":322717,"line_start":186,"line_end":186,"column_start":9,"column_end":28},"name":"follow_request_sent","qualname":"::user::TwitterUser::follow_request_sent","value":"std::option::Option<bool>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" When true, indicates that the authenticating user has issued a follow request to\n this protected account.\n","sig":null,"attributes":[{"value":"/ When true, indicates that the authenticating user has issued a follow request to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322573,"byte_end":322657,"line_start":184,"line_end":184,"column_start":5,"column_end":89}},{"value":"/ this protected account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322662,"byte_end":322689,"line_start":185,"line_end":185,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4621},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322886,"byte_end":322901,"line_start":190,"line_end":190,"column_start":9,"column_end":24},"name":"followers_count","qualname":"::user::TwitterUser::followers_count","value":"i32","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The number of followers this account has.","sig":null,"attributes":[{"value":"/ The number of followers this account has.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322737,"byte_end":322782,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322787,"byte_end":322790,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ In certain server-stress conditions, this may temporarily mistakenly return 0.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322795,"byte_end":322877,"line_start":189,"line_end":189,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":4622},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323083,"byte_end":323096,"line_start":194,"line_end":194,"column_start":9,"column_end":22},"name":"friends_count","qualname":"::user::TwitterUser::friends_count","value":"i32","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The number of users this account follows, aka its \"followings\".","sig":null,"attributes":[{"value":"/ The number of users this account follows, aka its \"followings\".","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322912,"byte_end":322979,"line_start":191,"line_end":191,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322984,"byte_end":322987,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ In certain server-stress conditions, this may temporarily mistakenly return 0.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":322992,"byte_end":323074,"line_start":193,"line_end":193,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":4623},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323312,"byte_end":323323,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"name":"geo_enabled","qualname":"::user::TwitterUser::geo_enabled","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates whether this user as enabled their tweets to be geotagged.","sig":null,"attributes":[{"value":"/ Indicates whether this user as enabled their tweets to be geotagged.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323107,"byte_end":323179,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323184,"byte_end":323187,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If this is set for the current user, then they can attach geographic data when","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323192,"byte_end":323274,"line_start":197,"line_end":197,"column_start":5,"column_end":87}},{"value":"/ posting a new Tweet.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323279,"byte_end":323303,"line_start":198,"line_end":198,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":4624},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323380,"byte_end":323382,"line_start":201,"line_end":201,"column_start":9,"column_end":11},"name":"id","qualname":"::user::TwitterUser::id","value":"u64","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Unique identifier for this user.\n","sig":null,"attributes":[{"value":"/ Unique identifier for this user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323335,"byte_end":323371,"line_start":200,"line_end":200,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4625},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323480,"byte_end":323493,"line_start":203,"line_end":203,"column_start":9,"column_end":22},"name":"is_translator","qualname":"::user::TwitterUser::is_translator","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates whether the user participates in Twitter's translator community.\n","sig":null,"attributes":[{"value":"/ Indicates whether the user participates in Twitter's translator community.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323393,"byte_end":323471,"line_start":202,"line_end":202,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323810,"byte_end":323814,"line_start":210,"line_end":210,"column_start":9,"column_end":13},"name":"lang","qualname":"::user::TwitterUser::lang","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Language code for the user's self-declared interface language.","sig":null,"attributes":[{"value":"/ Language code for the user's self-declared interface language.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323505,"byte_end":323571,"line_start":204,"line_end":204,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323576,"byte_end":323579,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Codes are formatted as a language tag from [BCP 47][]. Only indicates the user's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323584,"byte_end":323668,"line_start":206,"line_end":206,"column_start":5,"column_end":89}},{"value":"/ interface language, not necessarily the content of their Tweets.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323673,"byte_end":323741,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323746,"byte_end":323749,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [BCP 47]: https://tools.ietf.org/html/bcp47","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323754,"byte_end":323801,"line_start":209,"line_end":209,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4627},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323900,"byte_end":323912,"line_start":212,"line_end":212,"column_start":9,"column_end":21},"name":"listed_count","qualname":"::user::TwitterUser::listed_count","value":"i32","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The number of public lists the user is a member of.\n","sig":null,"attributes":[{"value":"/ The number of public lists the user is a member of.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323836,"byte_end":323891,"line_start":211,"line_end":211,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4628},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324041,"byte_end":324049,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"name":"location","qualname":"::user::TwitterUser::location","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The user-entered location field from their profile. Not necessarily parseable\n or even a location.\n","sig":null,"attributes":[{"value":"/ The user-entered location field from their profile. Not necessarily parseable","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":323923,"byte_end":324004,"line_start":213,"line_end":213,"column_start":5,"column_end":86}},{"value":"/ or even a location.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324009,"byte_end":324032,"line_start":214,"line_end":214,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4629},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324114,"byte_end":324118,"line_start":217,"line_end":217,"column_start":9,"column_end":13},"name":"name","qualname":"::user::TwitterUser::name","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The user-entered display name.\n","sig":null,"attributes":[{"value":"/ The user-entered display name.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324071,"byte_end":324105,"line_start":216,"line_end":216,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324207,"byte_end":324231,"line_start":219,"line_end":219,"column_start":9,"column_end":33},"name":"profile_background_color","qualname":"::user::TwitterUser::profile_background_color","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The hex color chosen by the user for their profile background.\n","sig":null,"attributes":[{"value":"/ The hex color chosen by the user for their profile background.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324132,"byte_end":324198,"line_start":218,"line_end":218,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4631},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324369,"byte_end":324397,"line_start":222,"line_end":222,"column_start":9,"column_end":37},"name":"profile_background_image_url","qualname":"::user::TwitterUser::profile_background_image_url","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" A URL pointing to the background image chosen by the user for their profile. Uses\n HTTP as the protocol.\n","sig":null,"attributes":[{"value":"/ A URL pointing to the background image chosen by the user for their profile. Uses","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324245,"byte_end":324330,"line_start":220,"line_end":220,"column_start":5,"column_end":90}},{"value":"/ HTTP as the protocol.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324335,"byte_end":324360,"line_start":221,"line_end":221,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4632},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324544,"byte_end":324578,"line_start":225,"line_end":225,"column_start":9,"column_end":43},"name":"profile_background_image_url_https","qualname":"::user::TwitterUser::profile_background_image_url_https","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" A URL pointing to the background image chosen by the user for their profile. Uses\n HTTPS as the protocol.\n","sig":null,"attributes":[{"value":"/ A URL pointing to the background image chosen by the user for their profile. Uses","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324419,"byte_end":324504,"line_start":223,"line_end":223,"column_start":5,"column_end":90}},{"value":"/ HTTPS as the protocol.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324509,"byte_end":324535,"line_start":224,"line_end":224,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324712,"byte_end":324735,"line_start":228,"line_end":228,"column_start":9,"column_end":32},"name":"profile_background_tile","qualname":"::user::TwitterUser::profile_background_tile","value":"std::option::Option<bool>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates whether the user's `profile_background_image_url` should be tiled when\n displayed.\n","sig":null,"attributes":[{"value":"/ Indicates whether the user's `profile_background_image_url` should be tiled when","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324600,"byte_end":324684,"line_start":226,"line_end":226,"column_start":5,"column_end":89}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324689,"byte_end":324703,"line_start":227,"line_end":227,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325148,"byte_end":325166,"line_start":235,"line_end":235,"column_start":9,"column_end":27},"name":"profile_banner_url","qualname":"::user::TwitterUser::profile_banner_url","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" A URL pointing to the banner image chosen by the user. Uses HTTPS as the protocol.","sig":null,"attributes":[{"value":"/ A URL pointing to the banner image chosen by the user. Uses HTTPS as the protocol.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324755,"byte_end":324841,"line_start":229,"line_end":229,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324846,"byte_end":324849,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This is a base URL that a size specifier can be appended onto to get variously","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324854,"byte_end":324936,"line_start":231,"line_end":231,"column_start":5,"column_end":87}},{"value":"/ sized images, with size specifiers according to [Profile Images and Banners][profile-img].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":324941,"byte_end":325035,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325040,"byte_end":325043,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ [profile-img]: https://dev.twitter.com/overview/general/user-profile-images-and-banners","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325048,"byte_end":325139,"line_start":234,"line_end":234,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325466,"byte_end":325483,"line_start":240,"line_end":240,"column_start":9,"column_end":26},"name":"profile_image_url","qualname":"::user::TwitterUser::profile_image_url","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" A URL pointing to the user's avatar image. Uses HTTP as the protocol. Size\n specifiers can be used according to [Profile Images and Banners][profile-img].","sig":null,"attributes":[{"value":"/ A URL pointing to the user's avatar image. Uses HTTP as the protocol. Size","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325188,"byte_end":325266,"line_start":236,"line_end":236,"column_start":5,"column_end":83}},{"value":"/ specifiers can be used according to [Profile Images and Banners][profile-img].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325271,"byte_end":325353,"line_start":237,"line_end":237,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325358,"byte_end":325361,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ [profile-img]: https://dev.twitter.com/overview/general/user-profile-images-and-banners","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325366,"byte_end":325457,"line_start":239,"line_end":239,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325776,"byte_end":325799,"line_start":245,"line_end":245,"column_start":9,"column_end":32},"name":"profile_image_url_https","qualname":"::user::TwitterUser::profile_image_url_https","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" A URL pointing to the user's avatar image. Uses HTTPS as the protocol. Size\n specifiers can be used according to [Profile Images and Banners][profile-img].","sig":null,"attributes":[{"value":"/ A URL pointing to the user's avatar image. Uses HTTPS as the protocol. Size","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325497,"byte_end":325576,"line_start":241,"line_end":241,"column_start":5,"column_end":84}},{"value":"/ specifiers can be used according to [Profile Images and Banners][profile-img].","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325581,"byte_end":325663,"line_start":242,"line_end":242,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325668,"byte_end":325671,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [profile-img]: https://dev.twitter.com/overview/general/user-profile-images-and-banners","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325676,"byte_end":325767,"line_start":244,"line_end":244,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":4637},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325894,"byte_end":325912,"line_start":247,"line_end":247,"column_start":9,"column_end":27},"name":"profile_link_color","qualname":"::user::TwitterUser::profile_link_color","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The hex color chosen by the user to display links in the Twitter UI.\n","sig":null,"attributes":[{"value":"/ The hex color chosen by the user to display links in the Twitter UI.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325813,"byte_end":325885,"line_start":246,"line_end":246,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":4638},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326017,"byte_end":326045,"line_start":249,"line_end":249,"column_start":9,"column_end":37},"name":"profile_sidebar_border_color","qualname":"::user::TwitterUser::profile_sidebar_border_color","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The hex color chosen by the user to display sidebar borders in the Twitter UI.\n","sig":null,"attributes":[{"value":"/ The hex color chosen by the user to display sidebar borders in the Twitter UI.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":325926,"byte_end":326008,"line_start":248,"line_end":248,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":4639},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326154,"byte_end":326180,"line_start":251,"line_end":251,"column_start":9,"column_end":35},"name":"profile_sidebar_fill_color","qualname":"::user::TwitterUser::profile_sidebar_fill_color","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The hex color chosen by the user to display sidebar backgrounds in the Twitter UI.\n","sig":null,"attributes":[{"value":"/ The hex color chosen by the user to display sidebar backgrounds in the Twitter UI.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326059,"byte_end":326145,"line_start":250,"line_end":250,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":4640},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326274,"byte_end":326292,"line_start":253,"line_end":253,"column_start":9,"column_end":27},"name":"profile_text_color","qualname":"::user::TwitterUser::profile_text_color","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The hex color chosen by the user to display text in the Twitter UI.\n","sig":null,"attributes":[{"value":"/ The hex color chosen by the user to display text in the Twitter UI.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326194,"byte_end":326265,"line_start":252,"line_end":252,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":4641},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326395,"byte_end":326423,"line_start":255,"line_end":255,"column_start":9,"column_end":37},"name":"profile_use_background_image","qualname":"::user::TwitterUser::profile_use_background_image","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates whether the user wants their uploaded background image to be used.\n","sig":null,"attributes":[{"value":"/ Indicates whether the user wants their uploaded background image to be used.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326306,"byte_end":326386,"line_start":254,"line_end":254,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":4642},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326574,"byte_end":326583,"line_start":259,"line_end":259,"column_start":9,"column_end":18},"name":"protected","qualname":"::user::TwitterUser::protected","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates whether the user is a [protected][] account.","sig":null,"attributes":[{"value":"/ Indicates whether the user is a [protected][] account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326435,"byte_end":326493,"line_start":256,"line_end":256,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326498,"byte_end":326501,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ [protected]: https://support.twitter.com/articles/14016","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326506,"byte_end":326565,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4643},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326908,"byte_end":326919,"line_start":267,"line_end":267,"column_start":9,"column_end":20},"name":"screen_name","qualname":"::user::TwitterUser::screen_name","value":"std::string::String","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The screen name or handle identifying this user.","sig":null,"attributes":[{"value":"/ The screen name or handle identifying this user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326595,"byte_end":326647,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326652,"byte_end":326655,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Screen names are unique per-user but can be changed. Use `id` for an immutable identifier","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326660,"byte_end":326753,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ for an account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326758,"byte_end":326777,"line_start":263,"line_end":263,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326782,"byte_end":326785,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Typically a maximum of 15 characters long, but older accounts may exist with longer screen","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326790,"byte_end":326884,"line_start":265,"line_end":265,"column_start":5,"column_end":99}},{"value":"/ names.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326889,"byte_end":326899,"line_start":266,"line_end":266,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":4644},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327021,"byte_end":327042,"line_start":269,"line_end":269,"column_start":9,"column_end":30},"name":"show_all_inline_media","qualname":"::user::TwitterUser::show_all_inline_media","value":"std::option::Option<bool>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates that the user would like to see media inline. \"Somewhat disused.\"\n","sig":null,"attributes":[{"value":"/ Indicates that the user would like to see media inline. \"Somewhat disused.\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":326933,"byte_end":327012,"line_start":268,"line_end":268,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":4645},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327688,"byte_end":327694,"line_start":280,"line_end":280,"column_start":9,"column_end":15},"name":"status","qualname":"::user::TwitterUser::status","value":"std::option::Option<std::boxed::Box<tweet::Tweet>>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" If possible, the most recent tweet or retweet from this user.","sig":null,"attributes":[{"value":"/ If possible, the most recent tweet or retweet from this user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327062,"byte_end":327127,"line_start":270,"line_end":270,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327132,"byte_end":327135,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ \"In some circumstances, this data cannot be provided and this field will be omitted, null,","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327140,"byte_end":327234,"line_start":272,"line_end":272,"column_start":5,"column_end":99}},{"value":"/ or empty.\" Do not depend on this field being filled. Also note that this is actually their","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327239,"byte_end":327333,"line_start":273,"line_end":273,"column_start":5,"column_end":99}},{"value":"/ most-recent tweet, not the status pinned to their profile.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327338,"byte_end":327400,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327405,"byte_end":327408,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ \"Perspectival\" items within this tweet that depend on the authenticating user","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327413,"byte_end":327494,"line_start":276,"line_end":276,"column_start":5,"column_end":86}},{"value":"/ [may not be completely reliable][stale-embed] in this embed.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327499,"byte_end":327563,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327568,"byte_end":327571,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ [stale-embed]: https://dev.twitter.com/docs/faq/basics/why-are-embedded-objects-stale-or-inaccurate","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327576,"byte_end":327679,"line_start":279,"line_end":279,"column_start":5,"column_end":108}}]},{"kind":"Field","id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327802,"byte_end":327816,"line_start":282,"line_end":282,"column_start":9,"column_end":23},"name":"statuses_count","qualname":"::user::TwitterUser::statuses_count","value":"i32","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The number of tweets (including retweets) posted by this user.\n","sig":null,"attributes":[{"value":"/ The number of tweets (including retweets) posted by this user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327727,"byte_end":327793,"line_start":281,"line_end":281,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4647},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327911,"byte_end":327920,"line_start":284,"line_end":284,"column_start":9,"column_end":18},"name":"time_zone","qualname":"::user::TwitterUser::time_zone","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The full name of the time zone the user has set their UI preference to.\n","sig":null,"attributes":[{"value":"/ The full name of the time zone the user has set their UI preference to.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327827,"byte_end":327902,"line_start":283,"line_end":283,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":4648},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328008,"byte_end":328011,"line_start":286,"line_end":286,"column_start":9,"column_end":12},"name":"url","qualname":"::user::TwitterUser::url","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The website link given by this user in their profile.\n","sig":null,"attributes":[{"value":"/ The website link given by this user in their profile.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":327942,"byte_end":327999,"line_start":285,"line_end":285,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4649},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328087,"byte_end":328097,"line_start":288,"line_end":288,"column_start":9,"column_end":19},"name":"utc_offset","qualname":"::user::TwitterUser::utc_offset","value":"std::option::Option<i32>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" The UTC offset of `time_zone` in minutes.\n","sig":null,"attributes":[{"value":"/ The UTC offset of `time_zone` in minutes.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328033,"byte_end":328078,"line_start":287,"line_end":287,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328179,"byte_end":328187,"line_start":290,"line_end":290,"column_start":9,"column_end":17},"name":"verified","qualname":"::user::TwitterUser::verified","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" Indicates whether this user is a verified account.\n","sig":null,"attributes":[{"value":"/ Indicates whether this user is a verified account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328116,"byte_end":328170,"line_start":289,"line_end":289,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328279,"byte_end":328300,"line_start":292,"line_end":292,"column_start":9,"column_end":30},"name":"withheld_in_countries","qualname":"::user::TwitterUser::withheld_in_countries","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" When present, lists the countries this user has been withheld from.\n","sig":null,"attributes":[{"value":"/ When present, lists the countries this user has been withheld from.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328199,"byte_end":328270,"line_start":291,"line_end":291,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328423,"byte_end":328437,"line_start":294,"line_end":294,"column_start":9,"column_end":23},"name":"withheld_scope","qualname":"::user::TwitterUser::withheld_scope","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":" When present, indicates whether the content being withheld is a \"status\" or \"user\".\n","sig":null,"attributes":[{"value":"/ When present, indicates whether the content being withheld is a \"status\" or \"user\".","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328327,"byte_end":328414,"line_start":293,"line_end":293,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":4657},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331364,"byte_end":331376,"line_start":365,"line_end":365,"column_start":12,"column_end":24},"name":"UserEntities","qualname":"::user::UserEntities","value":"UserEntities { description, url }","parent":null,"children":[{"krate":0,"index":4658},{"krate":0,"index":4659}],"decl_id":null,"docs":" Container for URL entity information that may be paired with a user's profile.\n","sig":null,"attributes":[{"value":"/ Container for URL entity information that may be paired with a user's profile.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331224,"byte_end":331306,"line_start":363,"line_end":363,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":4658},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331537,"byte_end":331548,"line_start":368,"line_end":368,"column_start":9,"column_end":20},"name":"description","qualname":"::user::UserEntities::description","value":"user::UserEntityDetail","parent":{"krate":0,"index":4657},"children":[],"decl_id":null,"docs":" URL information that has been parsed out of the user's `description`. If no URLs were\n detected, then the contained Vec will be empty.\n","sig":null,"attributes":[{"value":"/ URL information that has been parsed out of the user's `description`. If no URLs were","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331383,"byte_end":331472,"line_start":366,"line_end":366,"column_start":5,"column_end":94}},{"value":"/ detected, then the contained Vec will be empty.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331477,"byte_end":331528,"line_start":367,"line_end":367,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4659},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331866,"byte_end":331869,"line_start":374,"line_end":374,"column_start":9,"column_end":12},"name":"url","qualname":"::user::UserEntities::url","value":"std::option::Option<user::UserEntityDetail>","parent":{"krate":0,"index":4657},"children":[],"decl_id":null,"docs":" Link information for the user's `url`.","sig":null,"attributes":[{"value":"/ Link information for the user's `url`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331572,"byte_end":331614,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331619,"byte_end":331622,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ If `url` is present on the user's profile, so will this field. Twitter validates the URL","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331627,"byte_end":331719,"line_start":371,"line_end":371,"column_start":5,"column_end":97}},{"value":"/ entered to a user's profile when they save it, so this can be reasonably assumed to have URL","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331724,"byte_end":331820,"line_start":372,"line_end":372,"column_start":5,"column_end":101}},{"value":"/ information if it's present.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331825,"byte_end":331857,"line_start":373,"line_end":373,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332054,"byte_end":332070,"line_start":379,"line_end":379,"column_start":12,"column_end":28},"name":"UserEntityDetail","qualname":"::user::UserEntityDetail","value":"UserEntityDetail { urls }","parent":null,"children":[{"krate":0,"index":4710}],"decl_id":null,"docs":" Represents a collection of URL entity information paired with a specific user profile field.\n","sig":null,"attributes":[{"value":"/ Represents a collection of URL entity information paired with a specific user profile field.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":331900,"byte_end":331996,"line_start":377,"line_end":377,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":4710},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332319,"byte_end":332323,"line_start":384,"line_end":384,"column_start":9,"column_end":13},"name":"urls","qualname":"::user::UserEntityDetail::urls","value":"std::vec::Vec<entities::UrlEntity>","parent":{"krate":0,"index":4709},"children":[],"decl_id":null,"docs":" Collection of URL entity information.","sig":null,"attributes":[{"value":"/ Collection of URL entity information.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332077,"byte_end":332118,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332123,"byte_end":332126,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ There should be one of these per URL in the paired field. In the case of the user's","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332131,"byte_end":332218,"line_start":382,"line_end":382,"column_start":5,"column_end":92}},{"value":"/ `description`, if no URLs are present, this field will still be present, but empty.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332223,"byte_end":332310,"line_start":383,"line_end":383,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335948,"byte_end":335958,"line_start":475,"line_end":475,"column_start":12,"column_end":22},"name":"UserSearch","qualname":"::user::UserSearch","value":"UserSearch { page_num, page_size }","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341}],"decl_id":null,"docs":" Represents an active user search.","sig":null,"attributes":[{"value":"/ Represents an active user search.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332354,"byte_end":332391,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332392,"byte_end":332395,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ This struct is returned by [`search`][] and is meant to be used as a `Stream`. That means all","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332396,"byte_end":332493,"line_start":389,"line_end":389,"column_start":1,"column_end":98}},{"value":"/ the Stream adaptors are available:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332494,"byte_end":332532,"line_start":390,"line_end":390,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332533,"byte_end":332536,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`search`]: fn.search.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332537,"byte_end":332567,"line_start":392,"line_end":392,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332568,"byte_end":332571,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332572,"byte_end":332590,"line_start":394,"line_end":394,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332591,"byte_end":332617,"line_start":395,"line_end":395,"column_start":1,"column_end":27}},{"value":"/ use futures::{Stream, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332618,"byte_end":332669,"line_start":396,"line_end":396,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332670,"byte_end":332673,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332674,"byte_end":332694,"line_start":398,"line_end":398,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332695,"byte_end":332718,"line_start":399,"line_end":399,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332719,"byte_end":332761,"line_start":400,"line_end":400,"column_start":1,"column_end":43}},{"value":"/ egg_mode::user::search(\"rustlang\", &token).take(10).try_for_each(|resp| {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332762,"byte_end":332839,"line_start":401,"line_end":401,"column_start":1,"column_end":78}},{"value":"/     println!(\"{}\", resp.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332840,"byte_end":332881,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"/     futures::future::ready(Ok(()))","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332882,"byte_end":332920,"line_start":403,"line_end":403,"column_start":1,"column_end":39}},{"value":"/ }).await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332921,"byte_end":332943,"line_start":404,"line_end":404,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332944,"byte_end":332951,"line_start":405,"line_end":405,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332952,"byte_end":332959,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332960,"byte_end":332963,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ You can even collect the results, letting you get one set of rate-limit information for the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":332964,"byte_end":333059,"line_start":408,"line_end":408,"column_start":1,"column_end":96}},{"value":"/ entire search setup:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333060,"byte_end":333084,"line_start":409,"line_end":409,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333085,"byte_end":333088,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333089,"byte_end":333107,"line_start":411,"line_end":411,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333108,"byte_end":333134,"line_start":412,"line_end":412,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333135,"byte_end":333155,"line_start":413,"line_end":413,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333156,"byte_end":333179,"line_start":414,"line_end":414,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333180,"byte_end":333222,"line_start":415,"line_end":415,"column_start":1,"column_end":43}},{"value":"/ use futures::{Stream, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333223,"byte_end":333274,"line_start":416,"line_end":416,"column_start":1,"column_end":52}},{"value":"/ use egg_mode::Response;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333275,"byte_end":333302,"line_start":417,"line_end":417,"column_start":1,"column_end":28}},{"value":"/ use egg_mode::user::TwitterUser;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333303,"byte_end":333339,"line_start":418,"line_end":418,"column_start":1,"column_end":37}},{"value":"/ use egg_mode::error::Error;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333340,"byte_end":333371,"line_start":419,"line_end":419,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333372,"byte_end":333375,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ // Because Streams don't have a FromIterator adaptor, we load all the responses first, then","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333376,"byte_end":333471,"line_start":421,"line_end":421,"column_start":1,"column_end":96}},{"value":"/ // collect them into the final Vec","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333472,"byte_end":333510,"line_start":422,"line_end":422,"column_start":1,"column_end":39}},{"value":"/ let names: Result<Vec<TwitterUser>, Error> =","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333511,"byte_end":333559,"line_start":423,"line_end":423,"column_start":1,"column_end":49}},{"value":"/     egg_mode::user::search(\"rustlang\", &token)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333560,"byte_end":333610,"line_start":424,"line_end":424,"column_start":1,"column_end":51}},{"value":"/         .take(10)","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333611,"byte_end":333632,"line_start":425,"line_end":425,"column_start":1,"column_end":22}},{"value":"/         .try_collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333633,"byte_end":333669,"line_start":426,"line_end":426,"column_start":1,"column_end":37}},{"value":"/         .await","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333670,"byte_end":333688,"line_start":427,"line_end":427,"column_start":1,"column_end":19}},{"value":"/         .map(|res| res.into_iter().collect());","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333689,"byte_end":333739,"line_start":428,"line_end":428,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333740,"byte_end":333747,"line_start":429,"line_end":429,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333748,"byte_end":333755,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333756,"byte_end":333759,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ `UserSearch` has a couple adaptors of its own that you can use before consuming it.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333760,"byte_end":333847,"line_start":432,"line_end":432,"column_start":1,"column_end":88}},{"value":"/ `with_page_size` will let you set how many users are pulled in with a single network call, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333848,"byte_end":333946,"line_start":433,"line_end":433,"column_start":1,"column_end":99}},{"value":"/ `start_at_page` lets you start your search at a specific page. Calling either of these after","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":333947,"byte_end":334043,"line_start":434,"line_end":434,"column_start":1,"column_end":97}},{"value":"/ starting iteration will clear any current results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334044,"byte_end":334098,"line_start":435,"line_end":435,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334099,"byte_end":334102,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ The `Stream` implementation yields `Response<TwitterUser>` on a successful iteration, and","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334103,"byte_end":334196,"line_start":437,"line_end":437,"column_start":1,"column_end":94}},{"value":"/ `Error` for errors, so network errors, rate-limit errors and other issues are passed directly","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334197,"byte_end":334294,"line_start":438,"line_end":438,"column_start":1,"column_end":98}},{"value":"/ through in `poll()`. The `Stream` implementation will allow you to poll again after an error to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334295,"byte_end":334394,"line_start":439,"line_end":439,"column_start":1,"column_end":100}},{"value":"/ re-initiate the late network call; this way, you can wait for your network connection to return","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334395,"byte_end":334494,"line_start":440,"line_end":440,"column_start":1,"column_end":100}},{"value":"/ or for your rate limit to refresh and try again from the same position.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334495,"byte_end":334570,"line_start":441,"line_end":441,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334571,"byte_end":334574,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ ## Manual paging","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334575,"byte_end":334595,"line_start":443,"line_end":443,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334596,"byte_end":334599,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ The `Stream` implementation works by loading in a page of results (with size set by default or","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334600,"byte_end":334698,"line_start":445,"line_end":445,"column_start":1,"column_end":99}},{"value":"/ by `with_page_size`/the `page_size` field) when it's polled, and serving the individual","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334699,"byte_end":334790,"line_start":446,"line_end":446,"column_start":1,"column_end":92}},{"value":"/ elements from that locally-cached page until it runs out. This can be nice, but it also means","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334791,"byte_end":334888,"line_start":447,"line_end":447,"column_start":1,"column_end":98}},{"value":"/ that your only warning that something involves a network call is that the stream returns","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334889,"byte_end":334981,"line_start":448,"line_end":448,"column_start":1,"column_end":93}},{"value":"/ `Poll::Pending`, by which time the network call has already started. If you want to know","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":334982,"byte_end":335074,"line_start":449,"line_end":449,"column_start":1,"column_end":93}},{"value":"/ that ahead of time, that's where the `call()` method comes in. By using `call()`, you can get","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335075,"byte_end":335172,"line_start":450,"line_end":450,"column_start":1,"column_end":98}},{"value":"/ a page of results directly from Twitter. With that you can iterate over the results and page","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335173,"byte_end":335269,"line_start":451,"line_end":451,"column_start":1,"column_end":97}},{"value":"/ forward and backward as needed:","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335270,"byte_end":335305,"line_start":452,"line_end":452,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335306,"byte_end":335309,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335310,"byte_end":335328,"line_start":454,"line_end":454,"column_start":1,"column_end":19}},{"value":"/ # use egg_mode::Token;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335329,"byte_end":335355,"line_start":455,"line_end":455,"column_start":1,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335356,"byte_end":335376,"line_start":456,"line_end":456,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335377,"byte_end":335400,"line_start":457,"line_end":457,"column_start":1,"column_end":24}},{"value":"/ # let token: Token = unimplemented!();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335401,"byte_end":335443,"line_start":458,"line_end":458,"column_start":1,"column_end":43}},{"value":"/ let mut search = egg_mode::user::search(\"rustlang\", &token).with_page_size(20);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335444,"byte_end":335527,"line_start":459,"line_end":459,"column_start":1,"column_end":84}},{"value":"/ let resp = search.call().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335528,"byte_end":335572,"line_start":460,"line_end":460,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335573,"byte_end":335576,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ for user in resp.response {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335577,"byte_end":335608,"line_start":462,"line_end":462,"column_start":1,"column_end":32}},{"value":"/    println!(\"{} (@{})\", user.name, user.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335609,"byte_end":335666,"line_start":463,"line_end":463,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335667,"byte_end":335672,"line_start":464,"line_end":464,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335673,"byte_end":335676,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ search.page_num += 1;","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335677,"byte_end":335702,"line_start":466,"line_end":466,"column_start":1,"column_end":26}},{"value":"/ let resp = search.call().await.unwrap();","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335703,"byte_end":335747,"line_start":467,"line_end":467,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335748,"byte_end":335751,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ for user in resp.response {","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335752,"byte_end":335783,"line_start":469,"line_end":469,"column_start":1,"column_end":32}},{"value":"/    println!(\"{} (@{})\", user.name, user.screen_name);","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335784,"byte_end":335841,"line_start":470,"line_end":470,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335842,"byte_end":335847,"line_start":471,"line_end":471,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335848,"byte_end":335855,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335856,"byte_end":335863,"line_start":473,"line_end":473,"column_start":1,"column_end":8}},{"value":"must_use = \"search iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":335864,"byte_end":335936,"line_start":474,"line_end":474,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336079,"byte_end":336087,"line_start":479,"line_end":479,"column_start":9,"column_end":17},"name":"page_num","qualname":"::user::UserSearch::page_num","value":"i32","parent":{"krate":0,"index":1335},"children":[],"decl_id":null,"docs":" The current page of results being returned, starting at 1.\n","sig":null,"attributes":[{"value":"/ The current page of results being returned, starting at 1.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336008,"byte_end":336070,"line_start":478,"line_end":478,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336189,"byte_end":336198,"line_start":481,"line_end":481,"column_start":9,"column_end":18},"name":"page_size","qualname":"::user::UserSearch::page_size","value":"i32","parent":{"krate":0,"index":1335},"children":[],"decl_id":null,"docs":" The number of user records per page of results. Defaults to 10, maximum of 20.\n","sig":null,"attributes":[{"value":"/ The number of user records per page of results. Defaults to 10, maximum of 20.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336098,"byte_end":336180,"line_start":480,"line_end":480,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336542,"byte_end":336556,"line_start":491,"line_end":491,"column_start":12,"column_end":26},"name":"with_page_size","qualname":"<UserSearch>::with_page_size","value":"fn (self, page_size: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the page size used for the search query.","sig":null,"attributes":[{"value":"/ Sets the page size used for the search query.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336343,"byte_end":336392,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336397,"byte_end":336400,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Calling this will invalidate any current search results, making the next call to `next()`","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336405,"byte_end":336498,"line_start":489,"line_end":489,"column_start":5,"column_end":98}},{"value":"/ perform a network call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336503,"byte_end":336530,"line_start":490,"line_end":490,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":337005,"byte_end":337018,"line_start":504,"line_end":504,"column_start":12,"column_end":25},"name":"start_at_page","qualname":"<UserSearch>::start_at_page","value":"fn (self, page_num: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the starting page number for the search query.","sig":null,"attributes":[{"value":"/ Sets the starting page number for the search query.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336753,"byte_end":336808,"line_start":500,"line_end":500,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336813,"byte_end":336816,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ The search method begins numbering pages at 1. Calling this will invalidate any current","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336821,"byte_end":336912,"line_start":502,"line_end":502,"column_start":5,"column_end":96}},{"value":"/ search results, making the next call to `next()` perform a network call.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336917,"byte_end":336993,"line_start":503,"line_end":503,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":337525,"byte_end":337529,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"call","qualname":"<UserSearch>::call","value":"fn (&self) -> impl Future<Output = error::Result<Response<Vec<TwitterUser>>>>","parent":null,"children":[],"decl_id":null,"docs":" Performs the search for the current page of results.","sig":null,"attributes":[{"value":"/ Performs the search for the current page of results.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":337212,"byte_end":337268,"line_start":513,"line_end":513,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":337273,"byte_end":337276,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This will automatically be called if you use the `UserSearch` as an iterator. This method is","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":337281,"byte_end":337377,"line_start":515,"line_end":515,"column_start":5,"column_end":101}},{"value":"/ made public for convenience if you want to manage the pagination yourself. Remember to","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":337382,"byte_end":337472,"line_start":516,"line_end":516,"column_start":5,"column_end":95}},{"value":"/ change `page_num` between calls.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":337477,"byte_end":337513,"line_start":517,"line_end":517,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4758},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339692,"byte_end":339704,"line_start":577,"line_end":577,"column_start":12,"column_end":24},"name":"Relationship","qualname":"::user::Relationship","value":"Relationship { target, source }","parent":null,"children":[{"krate":0,"index":4759},{"krate":0,"index":4760}],"decl_id":null,"docs":" Represents relationship settings between two Twitter accounts.\n","sig":null,"attributes":[{"value":"/ Represents relationship settings between two Twitter accounts.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339584,"byte_end":339650,"line_start":575,"line_end":575,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":4759},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339785,"byte_end":339791,"line_start":579,"line_end":579,"column_start":9,"column_end":15},"name":"target","qualname":"::user::Relationship::target","value":"user::RelationTarget","parent":{"krate":0,"index":4758},"children":[],"decl_id":null,"docs":" Contains settings from the perspective of the target account.\n","sig":null,"attributes":[{"value":"/ Contains settings from the perspective of the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339711,"byte_end":339776,"line_start":578,"line_end":578,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340127,"byte_end":340133,"line_start":586,"line_end":586,"column_start":9,"column_end":15},"name":"source","qualname":"::user::Relationship::source","value":"user::RelationSource","parent":{"krate":0,"index":4758},"children":[],"decl_id":null,"docs":" Contains settings from the perspective of the source account.","sig":null,"attributes":[{"value":"/ Contains settings from the perspective of the source account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339813,"byte_end":339878,"line_start":580,"line_end":580,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339883,"byte_end":339886,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ This contains more information than `target` if the source account is the same as the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339891,"byte_end":339980,"line_start":582,"line_end":582,"column_start":5,"column_end":94}},{"value":"/ authenticated user. See the [`RelationSource`][] page for details.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":339985,"byte_end":340055,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340060,"byte_end":340063,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`RelationSource`]: struct.RelationSource.html","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340068,"byte_end":340118,"line_start":585,"line_end":585,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340307,"byte_end":340321,"line_start":592,"line_end":592,"column_start":12,"column_end":26},"name":"RelationTarget","qualname":"::user::RelationTarget","value":"RelationTarget { id, screen_name, followed_by, following }","parent":null,"children":[{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4810}],"decl_id":null,"docs":" Represents relationship settings between two Twitter accounts, from the perspective of the\n target user.\n","sig":null,"attributes":[{"value":"/ Represents relationship settings between two Twitter accounts, from the perspective of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340154,"byte_end":340248,"line_start":589,"line_end":589,"column_start":1,"column_end":95}},{"value":"/ target user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340249,"byte_end":340265,"line_start":590,"line_end":590,"column_start":1,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":4807},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340369,"byte_end":340371,"line_start":594,"line_end":594,"column_start":9,"column_end":11},"name":"id","qualname":"::user::RelationTarget::id","value":"u64","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Numeric ID for this account.\n","sig":null,"attributes":[{"value":"/ Numeric ID for this account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340328,"byte_end":340360,"line_start":593,"line_end":593,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4808},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340424,"byte_end":340435,"line_start":596,"line_end":596,"column_start":9,"column_end":20},"name":"screen_name","qualname":"::user::RelationTarget::screen_name","value":"std::string::String","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Screen name for this account.\n","sig":null,"attributes":[{"value":"/ Screen name for this account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340382,"byte_end":340415,"line_start":595,"line_end":595,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4809},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340527,"byte_end":340538,"line_start":598,"line_end":598,"column_start":9,"column_end":20},"name":"followed_by","qualname":"::user::RelationTarget::followed_by","value":"bool","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Indicates whether the source account follows this target account.\n","sig":null,"attributes":[{"value":"/ Indicates whether the source account follows this target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340449,"byte_end":340518,"line_start":597,"line_end":597,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":4810},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340628,"byte_end":340637,"line_start":600,"line_end":600,"column_start":9,"column_end":18},"name":"following","qualname":"::user::RelationTarget::following","value":"bool","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Indicates whether this target account follows the source account.\n","sig":null,"attributes":[{"value":"/ Indicates whether this target account follows the source account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340550,"byte_end":340619,"line_start":599,"line_end":599,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4860},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341141,"byte_end":341155,"line_start":611,"line_end":611,"column_start":12,"column_end":26},"name":"RelationSource","qualname":"::user::RelationSource","value":"RelationSource { id, screen_name, following, followed_by, can_dm, blocking, marked_spam, want_retweets, notifications_enabled }","parent":null,"children":[{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870}],"decl_id":null,"docs":" Represents relationship settings between two Twitter accounts, from the perspective of the\n source user.","sig":null,"attributes":[{"value":"/ Represents relationship settings between two Twitter accounts, from the perspective of the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340648,"byte_end":340742,"line_start":603,"line_end":603,"column_start":1,"column_end":95}},{"value":"/ source user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340743,"byte_end":340759,"line_start":604,"line_end":604,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340760,"byte_end":340763,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ This struct holds more information than the `RelationTarget` struct, mainly attributes only","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340764,"byte_end":340859,"line_start":606,"line_end":606,"column_start":1,"column_end":96}},{"value":"/ visible to the user that set them. While you can see relationships between any two arbitrary","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340860,"byte_end":340956,"line_start":607,"line_end":607,"column_start":1,"column_end":97}},{"value":"/ users, if the \"source\" account is the same one whose access token you're using, you can see","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":340957,"byte_end":341052,"line_start":608,"line_end":608,"column_start":1,"column_end":96}},{"value":"/ extra information about this relationship.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341053,"byte_end":341099,"line_start":609,"line_end":609,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4861},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341203,"byte_end":341205,"line_start":613,"line_end":613,"column_start":9,"column_end":11},"name":"id","qualname":"::user::RelationSource::id","value":"u64","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Numeric ID for this account.\n","sig":null,"attributes":[{"value":"/ Numeric ID for this account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341162,"byte_end":341194,"line_start":612,"line_end":612,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341258,"byte_end":341269,"line_start":615,"line_end":615,"column_start":9,"column_end":20},"name":"screen_name","qualname":"::user::RelationSource::screen_name","value":"std::string::String","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Screen name for this account.\n","sig":null,"attributes":[{"value":"/ Screen name for this account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341216,"byte_end":341249,"line_start":614,"line_end":614,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4863},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341361,"byte_end":341370,"line_start":617,"line_end":617,"column_start":9,"column_end":18},"name":"following","qualname":"::user::RelationSource::following","value":"bool","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Indicates whether this source account follows the target account.\n","sig":null,"attributes":[{"value":"/ Indicates whether this source account follows the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341283,"byte_end":341352,"line_start":616,"line_end":616,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":4864},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341460,"byte_end":341471,"line_start":619,"line_end":619,"column_start":9,"column_end":20},"name":"followed_by","qualname":"::user::RelationSource::followed_by","value":"bool","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Indicates whether the target account follows this source account.\n","sig":null,"attributes":[{"value":"/ Indicates whether the target account follows this source account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341382,"byte_end":341451,"line_start":618,"line_end":618,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":4865},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341737,"byte_end":341743,"line_start":624,"line_end":624,"column_start":9,"column_end":15},"name":"can_dm","qualname":"::user::RelationSource::can_dm","value":"bool","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Indicates whether this source account can send a direct message to the target account.","sig":null,"attributes":[{"value":"/ Indicates whether this source account can send a direct message to the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341483,"byte_end":341573,"line_start":620,"line_end":620,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341578,"byte_end":341581,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ If `followed_by` is false but this is true, that could indicate that the target account has","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341586,"byte_end":341681,"line_start":622,"line_end":622,"column_start":5,"column_end":100}},{"value":"/ allowed anyone to direct-message them.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341686,"byte_end":341728,"line_start":623,"line_end":623,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341920,"byte_end":341928,"line_start":627,"line_end":627,"column_start":9,"column_end":17},"name":"blocking","qualname":"::user::RelationSource::blocking","value":"std::option::Option<bool>","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Indicates whether this source account is blocking the target account. If the source account\n is not the authenticated user, holds `None` instead.\n","sig":null,"attributes":[{"value":"/ Indicates whether this source account is blocking the target account. If the source account","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341755,"byte_end":341850,"line_start":625,"line_end":625,"column_start":5,"column_end":100}},{"value":"/ is not the authenticated user, holds `None` instead.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341855,"byte_end":341911,"line_start":626,"line_end":626,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4867},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342123,"byte_end":342134,"line_start":630,"line_end":630,"column_start":9,"column_end":20},"name":"marked_spam","qualname":"::user::RelationSource::marked_spam","value":"std::option::Option<bool>","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Indicates whether this source account has reported the target account for spam. If the source\n account is not the authenticated user, holds `None` instead.\n","sig":null,"attributes":[{"value":"/ Indicates whether this source account has reported the target account for spam. If the source","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":341948,"byte_end":342045,"line_start":628,"line_end":628,"column_start":5,"column_end":102}},{"value":"/ account is not the authenticated user, holds `None` instead.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342050,"byte_end":342114,"line_start":629,"line_end":629,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342748,"byte_end":342761,"line_start":639,"line_end":639,"column_start":9,"column_end":22},"name":"want_retweets","qualname":"::user::RelationSource::want_retweets","value":"std::option::Option<bool>","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Indicates whether this source account has decided to show retweets from the target account.\n If the source account is not the authenticated user, holds `None` instead.\n","sig":null,"attributes":[{"value":"/ Indicates whether this source account has decided to show retweets from the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342561,"byte_end":342656,"line_start":637,"line_end":637,"column_start":5,"column_end":100}},{"value":"/ If the source account is not the authenticated user, holds `None` instead.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342661,"byte_end":342739,"line_start":638,"line_end":638,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":4870},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342982,"byte_end":343003,"line_start":642,"line_end":642,"column_start":9,"column_end":30},"name":"notifications_enabled","qualname":"::user::RelationSource::notifications_enabled","value":"std::option::Option<bool>","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" Indicates whether this source account has decided to receive mobile notifications for the\n target account. If the source account is not the authenticated user, holds `None` instead.\n","sig":null,"attributes":[{"value":"/ Indicates whether this source account has decided to receive mobile notifications for the","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342781,"byte_end":342874,"line_start":640,"line_end":640,"column_start":5,"column_end":98}},{"value":"/ target account. If the source account is not the authenticated user, holds `None` instead.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":342879,"byte_end":342973,"line_start":641,"line_end":641,"column_start":5,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343252,"byte_end":343266,"line_start":650,"line_end":650,"column_start":12,"column_end":26},"name":"RelationLookup","qualname":"::user::RelationLookup","value":"RelationLookup { name, screen_name, id, connections }","parent":null,"children":[{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4936}],"decl_id":null,"docs":" Represents the relation the authenticated user has to a given account.","sig":null,"attributes":[{"value":"/ Represents the relation the authenticated user has to a given account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343022,"byte_end":343096,"line_start":645,"line_end":645,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343097,"byte_end":343100,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ This is returned by `relation_lookup`, as opposed to `Relationship`, which is returned by","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343101,"byte_end":343194,"line_start":647,"line_end":647,"column_start":1,"column_end":94}},{"value":"/ `relation`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343195,"byte_end":343210,"line_start":648,"line_end":648,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":4933},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343325,"byte_end":343329,"line_start":652,"line_end":652,"column_start":9,"column_end":13},"name":"name","qualname":"::user::RelationLookup::name","value":"std::string::String","parent":{"krate":0,"index":4932},"children":[],"decl_id":null,"docs":" The display name of the target account.\n","sig":null,"attributes":[{"value":"/ The display name of the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343273,"byte_end":343316,"line_start":651,"line_end":651,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":4934},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343394,"byte_end":343405,"line_start":654,"line_end":654,"column_start":9,"column_end":20},"name":"screen_name","qualname":"::user::RelationLookup::screen_name","value":"std::string::String","parent":{"krate":0,"index":4932},"children":[],"decl_id":null,"docs":" The screen name of the target account.\n","sig":null,"attributes":[{"value":"/ The screen name of the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343343,"byte_end":343385,"line_start":653,"line_end":653,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4935},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343469,"byte_end":343471,"line_start":656,"line_end":656,"column_start":9,"column_end":11},"name":"id","qualname":"::user::RelationLookup::id","value":"u64","parent":{"krate":0,"index":4932},"children":[],"decl_id":null,"docs":" The numeric ID of the target account.\n","sig":null,"attributes":[{"value":"/ The numeric ID of the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343419,"byte_end":343460,"line_start":655,"line_end":655,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4936},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343708,"byte_end":343719,"line_start":661,"line_end":661,"column_start":9,"column_end":20},"name":"connections","qualname":"::user::RelationLookup::connections","value":"std::vec::Vec<user::Connection>","parent":{"krate":0,"index":4932},"children":[],"decl_id":null,"docs":" The ways the target account is connected to the authenticated user.","sig":null,"attributes":[{"value":"/ The ways the target account is connected to the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343482,"byte_end":343553,"line_start":657,"line_end":657,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343558,"byte_end":343561,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ If the target account has no relation to the authenticated user, this will not be empty; its","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343566,"byte_end":343662,"line_start":659,"line_end":659,"column_start":5,"column_end":101}},{"value":"/ only element will be `None`.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343667,"byte_end":343699,"line_start":660,"line_end":660,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343949,"byte_end":343953,"line_start":669,"line_end":669,"column_start":5,"column_end":9},"name":"None","qualname":"::user::Connection::None","value":"Connection::None","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":" The target account has no relation.\n","sig":null,"attributes":[{"value":"/ The target account has no relation.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343875,"byte_end":343914,"line_start":667,"line_end":667,"column_start":5,"column_end":44}},{"value":"serde(rename = \"none\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343919,"byte_end":343944,"line_start":668,"line_end":668,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344079,"byte_end":344097,"line_start":672,"line_end":672,"column_start":5,"column_end":23},"name":"FollowingRequested","qualname":"::user::Connection::FollowingRequested","value":"Connection::FollowingRequested","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":" The authenticated user has requested to follow the target account.\n","sig":null,"attributes":[{"value":"/ The authenticated user has requested to follow the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343959,"byte_end":344029,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"serde(rename = \"following_requested\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344034,"byte_end":344074,"line_start":671,"line_end":671,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344222,"byte_end":344239,"line_start":675,"line_end":675,"column_start":5,"column_end":22},"name":"FollowingReceived","qualname":"::user::Connection::FollowingReceived","value":"Connection::FollowingReceived","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":" The target account has requested to follow the authenticated user.\n","sig":null,"attributes":[{"value":"/ The target account has requested to follow the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344103,"byte_end":344173,"line_start":673,"line_end":673,"column_start":5,"column_end":75}},{"value":"serde(rename = \"following_received\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344178,"byte_end":344217,"line_start":674,"line_end":674,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4993},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344341,"byte_end":344351,"line_start":678,"line_end":678,"column_start":5,"column_end":15},"name":"FollowedBy","qualname":"::user::Connection::FollowedBy","value":"Connection::FollowedBy","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":" The target account follows the authenticated user.\n","sig":null,"attributes":[{"value":"/ The target account follows the authenticated user.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344245,"byte_end":344299,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"serde(rename = \"followed_by\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344304,"byte_end":344336,"line_start":677,"line_end":677,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344451,"byte_end":344460,"line_start":681,"line_end":681,"column_start":5,"column_end":14},"name":"Following","qualname":"::user::Connection::Following","value":"Connection::Following","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":" The authenticated user follows the target account.\n","sig":null,"attributes":[{"value":"/ The authenticated user follows the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344357,"byte_end":344411,"line_start":679,"line_end":679,"column_start":5,"column_end":59}},{"value":"serde(rename = \"following\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344416,"byte_end":344446,"line_start":680,"line_end":680,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344563,"byte_end":344571,"line_start":684,"line_end":684,"column_start":5,"column_end":13},"name":"Blocking","qualname":"::user::Connection::Blocking","value":"Connection::Blocking","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":" The authenticated user has blocked the target account.\n","sig":null,"attributes":[{"value":"/ The authenticated user has blocked the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344466,"byte_end":344524,"line_start":682,"line_end":682,"column_start":5,"column_end":63}},{"value":"serde(rename = \"blocking\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344529,"byte_end":344558,"line_start":683,"line_end":683,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4999},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344670,"byte_end":344676,"line_start":687,"line_end":687,"column_start":5,"column_end":11},"name":"Muting","qualname":"::user::Connection::Muting","value":"Connection::Muting","parent":{"krate":0,"index":4986},"children":[],"decl_id":null,"docs":" The authenticated user has muted the target account.\n","sig":null,"attributes":[{"value":"/ The authenticated user has muted the target account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344577,"byte_end":344633,"line_start":685,"line_end":685,"column_start":5,"column_end":61}},{"value":"serde(rename = \"muting\")","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":344638,"byte_end":344665,"line_start":686,"line_end":686,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":4986},"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343858,"byte_end":343868,"line_start":666,"line_end":666,"column_start":10,"column_end":20},"name":"Connection","qualname":"::user::Connection","value":"Connection::{None, FollowingRequested, FollowingReceived, FollowedBy, Following, Blocking, Muting}","parent":null,"children":[{"krate":0,"index":4987},{"krate":0,"index":4989},{"krate":0,"index":4991},{"krate":0,"index":4993},{"krate":0,"index":4995},{"krate":0,"index":4997},{"krate":0,"index":4999}],"decl_id":null,"docs":" Represents the ways a target account can be connected to another account.\n","sig":null,"attributes":[{"value":"/ Represents the ways a target account can be connected to another account.","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":343741,"byte_end":343818,"line_start":664,"line_end":664,"column_start":1,"column_end":78}}]}],"impls":[{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27325,"byte_end":27333,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31329,"byte_end":31338,"line_start":162,"line_end":162,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15565,"byte_end":15574,"line_start":140,"line_end":140,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":19431,"byte_end":19437,"line_start":241,"line_end":241,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":20893,"byte_end":20900,"line_start":298,"line_end":298,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63170,"byte_end":63184,"line_start":37,"line_end":37,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":71568,"byte_end":71579,"line_start":224,"line_end":224,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":76533,"byte_end":76543,"line_start":353,"line_end":353,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":77354,"byte_end":77366,"line_start":380,"line_end":380,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43171,"byte_end":43178,"line_start":230,"line_end":230,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83088,"byte_end":83098,"line_start":58,"line_end":58,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83944,"byte_end":83952,"line_start":90,"line_end":90,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84794,"byte_end":84804,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90452,"byte_end":90462,"line_start":260,"line_end":260,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":92794,"byte_end":92804,"line_start":323,"line_end":323,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":98194,"byte_end":98207,"line_start":98,"line_end":98,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105014,"byte_end":105022,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113363,"byte_end":113383,"line_start":459,"line_end":459,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132140,"byte_end":132153,"line_start":43,"line_end":43,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132946,"byte_end":132962,"line_start":72,"line_end":72,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151507,"byte_end":151513,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155011,"byte_end":155021,"line_start":194,"line_end":194,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172907,"byte_end":172919,"line_start":108,"line_end":108,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174818,"byte_end":174829,"line_start":162,"line_end":162,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175180,"byte_end":175191,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175940,"byte_end":175953,"line_start":198,"line_end":198,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185374,"byte_end":185386,"line_start":109,"line_end":109,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186702,"byte_end":186716,"line_start":144,"line_end":144,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190190,"byte_end":190203,"line_start":235,"line_end":235,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":194507,"byte_end":194516,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":194960,"byte_end":194968,"line_start":349,"line_end":349,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215136,"byte_end":215146,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216053,"byte_end":216066,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":219963,"byte_end":219975,"line_start":227,"line_end":227,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":221055,"byte_end":221067,"line_start":258,"line_end":258,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":231268,"byte_end":231283,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":234392,"byte_end":234398,"line_start":278,"line_end":278,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247840,"byte_end":247853,"line_start":142,"line_end":142,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250002,"byte_end":250015,"line_start":195,"line_end":195,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250576,"byte_end":250589,"line_start":216,"line_end":216,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250829,"byte_end":250842,"line_start":227,"line_end":227,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254360,"byte_end":254371,"line_start":317,"line_end":317,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255538,"byte_end":255551,"line_start":346,"line_end":346,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261286,"byte_end":261297,"line_start":505,"line_end":505,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261542,"byte_end":261553,"line_start":515,"line_end":515,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":273291,"byte_end":273296,"line_start":236,"line_end":236,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276687,"byte_end":276698,"line_start":324,"line_end":324,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284072,"byte_end":284080,"line_start":503,"line_end":503,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287741,"byte_end":287755,"line_start":610,"line_end":610,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292172,"byte_end":292182,"line_start":719,"line_end":719,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319496,"byte_end":319502,"line_start":100,"line_end":100,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319620,"byte_end":319626,"line_start":106,"line_end":106,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328489,"byte_end":328500,"line_start":297,"line_end":297,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336326,"byte_end":336336,"line_start":486,"line_end":486,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":338351,"byte_end":338361,"line_start":541,"line_end":541,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8220,"byte_end":8224,"line_start":166,"line_end":166,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":135}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8234,"byte_end":8240,"line_start":167,"line_end":167,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":257}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8250,"byte_end":8256,"line_start":168,"line_end":168,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":315}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8266,"byte_end":8274,"line_start":169,"line_end":169,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":429}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8284,"byte_end":8289,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":441}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8310,"byte_end":8314,"line_start":172,"line_end":172,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":552}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8324,"byte_end":8329,"line_start":173,"line_end":173,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":665}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8339,"byte_end":8344,"line_start":174,"line_end":174,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":711}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8354,"byte_end":8357,"line_start":175,"line_end":175,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":818}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8367,"byte_end":8373,"line_start":176,"line_end":176,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":841}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8383,"byte_end":8390,"line_start":177,"line_end":177,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":899}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8400,"byte_end":8406,"line_start":178,"line_end":178,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":972}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8416,"byte_end":8421,"line_start":179,"line_end":179,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1050}},{"kind":"Mod","span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\lib.rs","byte_start":8431,"byte_end":8435,"line_start":180,"line_end":180,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1220}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":27325,"byte_end":27333,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\response.rs","byte_start":31329,"byte_end":31338,"line_start":162,"line_end":162,"column_start":28,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1446},"to":{"krate":2,"index":1830}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":15565,"byte_end":15574,"line_start":140,"line_end":140,"column_start":6,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":19431,"byte_end":19437,"line_start":241,"line_end":241,"column_start":42,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":2,"index":29902},"to":{"krate":0,"index":95}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\common\\mod.rs","byte_start":20893,"byte_end":20900,"line_start":298,"line_end":298,"column_start":30,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":4972}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":63170,"byte_end":63184,"line_start":37,"line_end":37,"column_start":10,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":71568,"byte_end":71579,"line_start":224,"line_end":224,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":76533,"byte_end":76543,"line_start":353,"line_end":353,"column_start":6,"column_end":16},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth\\raw.rs","byte_start":77354,"byte_end":77366,"line_start":380,"line_end":380,"column_start":23,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":213},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\auth.rs","byte_start":43171,"byte_end":43178,"line_start":230,"line_end":230,"column_start":6,"column_end":13},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83088,"byte_end":83098,"line_start":58,"line_end":58,"column_start":17,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":273}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":83944,"byte_end":83952,"line_start":90,"line_end":90,"column_start":17,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1747},"to":{"krate":0,"index":273}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":84794,"byte_end":84804,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1796},"to":{"krate":0,"index":273}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":90452,"byte_end":90462,"line_start":260,"line_end":260,"column_start":9,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\cursor.rs","byte_start":92794,"byte_end":92804,"line_start":323,"line_end":323,"column_start":20,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":293},"to":{"krate":36,"index":68}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":98194,"byte_end":98207,"line_start":98,"line_end":98,"column_start":32,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1936},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":105014,"byte_end":105022,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\direct\\mod.rs","byte_start":113363,"byte_end":113383,"line_start":459,"line_end":459,"column_start":6,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132140,"byte_end":132153,"line_start":43,"line_end":43,"column_start":23,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\error.rs","byte_start":132946,"byte_end":132962,"line_start":72,"line_end":72,"column_start":23,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":151507,"byte_end":151513,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\list\\mod.rs","byte_start":155011,"byte_end":155021,"line_start":194,"line_end":194,"column_start":6,"column_end":16},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":172907,"byte_end":172919,"line_start":108,"line_end":108,"column_start":32,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2972},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":174818,"byte_end":174829,"line_start":162,"line_end":162,"column_start":25,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3160},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175180,"byte_end":175191,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\media\\mod.rs","byte_start":175940,"byte_end":175953,"line_start":198,"line_end":198,"column_start":28,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3168},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":185374,"byte_end":185386,"line_start":109,"line_end":109,"column_start":32,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":753},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":186702,"byte_end":186716,"line_start":144,"line_end":144,"column_start":6,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":190190,"byte_end":190203,"line_start":235,"line_end":235,"column_start":6,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":194507,"byte_end":194516,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\place\\mod.rs","byte_start":194960,"byte_end":194968,"line_start":349,"line_end":349,"column_start":23,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3345},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":215136,"byte_end":215146,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3357},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":216053,"byte_end":216066,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":219963,"byte_end":219975,"line_start":227,"line_end":227,"column_start":32,"column_end":44},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3480},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\search.rs","byte_start":221055,"byte_end":221067,"line_start":258,"line_end":258,"column_start":6,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":231268,"byte_end":231283,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3545},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\service.rs","byte_start":234392,"byte_end":234398,"line_start":278,"line_end":278,"column_start":18,"column_end":24},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":947},"to":{"krate":2,"index":7706}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":247840,"byte_end":247853,"line_start":142,"line_end":142,"column_start":32,"column_end":45},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3735},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250002,"byte_end":250015,"line_start":195,"line_end":195,"column_start":18,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3735},"to":{"krate":2,"index":7706}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250576,"byte_end":250589,"line_start":216,"line_end":216,"column_start":6,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":250829,"byte_end":250842,"line_start":227,"line_end":227,"column_start":17,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1008},"to":{"krate":36,"index":68}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":254360,"byte_end":254371,"line_start":317,"line_end":317,"column_start":30,"column_end":41},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3788},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":255538,"byte_end":255551,"line_start":346,"line_end":346,"column_start":6,"column_end":19},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261286,"byte_end":261297,"line_start":505,"line_end":505,"column_start":30,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3841},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\stream\\mod.rs","byte_start":261542,"byte_end":261553,"line_start":515,"line_end":515,"column_start":6,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":273291,"byte_end":273296,"line_start":236,"line_end":236,"column_start":32,"column_end":37},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4188},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":276687,"byte_end":276698,"line_start":324,"line_end":324,"column_start":18,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":7706}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":284072,"byte_end":284080,"line_start":503,"line_end":503,"column_start":6,"column_end":14},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":287741,"byte_end":287755,"line_start":610,"line_end":610,"column_start":17,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":8300}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\tweet\\mod.rs","byte_start":292172,"byte_end":292182,"line_start":719,"line_end":719,"column_start":6,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319496,"byte_end":319502,"line_start":100,"line_end":100,"column_start":33,"column_end":39},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":319620,"byte_end":319626,"line_start":106,"line_end":106,"column_start":23,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":328489,"byte_end":328500,"line_start":297,"line_end":297,"column_start":32,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4612},"to":{"krate":20,"index":1192}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":336326,"byte_end":336336,"line_start":486,"line_end":486,"column_start":6,"column_end":16},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\soren\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egg-mode-0.15.0\\src\\user\\mod.rs","byte_start":338351,"byte_end":338361,"line_start":541,"line_end":541,"column_start":17,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1335},"to":{"krate":36,"index":68}}]}